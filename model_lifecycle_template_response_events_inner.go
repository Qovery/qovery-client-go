/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the LifecycleTemplateResponseEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LifecycleTemplateResponseEventsInner{}

// LifecycleTemplateResponseEventsInner struct for LifecycleTemplateResponseEventsInner
type LifecycleTemplateResponseEventsInner struct {
	Name                 string   `json:"name"`
	Entrpoint            *string  `json:"entrpoint,omitempty"`
	Command              []string `json:"command"`
	AdditionalProperties map[string]interface{}
}

type _LifecycleTemplateResponseEventsInner LifecycleTemplateResponseEventsInner

// NewLifecycleTemplateResponseEventsInner instantiates a new LifecycleTemplateResponseEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLifecycleTemplateResponseEventsInner(name string, command []string) *LifecycleTemplateResponseEventsInner {
	this := LifecycleTemplateResponseEventsInner{}
	this.Name = name
	this.Command = command
	return &this
}

// NewLifecycleTemplateResponseEventsInnerWithDefaults instantiates a new LifecycleTemplateResponseEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLifecycleTemplateResponseEventsInnerWithDefaults() *LifecycleTemplateResponseEventsInner {
	this := LifecycleTemplateResponseEventsInner{}
	return &this
}

// GetName returns the Name field value
func (o *LifecycleTemplateResponseEventsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LifecycleTemplateResponseEventsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LifecycleTemplateResponseEventsInner) SetName(v string) {
	o.Name = v
}

// GetEntrpoint returns the Entrpoint field value if set, zero value otherwise.
func (o *LifecycleTemplateResponseEventsInner) GetEntrpoint() string {
	if o == nil || IsNil(o.Entrpoint) {
		var ret string
		return ret
	}
	return *o.Entrpoint
}

// GetEntrpointOk returns a tuple with the Entrpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LifecycleTemplateResponseEventsInner) GetEntrpointOk() (*string, bool) {
	if o == nil || IsNil(o.Entrpoint) {
		return nil, false
	}
	return o.Entrpoint, true
}

// HasEntrpoint returns a boolean if a field has been set.
func (o *LifecycleTemplateResponseEventsInner) HasEntrpoint() bool {
	if o != nil && !IsNil(o.Entrpoint) {
		return true
	}

	return false
}

// SetEntrpoint gets a reference to the given string and assigns it to the Entrpoint field.
func (o *LifecycleTemplateResponseEventsInner) SetEntrpoint(v string) {
	o.Entrpoint = &v
}

// GetCommand returns the Command field value
func (o *LifecycleTemplateResponseEventsInner) GetCommand() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *LifecycleTemplateResponseEventsInner) GetCommandOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Command, true
}

// SetCommand sets field value
func (o *LifecycleTemplateResponseEventsInner) SetCommand(v []string) {
	o.Command = v
}

func (o LifecycleTemplateResponseEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LifecycleTemplateResponseEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Entrpoint) {
		toSerialize["entrpoint"] = o.Entrpoint
	}
	toSerialize["command"] = o.Command

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LifecycleTemplateResponseEventsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"command",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLifecycleTemplateResponseEventsInner := _LifecycleTemplateResponseEventsInner{}

	err = json.Unmarshal(data, &varLifecycleTemplateResponseEventsInner)

	if err != nil {
		return err
	}

	*o = LifecycleTemplateResponseEventsInner(varLifecycleTemplateResponseEventsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "entrpoint")
		delete(additionalProperties, "command")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLifecycleTemplateResponseEventsInner struct {
	value *LifecycleTemplateResponseEventsInner
	isSet bool
}

func (v NullableLifecycleTemplateResponseEventsInner) Get() *LifecycleTemplateResponseEventsInner {
	return v.value
}

func (v *NullableLifecycleTemplateResponseEventsInner) Set(val *LifecycleTemplateResponseEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLifecycleTemplateResponseEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLifecycleTemplateResponseEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLifecycleTemplateResponseEventsInner(val *LifecycleTemplateResponseEventsInner) *NullableLifecycleTemplateResponseEventsInner {
	return &NullableLifecycleTemplateResponseEventsInner{value: val, isSet: true}
}

func (v NullableLifecycleTemplateResponseEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLifecycleTemplateResponseEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
