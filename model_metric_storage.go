/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// MetricStorage struct for MetricStorage
type MetricStorage struct {
	StorageId *string                  `json:"storage_id,omitempty"`
	Data      []MetricStorageDatapoint `json:"data"`
}

// NewMetricStorage instantiates a new MetricStorage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricStorage(data []MetricStorageDatapoint) *MetricStorage {
	this := MetricStorage{}
	this.Data = data
	return &this
}

// NewMetricStorageWithDefaults instantiates a new MetricStorage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricStorageWithDefaults() *MetricStorage {
	this := MetricStorage{}
	return &this
}

// GetStorageId returns the StorageId field value if set, zero value otherwise.
func (o *MetricStorage) GetStorageId() string {
	if o == nil || o.StorageId == nil {
		var ret string
		return ret
	}
	return *o.StorageId
}

// GetStorageIdOk returns a tuple with the StorageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStorage) GetStorageIdOk() (*string, bool) {
	if o == nil || o.StorageId == nil {
		return nil, false
	}
	return o.StorageId, true
}

// HasStorageId returns a boolean if a field has been set.
func (o *MetricStorage) HasStorageId() bool {
	if o != nil && o.StorageId != nil {
		return true
	}

	return false
}

// SetStorageId gets a reference to the given string and assigns it to the StorageId field.
func (o *MetricStorage) SetStorageId(v string) {
	o.StorageId = &v
}

// GetData returns the Data field value
func (o *MetricStorage) GetData() []MetricStorageDatapoint {
	if o == nil {
		var ret []MetricStorageDatapoint
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *MetricStorage) GetDataOk() ([]MetricStorageDatapoint, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *MetricStorage) SetData(v []MetricStorageDatapoint) {
	o.Data = v
}

func (o MetricStorage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StorageId != nil {
		toSerialize["storage_id"] = o.StorageId
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableMetricStorage struct {
	value *MetricStorage
	isSet bool
}

func (v NullableMetricStorage) Get() *MetricStorage {
	return v.value
}

func (v *NullableMetricStorage) Set(val *MetricStorage) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricStorage) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricStorage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricStorage(val *MetricStorage) *NullableMetricStorage {
	return &NullableMetricStorage{value: val, isSet: true}
}

func (v NullableMetricStorage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricStorage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
