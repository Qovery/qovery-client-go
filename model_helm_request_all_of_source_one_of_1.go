/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the HelmRequestAllOfSourceOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelmRequestAllOfSourceOneOf1{}

// HelmRequestAllOfSourceOneOf1 struct for HelmRequestAllOfSourceOneOf1
type HelmRequestAllOfSourceOneOf1 struct {
	HelmRepository       *HelmRequestAllOfSourceOneOf1HelmRepository `json:"helm_repository,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HelmRequestAllOfSourceOneOf1 HelmRequestAllOfSourceOneOf1

// NewHelmRequestAllOfSourceOneOf1 instantiates a new HelmRequestAllOfSourceOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmRequestAllOfSourceOneOf1() *HelmRequestAllOfSourceOneOf1 {
	this := HelmRequestAllOfSourceOneOf1{}
	return &this
}

// NewHelmRequestAllOfSourceOneOf1WithDefaults instantiates a new HelmRequestAllOfSourceOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmRequestAllOfSourceOneOf1WithDefaults() *HelmRequestAllOfSourceOneOf1 {
	this := HelmRequestAllOfSourceOneOf1{}
	return &this
}

// GetHelmRepository returns the HelmRepository field value if set, zero value otherwise.
func (o *HelmRequestAllOfSourceOneOf1) GetHelmRepository() HelmRequestAllOfSourceOneOf1HelmRepository {
	if o == nil || IsNil(o.HelmRepository) {
		var ret HelmRequestAllOfSourceOneOf1HelmRepository
		return ret
	}
	return *o.HelmRepository
}

// GetHelmRepositoryOk returns a tuple with the HelmRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRequestAllOfSourceOneOf1) GetHelmRepositoryOk() (*HelmRequestAllOfSourceOneOf1HelmRepository, bool) {
	if o == nil || IsNil(o.HelmRepository) {
		return nil, false
	}
	return o.HelmRepository, true
}

// HasHelmRepository returns a boolean if a field has been set.
func (o *HelmRequestAllOfSourceOneOf1) HasHelmRepository() bool {
	if o != nil && !IsNil(o.HelmRepository) {
		return true
	}

	return false
}

// SetHelmRepository gets a reference to the given HelmRequestAllOfSourceOneOf1HelmRepository and assigns it to the HelmRepository field.
func (o *HelmRequestAllOfSourceOneOf1) SetHelmRepository(v HelmRequestAllOfSourceOneOf1HelmRepository) {
	o.HelmRepository = &v
}

func (o HelmRequestAllOfSourceOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelmRequestAllOfSourceOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HelmRepository) {
		toSerialize["helm_repository"] = o.HelmRepository
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HelmRequestAllOfSourceOneOf1) UnmarshalJSON(data []byte) (err error) {
	varHelmRequestAllOfSourceOneOf1 := _HelmRequestAllOfSourceOneOf1{}

	err = json.Unmarshal(data, &varHelmRequestAllOfSourceOneOf1)

	if err != nil {
		return err
	}

	*o = HelmRequestAllOfSourceOneOf1(varHelmRequestAllOfSourceOneOf1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "helm_repository")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHelmRequestAllOfSourceOneOf1 struct {
	value *HelmRequestAllOfSourceOneOf1
	isSet bool
}

func (v NullableHelmRequestAllOfSourceOneOf1) Get() *HelmRequestAllOfSourceOneOf1 {
	return v.value
}

func (v *NullableHelmRequestAllOfSourceOneOf1) Set(val *HelmRequestAllOfSourceOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmRequestAllOfSourceOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmRequestAllOfSourceOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmRequestAllOfSourceOneOf1(val *HelmRequestAllOfSourceOneOf1) *NullableHelmRequestAllOfSourceOneOf1 {
	return &NullableHelmRequestAllOfSourceOneOf1{value: val, isSet: true}
}

func (v NullableHelmRequestAllOfSourceOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmRequestAllOfSourceOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
