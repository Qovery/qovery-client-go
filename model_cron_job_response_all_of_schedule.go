/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the CronJobResponseAllOfSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CronJobResponseAllOfSchedule{}

// CronJobResponseAllOfSchedule struct for CronJobResponseAllOfSchedule
type CronJobResponseAllOfSchedule struct {
	Cronjob              CronJobResponseAllOfScheduleCronjob `json:"cronjob"`
	AdditionalProperties map[string]interface{}
}

type _CronJobResponseAllOfSchedule CronJobResponseAllOfSchedule

// NewCronJobResponseAllOfSchedule instantiates a new CronJobResponseAllOfSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCronJobResponseAllOfSchedule(cronjob CronJobResponseAllOfScheduleCronjob) *CronJobResponseAllOfSchedule {
	this := CronJobResponseAllOfSchedule{}
	this.Cronjob = cronjob
	return &this
}

// NewCronJobResponseAllOfScheduleWithDefaults instantiates a new CronJobResponseAllOfSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCronJobResponseAllOfScheduleWithDefaults() *CronJobResponseAllOfSchedule {
	this := CronJobResponseAllOfSchedule{}
	return &this
}

// GetCronjob returns the Cronjob field value
func (o *CronJobResponseAllOfSchedule) GetCronjob() CronJobResponseAllOfScheduleCronjob {
	if o == nil {
		var ret CronJobResponseAllOfScheduleCronjob
		return ret
	}

	return o.Cronjob
}

// GetCronjobOk returns a tuple with the Cronjob field value
// and a boolean to check if the value has been set.
func (o *CronJobResponseAllOfSchedule) GetCronjobOk() (*CronJobResponseAllOfScheduleCronjob, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cronjob, true
}

// SetCronjob sets field value
func (o *CronJobResponseAllOfSchedule) SetCronjob(v CronJobResponseAllOfScheduleCronjob) {
	o.Cronjob = v
}

func (o CronJobResponseAllOfSchedule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CronJobResponseAllOfSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cronjob"] = o.Cronjob

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CronJobResponseAllOfSchedule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cronjob",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCronJobResponseAllOfSchedule := _CronJobResponseAllOfSchedule{}

	err = json.Unmarshal(data, &varCronJobResponseAllOfSchedule)

	if err != nil {
		return err
	}

	*o = CronJobResponseAllOfSchedule(varCronJobResponseAllOfSchedule)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cronjob")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCronJobResponseAllOfSchedule struct {
	value *CronJobResponseAllOfSchedule
	isSet bool
}

func (v NullableCronJobResponseAllOfSchedule) Get() *CronJobResponseAllOfSchedule {
	return v.value
}

func (v *NullableCronJobResponseAllOfSchedule) Set(val *CronJobResponseAllOfSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableCronJobResponseAllOfSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableCronJobResponseAllOfSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCronJobResponseAllOfSchedule(val *CronJobResponseAllOfSchedule) *NullableCronJobResponseAllOfSchedule {
	return &NullableCronJobResponseAllOfSchedule{value: val, isSet: true}
}

func (v NullableCronJobResponseAllOfSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCronJobResponseAllOfSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
