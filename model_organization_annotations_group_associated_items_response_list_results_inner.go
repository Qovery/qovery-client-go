/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner{}

// OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner struct for OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner
type OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner struct {
	ClusterId            *string                            `json:"cluster_id,omitempty"`
	ClusterName          *string                            `json:"cluster_name,omitempty"`
	ProjectId            *string                            `json:"project_id,omitempty"`
	ProjectName          *string                            `json:"project_name,omitempty"`
	EnvironmentId        *string                            `json:"environment_id,omitempty"`
	EnvironmentName      *string                            `json:"environment_name,omitempty"`
	ItemId               string                             `json:"item_id"`
	ItemName             string                             `json:"item_name"`
	ItemType             AnnotationsGroupAssociatedItemType `json:"item_type"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner

// NewOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner instantiates a new OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner(itemId string, itemName string, itemType AnnotationsGroupAssociatedItemType) *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner {
	this := OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner{}
	this.ItemId = itemId
	this.ItemName = itemName
	this.ItemType = itemType
	return &this
}

// NewOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInnerWithDefaults instantiates a new OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInnerWithDefaults() *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner {
	this := OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetEnvironmentName returns the EnvironmentName field value if set, zero value otherwise.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetEnvironmentName() string {
	if o == nil || IsNil(o.EnvironmentName) {
		var ret string
		return ret
	}
	return *o.EnvironmentName
}

// GetEnvironmentNameOk returns a tuple with the EnvironmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetEnvironmentNameOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentName) {
		return nil, false
	}
	return o.EnvironmentName, true
}

// HasEnvironmentName returns a boolean if a field has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) HasEnvironmentName() bool {
	if o != nil && !IsNil(o.EnvironmentName) {
		return true
	}

	return false
}

// SetEnvironmentName gets a reference to the given string and assigns it to the EnvironmentName field.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) SetEnvironmentName(v string) {
	o.EnvironmentName = &v
}

// GetItemId returns the ItemId field value
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemId, true
}

// SetItemId sets field value
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) SetItemId(v string) {
	o.ItemId = v
}

// GetItemName returns the ItemName field value
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetItemName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetItemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemName, true
}

// SetItemName sets field value
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) SetItemName(v string) {
	o.ItemName = v
}

// GetItemType returns the ItemType field value
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetItemType() AnnotationsGroupAssociatedItemType {
	if o == nil {
		var ret AnnotationsGroupAssociatedItemType
		return ret
	}

	return o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) GetItemTypeOk() (*AnnotationsGroupAssociatedItemType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemType, true
}

// SetItemType sets field value
func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) SetItemType(v AnnotationsGroupAssociatedItemType) {
	o.ItemType = v
}

func (o OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.ClusterName) {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.ProjectName) {
		toSerialize["project_name"] = o.ProjectName
	}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if !IsNil(o.EnvironmentName) {
		toSerialize["environment_name"] = o.EnvironmentName
	}
	toSerialize["item_id"] = o.ItemId
	toSerialize["item_name"] = o.ItemName
	toSerialize["item_type"] = o.ItemType

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"item_id",
		"item_name",
		"item_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner := _OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner{}

	err = json.Unmarshal(data, &varOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner)

	if err != nil {
		return err
	}

	*o = OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner(varOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cluster_id")
		delete(additionalProperties, "cluster_name")
		delete(additionalProperties, "project_id")
		delete(additionalProperties, "project_name")
		delete(additionalProperties, "environment_id")
		delete(additionalProperties, "environment_name")
		delete(additionalProperties, "item_id")
		delete(additionalProperties, "item_name")
		delete(additionalProperties, "item_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner struct {
	value *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner
	isSet bool
}

func (v NullableOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) Get() *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner {
	return v.value
}

func (v *NullableOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) Set(val *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner(val *OrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) *NullableOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner {
	return &NullableOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner{value: val, isSet: true}
}

func (v NullableOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationAnnotationsGroupAssociatedItemsResponseListResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
