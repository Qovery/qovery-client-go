/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ContainerRegistryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerRegistryResponse{}

// ContainerRegistryResponse struct for ContainerRegistryResponse
type ContainerRegistryResponse struct {
	Id          string                     `json:"id"`
	CreatedAt   time.Time                  `json:"created_at"`
	UpdatedAt   *time.Time                 `json:"updated_at,omitempty"`
	Name        *string                    `json:"name,omitempty"`
	Kind        *ContainerRegistryKindEnum `json:"kind,omitempty"`
	Description *string                    `json:"description,omitempty"`
	// URL of the container registry
	Url     *string                                `json:"url,omitempty"`
	Cluster *ContainerRegistryResponseAllOfCluster `json:"cluster,omitempty"`
	// The number of services using this container registry
	AssociatedServicesCount *int32                                `json:"associated_services_count,omitempty"`
	Config                  *ContainerRegistryResponseAllOfConfig `json:"config,omitempty"`
	AdditionalProperties    map[string]interface{}
}

type _ContainerRegistryResponse ContainerRegistryResponse

// NewContainerRegistryResponse instantiates a new ContainerRegistryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerRegistryResponse(id string, createdAt time.Time) *ContainerRegistryResponse {
	this := ContainerRegistryResponse{}
	this.Id = id
	this.CreatedAt = createdAt
	return &this
}

// NewContainerRegistryResponseWithDefaults instantiates a new ContainerRegistryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerRegistryResponseWithDefaults() *ContainerRegistryResponse {
	this := ContainerRegistryResponse{}
	return &this
}

// GetId returns the Id field value
func (o *ContainerRegistryResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ContainerRegistryResponse) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ContainerRegistryResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ContainerRegistryResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ContainerRegistryResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ContainerRegistryResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ContainerRegistryResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ContainerRegistryResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ContainerRegistryResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ContainerRegistryResponse) SetName(v string) {
	o.Name = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ContainerRegistryResponse) GetKind() ContainerRegistryKindEnum {
	if o == nil || IsNil(o.Kind) {
		var ret ContainerRegistryKindEnum
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponse) GetKindOk() (*ContainerRegistryKindEnum, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ContainerRegistryResponse) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given ContainerRegistryKindEnum and assigns it to the Kind field.
func (o *ContainerRegistryResponse) SetKind(v ContainerRegistryKindEnum) {
	o.Kind = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ContainerRegistryResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ContainerRegistryResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ContainerRegistryResponse) SetDescription(v string) {
	o.Description = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ContainerRegistryResponse) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponse) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ContainerRegistryResponse) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ContainerRegistryResponse) SetUrl(v string) {
	o.Url = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ContainerRegistryResponse) GetCluster() ContainerRegistryResponseAllOfCluster {
	if o == nil || IsNil(o.Cluster) {
		var ret ContainerRegistryResponseAllOfCluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponse) GetClusterOk() (*ContainerRegistryResponseAllOfCluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ContainerRegistryResponse) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ContainerRegistryResponseAllOfCluster and assigns it to the Cluster field.
func (o *ContainerRegistryResponse) SetCluster(v ContainerRegistryResponseAllOfCluster) {
	o.Cluster = &v
}

// GetAssociatedServicesCount returns the AssociatedServicesCount field value if set, zero value otherwise.
func (o *ContainerRegistryResponse) GetAssociatedServicesCount() int32 {
	if o == nil || IsNil(o.AssociatedServicesCount) {
		var ret int32
		return ret
	}
	return *o.AssociatedServicesCount
}

// GetAssociatedServicesCountOk returns a tuple with the AssociatedServicesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponse) GetAssociatedServicesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AssociatedServicesCount) {
		return nil, false
	}
	return o.AssociatedServicesCount, true
}

// HasAssociatedServicesCount returns a boolean if a field has been set.
func (o *ContainerRegistryResponse) HasAssociatedServicesCount() bool {
	if o != nil && !IsNil(o.AssociatedServicesCount) {
		return true
	}

	return false
}

// SetAssociatedServicesCount gets a reference to the given int32 and assigns it to the AssociatedServicesCount field.
func (o *ContainerRegistryResponse) SetAssociatedServicesCount(v int32) {
	o.AssociatedServicesCount = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ContainerRegistryResponse) GetConfig() ContainerRegistryResponseAllOfConfig {
	if o == nil || IsNil(o.Config) {
		var ret ContainerRegistryResponseAllOfConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponse) GetConfigOk() (*ContainerRegistryResponseAllOfConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ContainerRegistryResponse) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ContainerRegistryResponseAllOfConfig and assigns it to the Config field.
func (o *ContainerRegistryResponse) SetConfig(v ContainerRegistryResponseAllOfConfig) {
	o.Config = &v
}

func (o ContainerRegistryResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerRegistryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.AssociatedServicesCount) {
		toSerialize["associated_services_count"] = o.AssociatedServicesCount
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ContainerRegistryResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContainerRegistryResponse := _ContainerRegistryResponse{}

	err = json.Unmarshal(data, &varContainerRegistryResponse)

	if err != nil {
		return err
	}

	*o = ContainerRegistryResponse(varContainerRegistryResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "name")
		delete(additionalProperties, "kind")
		delete(additionalProperties, "description")
		delete(additionalProperties, "url")
		delete(additionalProperties, "cluster")
		delete(additionalProperties, "associated_services_count")
		delete(additionalProperties, "config")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableContainerRegistryResponse struct {
	value *ContainerRegistryResponse
	isSet bool
}

func (v NullableContainerRegistryResponse) Get() *ContainerRegistryResponse {
	return v.value
}

func (v *NullableContainerRegistryResponse) Set(val *ContainerRegistryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerRegistryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerRegistryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerRegistryResponse(val *ContainerRegistryResponse) *NullableContainerRegistryResponse {
	return &NullableContainerRegistryResponse{value: val, isSet: true}
}

func (v NullableContainerRegistryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerRegistryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
