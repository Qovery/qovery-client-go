/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the EnvironmentLogsDetailsStage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentLogsDetailsStage{}

// EnvironmentLogsDetailsStage struct for EnvironmentLogsDetailsStage
type EnvironmentLogsDetailsStage struct {
	Step                 *string        `json:"step,omitempty"`
	Id                   NullableString `json:"id,omitempty"`
	Name                 NullableString `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EnvironmentLogsDetailsStage EnvironmentLogsDetailsStage

// NewEnvironmentLogsDetailsStage instantiates a new EnvironmentLogsDetailsStage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentLogsDetailsStage() *EnvironmentLogsDetailsStage {
	this := EnvironmentLogsDetailsStage{}
	return &this
}

// NewEnvironmentLogsDetailsStageWithDefaults instantiates a new EnvironmentLogsDetailsStage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentLogsDetailsStageWithDefaults() *EnvironmentLogsDetailsStage {
	this := EnvironmentLogsDetailsStage{}
	return &this
}

// GetStep returns the Step field value if set, zero value otherwise.
func (o *EnvironmentLogsDetailsStage) GetStep() string {
	if o == nil || IsNil(o.Step) {
		var ret string
		return ret
	}
	return *o.Step
}

// GetStepOk returns a tuple with the Step field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLogsDetailsStage) GetStepOk() (*string, bool) {
	if o == nil || IsNil(o.Step) {
		return nil, false
	}
	return o.Step, true
}

// HasStep returns a boolean if a field has been set.
func (o *EnvironmentLogsDetailsStage) HasStep() bool {
	if o != nil && !IsNil(o.Step) {
		return true
	}

	return false
}

// SetStep gets a reference to the given string and assigns it to the Step field.
func (o *EnvironmentLogsDetailsStage) SetStep(v string) {
	o.Step = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvironmentLogsDetailsStage) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvironmentLogsDetailsStage) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *EnvironmentLogsDetailsStage) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *EnvironmentLogsDetailsStage) SetId(v string) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *EnvironmentLogsDetailsStage) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *EnvironmentLogsDetailsStage) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvironmentLogsDetailsStage) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvironmentLogsDetailsStage) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *EnvironmentLogsDetailsStage) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *EnvironmentLogsDetailsStage) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *EnvironmentLogsDetailsStage) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *EnvironmentLogsDetailsStage) UnsetName() {
	o.Name.Unset()
}

func (o EnvironmentLogsDetailsStage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentLogsDetailsStage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Step) {
		toSerialize["step"] = o.Step
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EnvironmentLogsDetailsStage) UnmarshalJSON(data []byte) (err error) {
	varEnvironmentLogsDetailsStage := _EnvironmentLogsDetailsStage{}

	err = json.Unmarshal(data, &varEnvironmentLogsDetailsStage)

	if err != nil {
		return err
	}

	*o = EnvironmentLogsDetailsStage(varEnvironmentLogsDetailsStage)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "step")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEnvironmentLogsDetailsStage struct {
	value *EnvironmentLogsDetailsStage
	isSet bool
}

func (v NullableEnvironmentLogsDetailsStage) Get() *EnvironmentLogsDetailsStage {
	return v.value
}

func (v *NullableEnvironmentLogsDetailsStage) Set(val *EnvironmentLogsDetailsStage) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentLogsDetailsStage) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentLogsDetailsStage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentLogsDetailsStage(val *EnvironmentLogsDetailsStage) *NullableEnvironmentLogsDetailsStage {
	return &NullableEnvironmentLogsDetailsStage{value: val, isSet: true}
}

func (v NullableEnvironmentLogsDetailsStage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentLogsDetailsStage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
