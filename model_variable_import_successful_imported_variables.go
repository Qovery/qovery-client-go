/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// VariableImportSuccessfulImportedVariables struct for VariableImportSuccessfulImportedVariables
type VariableImportSuccessfulImportedVariables struct {
	Name string `json:"name"`
	// Optional if the variable is secret
	Value    *string                      `json:"value,omitempty"`
	Scope    EnvironmentVariableScopeEnum `json:"scope"`
	IsSecret bool                         `json:"is_secret"`
}

// NewVariableImportSuccessfulImportedVariables instantiates a new VariableImportSuccessfulImportedVariables object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableImportSuccessfulImportedVariables(name string, scope EnvironmentVariableScopeEnum, isSecret bool) *VariableImportSuccessfulImportedVariables {
	this := VariableImportSuccessfulImportedVariables{}
	this.Name = name
	this.Scope = scope
	this.IsSecret = isSecret
	return &this
}

// NewVariableImportSuccessfulImportedVariablesWithDefaults instantiates a new VariableImportSuccessfulImportedVariables object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableImportSuccessfulImportedVariablesWithDefaults() *VariableImportSuccessfulImportedVariables {
	this := VariableImportSuccessfulImportedVariables{}
	return &this
}

// GetName returns the Name field value
func (o *VariableImportSuccessfulImportedVariables) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VariableImportSuccessfulImportedVariables) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VariableImportSuccessfulImportedVariables) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *VariableImportSuccessfulImportedVariables) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableImportSuccessfulImportedVariables) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *VariableImportSuccessfulImportedVariables) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *VariableImportSuccessfulImportedVariables) SetValue(v string) {
	o.Value = &v
}

// GetScope returns the Scope field value
func (o *VariableImportSuccessfulImportedVariables) GetScope() EnvironmentVariableScopeEnum {
	if o == nil {
		var ret EnvironmentVariableScopeEnum
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *VariableImportSuccessfulImportedVariables) GetScopeOk() (*EnvironmentVariableScopeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *VariableImportSuccessfulImportedVariables) SetScope(v EnvironmentVariableScopeEnum) {
	o.Scope = v
}

// GetIsSecret returns the IsSecret field value
func (o *VariableImportSuccessfulImportedVariables) GetIsSecret() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSecret
}

// GetIsSecretOk returns a tuple with the IsSecret field value
// and a boolean to check if the value has been set.
func (o *VariableImportSuccessfulImportedVariables) GetIsSecretOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSecret, true
}

// SetIsSecret sets field value
func (o *VariableImportSuccessfulImportedVariables) SetIsSecret(v bool) {
	o.IsSecret = v
}

func (o VariableImportSuccessfulImportedVariables) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["scope"] = o.Scope
	}
	if true {
		toSerialize["is_secret"] = o.IsSecret
	}
	return json.Marshal(toSerialize)
}

type NullableVariableImportSuccessfulImportedVariables struct {
	value *VariableImportSuccessfulImportedVariables
	isSet bool
}

func (v NullableVariableImportSuccessfulImportedVariables) Get() *VariableImportSuccessfulImportedVariables {
	return v.value
}

func (v *NullableVariableImportSuccessfulImportedVariables) Set(val *VariableImportSuccessfulImportedVariables) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableImportSuccessfulImportedVariables) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableImportSuccessfulImportedVariables) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableImportSuccessfulImportedVariables(val *VariableImportSuccessfulImportedVariables) *NullableVariableImportSuccessfulImportedVariables {
	return &NullableVariableImportSuccessfulImportedVariables{value: val, isSet: true}
}

func (v NullableVariableImportSuccessfulImportedVariables) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableImportSuccessfulImportedVariables) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
