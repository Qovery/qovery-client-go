/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// DeployAllRequestApplications struct for DeployAllRequestApplications
type DeployAllRequestApplications struct {
	// id of the application to be deployed.
	ApplicationId string `json:"application_id"`
	// Commit ID to deploy.
	GitCommitId string `json:"git_commit_id"`
}

// NewDeployAllRequestApplications instantiates a new DeployAllRequestApplications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployAllRequestApplications(applicationId string, gitCommitId string) *DeployAllRequestApplications {
	this := DeployAllRequestApplications{}
	this.ApplicationId = applicationId
	this.GitCommitId = gitCommitId
	return &this
}

// NewDeployAllRequestApplicationsWithDefaults instantiates a new DeployAllRequestApplications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployAllRequestApplicationsWithDefaults() *DeployAllRequestApplications {
	this := DeployAllRequestApplications{}
	return &this
}

// GetApplicationId returns the ApplicationId field value
func (o *DeployAllRequestApplications) GetApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *DeployAllRequestApplications) GetApplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *DeployAllRequestApplications) SetApplicationId(v string) {
	o.ApplicationId = v
}

// GetGitCommitId returns the GitCommitId field value
func (o *DeployAllRequestApplications) GetGitCommitId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GitCommitId
}

// GetGitCommitIdOk returns a tuple with the GitCommitId field value
// and a boolean to check if the value has been set.
func (o *DeployAllRequestApplications) GetGitCommitIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GitCommitId, true
}

// SetGitCommitId sets field value
func (o *DeployAllRequestApplications) SetGitCommitId(v string) {
	o.GitCommitId = v
}

func (o DeployAllRequestApplications) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["application_id"] = o.ApplicationId
	}
	if true {
		toSerialize["git_commit_id"] = o.GitCommitId
	}
	return json.Marshal(toSerialize)
}

type NullableDeployAllRequestApplications struct {
	value *DeployAllRequestApplications
	isSet bool
}

func (v NullableDeployAllRequestApplications) Get() *DeployAllRequestApplications {
	return v.value
}

func (v *NullableDeployAllRequestApplications) Set(val *DeployAllRequestApplications) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployAllRequestApplications) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployAllRequestApplications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployAllRequestApplications(val *DeployAllRequestApplications) *NullableDeployAllRequestApplications {
	return &NullableDeployAllRequestApplications{value: val, isSet: true}
}

func (v NullableDeployAllRequestApplications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployAllRequestApplications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
