/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ProjectCurrentCostResponseAllOf struct for ProjectCurrentCostResponseAllOf
type ProjectCurrentCostResponseAllOf struct {
	Environments []GenericObjectCurrentCostResponse `json:"environments,omitempty"`
}

// NewProjectCurrentCostResponseAllOf instantiates a new ProjectCurrentCostResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectCurrentCostResponseAllOf() *ProjectCurrentCostResponseAllOf {
	this := ProjectCurrentCostResponseAllOf{}
	return &this
}

// NewProjectCurrentCostResponseAllOfWithDefaults instantiates a new ProjectCurrentCostResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectCurrentCostResponseAllOfWithDefaults() *ProjectCurrentCostResponseAllOf {
	this := ProjectCurrentCostResponseAllOf{}
	return &this
}

// GetEnvironments returns the Environments field value if set, zero value otherwise.
func (o *ProjectCurrentCostResponseAllOf) GetEnvironments() []GenericObjectCurrentCostResponse {
	if o == nil || o.Environments == nil {
		var ret []GenericObjectCurrentCostResponse
		return ret
	}
	return o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectCurrentCostResponseAllOf) GetEnvironmentsOk() ([]GenericObjectCurrentCostResponse, bool) {
	if o == nil || o.Environments == nil {
		return nil, false
	}
	return o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *ProjectCurrentCostResponseAllOf) HasEnvironments() bool {
	if o != nil && o.Environments != nil {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given []GenericObjectCurrentCostResponse and assigns it to the Environments field.
func (o *ProjectCurrentCostResponseAllOf) SetEnvironments(v []GenericObjectCurrentCostResponse) {
	o.Environments = v
}

func (o ProjectCurrentCostResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Environments != nil {
		toSerialize["environments"] = o.Environments
	}
	return json.Marshal(toSerialize)
}

type NullableProjectCurrentCostResponseAllOf struct {
	value *ProjectCurrentCostResponseAllOf
	isSet bool
}

func (v NullableProjectCurrentCostResponseAllOf) Get() *ProjectCurrentCostResponseAllOf {
	return v.value
}

func (v *NullableProjectCurrentCostResponseAllOf) Set(val *ProjectCurrentCostResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectCurrentCostResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectCurrentCostResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectCurrentCostResponseAllOf(val *ProjectCurrentCostResponseAllOf) *NullableProjectCurrentCostResponseAllOf {
	return &NullableProjectCurrentCostResponseAllOf{value: val, isSet: true}
}

func (v NullableProjectCurrentCostResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectCurrentCostResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
