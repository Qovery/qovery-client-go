/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the VariableEditRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableEditRequest{}

// VariableEditRequest struct for VariableEditRequest
type VariableEditRequest struct {
	// the key of the environment variable
	Key string `json:"key"`
	// the value of the environment variable
	Value string `json:"value"`
	// optional variable description (255 characters maximum)
	Description          NullableString `json:"description,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VariableEditRequest VariableEditRequest

// NewVariableEditRequest instantiates a new VariableEditRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableEditRequest(key string, value string) *VariableEditRequest {
	this := VariableEditRequest{}
	this.Key = key
	this.Value = value
	return &this
}

// NewVariableEditRequestWithDefaults instantiates a new VariableEditRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableEditRequestWithDefaults() *VariableEditRequest {
	this := VariableEditRequest{}
	return &this
}

// GetKey returns the Key field value
func (o *VariableEditRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *VariableEditRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *VariableEditRequest) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *VariableEditRequest) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VariableEditRequest) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VariableEditRequest) SetValue(v string) {
	o.Value = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VariableEditRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VariableEditRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *VariableEditRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *VariableEditRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *VariableEditRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *VariableEditRequest) UnsetDescription() {
	o.Description.Unset()
}

func (o VariableEditRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableEditRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["value"] = o.Value
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VariableEditRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"key",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVariableEditRequest := _VariableEditRequest{}

	err = json.Unmarshal(data, &varVariableEditRequest)

	if err != nil {
		return err
	}

	*o = VariableEditRequest(varVariableEditRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "key")
		delete(additionalProperties, "value")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVariableEditRequest struct {
	value *VariableEditRequest
	isSet bool
}

func (v NullableVariableEditRequest) Get() *VariableEditRequest {
	return v.value
}

func (v *NullableVariableEditRequest) Set(val *VariableEditRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableEditRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableEditRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableEditRequest(val *VariableEditRequest) *NullableVariableEditRequest {
	return &NullableVariableEditRequest{value: val, isSet: true}
}

func (v NullableVariableEditRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableEditRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
