/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the OrganizationBillingUsageReportResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationBillingUsageReportResponse{}

// OrganizationBillingUsageReportResponse struct for OrganizationBillingUsageReportResponse
type OrganizationBillingUsageReportResponse struct {
	// The URL of the report
	ReportUrl *string `json:"report_url,omitempty"`
	// The URL to delete the report. Use this URL to pro-actively delete the report before it expires
	DeleteReportUrl      *string `json:"delete_report_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationBillingUsageReportResponse OrganizationBillingUsageReportResponse

// NewOrganizationBillingUsageReportResponse instantiates a new OrganizationBillingUsageReportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationBillingUsageReportResponse() *OrganizationBillingUsageReportResponse {
	this := OrganizationBillingUsageReportResponse{}
	return &this
}

// NewOrganizationBillingUsageReportResponseWithDefaults instantiates a new OrganizationBillingUsageReportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationBillingUsageReportResponseWithDefaults() *OrganizationBillingUsageReportResponse {
	this := OrganizationBillingUsageReportResponse{}
	return &this
}

// GetReportUrl returns the ReportUrl field value if set, zero value otherwise.
func (o *OrganizationBillingUsageReportResponse) GetReportUrl() string {
	if o == nil || IsNil(o.ReportUrl) {
		var ret string
		return ret
	}
	return *o.ReportUrl
}

// GetReportUrlOk returns a tuple with the ReportUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationBillingUsageReportResponse) GetReportUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReportUrl) {
		return nil, false
	}
	return o.ReportUrl, true
}

// HasReportUrl returns a boolean if a field has been set.
func (o *OrganizationBillingUsageReportResponse) HasReportUrl() bool {
	if o != nil && !IsNil(o.ReportUrl) {
		return true
	}

	return false
}

// SetReportUrl gets a reference to the given string and assigns it to the ReportUrl field.
func (o *OrganizationBillingUsageReportResponse) SetReportUrl(v string) {
	o.ReportUrl = &v
}

// GetDeleteReportUrl returns the DeleteReportUrl field value if set, zero value otherwise.
func (o *OrganizationBillingUsageReportResponse) GetDeleteReportUrl() string {
	if o == nil || IsNil(o.DeleteReportUrl) {
		var ret string
		return ret
	}
	return *o.DeleteReportUrl
}

// GetDeleteReportUrlOk returns a tuple with the DeleteReportUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationBillingUsageReportResponse) GetDeleteReportUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DeleteReportUrl) {
		return nil, false
	}
	return o.DeleteReportUrl, true
}

// HasDeleteReportUrl returns a boolean if a field has been set.
func (o *OrganizationBillingUsageReportResponse) HasDeleteReportUrl() bool {
	if o != nil && !IsNil(o.DeleteReportUrl) {
		return true
	}

	return false
}

// SetDeleteReportUrl gets a reference to the given string and assigns it to the DeleteReportUrl field.
func (o *OrganizationBillingUsageReportResponse) SetDeleteReportUrl(v string) {
	o.DeleteReportUrl = &v
}

func (o OrganizationBillingUsageReportResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationBillingUsageReportResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportUrl) {
		toSerialize["report_url"] = o.ReportUrl
	}
	if !IsNil(o.DeleteReportUrl) {
		toSerialize["delete_report_url"] = o.DeleteReportUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationBillingUsageReportResponse) UnmarshalJSON(data []byte) (err error) {
	varOrganizationBillingUsageReportResponse := _OrganizationBillingUsageReportResponse{}

	err = json.Unmarshal(data, &varOrganizationBillingUsageReportResponse)

	if err != nil {
		return err
	}

	*o = OrganizationBillingUsageReportResponse(varOrganizationBillingUsageReportResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "report_url")
		delete(additionalProperties, "delete_report_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationBillingUsageReportResponse struct {
	value *OrganizationBillingUsageReportResponse
	isSet bool
}

func (v NullableOrganizationBillingUsageReportResponse) Get() *OrganizationBillingUsageReportResponse {
	return v.value
}

func (v *NullableOrganizationBillingUsageReportResponse) Set(val *OrganizationBillingUsageReportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationBillingUsageReportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationBillingUsageReportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationBillingUsageReportResponse(val *OrganizationBillingUsageReportResponse) *NullableOrganizationBillingUsageReportResponse {
	return &NullableOrganizationBillingUsageReportResponse{value: val, isSet: true}
}

func (v NullableOrganizationBillingUsageReportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationBillingUsageReportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
