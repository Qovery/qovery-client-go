/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// Link struct for Link
type Link struct {
	Url            *string `json:"url,omitempty"`
	Port           *int32  `json:"port,omitempty"`
	IsQoveryDomain *bool   `json:"is_qovery_domain,omitempty"`
	IsDefault      *bool   `json:"is_default,omitempty"`
}

// NewLink instantiates a new Link object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLink() *Link {
	this := Link{}
	return &this
}

// NewLinkWithDefaults instantiates a new Link object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkWithDefaults() *Link {
	this := Link{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Link) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Link) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Link) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Link) SetUrl(v string) {
	o.Url = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *Link) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Link) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *Link) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *Link) SetPort(v int32) {
	o.Port = &v
}

// GetIsQoveryDomain returns the IsQoveryDomain field value if set, zero value otherwise.
func (o *Link) GetIsQoveryDomain() bool {
	if o == nil || o.IsQoveryDomain == nil {
		var ret bool
		return ret
	}
	return *o.IsQoveryDomain
}

// GetIsQoveryDomainOk returns a tuple with the IsQoveryDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Link) GetIsQoveryDomainOk() (*bool, bool) {
	if o == nil || o.IsQoveryDomain == nil {
		return nil, false
	}
	return o.IsQoveryDomain, true
}

// HasIsQoveryDomain returns a boolean if a field has been set.
func (o *Link) HasIsQoveryDomain() bool {
	if o != nil && o.IsQoveryDomain != nil {
		return true
	}

	return false
}

// SetIsQoveryDomain gets a reference to the given bool and assigns it to the IsQoveryDomain field.
func (o *Link) SetIsQoveryDomain(v bool) {
	o.IsQoveryDomain = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *Link) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Link) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *Link) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *Link) SetIsDefault(v bool) {
	o.IsDefault = &v
}

func (o Link) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.IsQoveryDomain != nil {
		toSerialize["is_qovery_domain"] = o.IsQoveryDomain
	}
	if o.IsDefault != nil {
		toSerialize["is_default"] = o.IsDefault
	}
	return json.Marshal(toSerialize)
}

type NullableLink struct {
	value *Link
	isSet bool
}

func (v NullableLink) Get() *Link {
	return v.value
}

func (v *NullableLink) Set(val *Link) {
	v.value = val
	v.isSet = true
}

func (v NullableLink) IsSet() bool {
	return v.isSet
}

func (v *NullableLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLink(val *Link) *NullableLink {
	return &NullableLink{value: val, isSet: true}
}

func (v NullableLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
