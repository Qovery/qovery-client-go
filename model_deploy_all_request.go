/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// DeployAllRequest struct for DeployAllRequest
type DeployAllRequest struct {
	Applications []DeployAllRequestApplicationsInner `json:"applications,omitempty"`
}

// NewDeployAllRequest instantiates a new DeployAllRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployAllRequest() *DeployAllRequest {
	this := DeployAllRequest{}
	return &this
}

// NewDeployAllRequestWithDefaults instantiates a new DeployAllRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployAllRequestWithDefaults() *DeployAllRequest {
	this := DeployAllRequest{}
	return &this
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *DeployAllRequest) GetApplications() []DeployAllRequestApplicationsInner {
	if o == nil || o.Applications == nil {
		var ret []DeployAllRequestApplicationsInner
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployAllRequest) GetApplicationsOk() ([]DeployAllRequestApplicationsInner, bool) {
	if o == nil || o.Applications == nil {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *DeployAllRequest) HasApplications() bool {
	if o != nil && o.Applications != nil {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []DeployAllRequestApplicationsInner and assigns it to the Applications field.
func (o *DeployAllRequest) SetApplications(v []DeployAllRequestApplicationsInner) {
	o.Applications = v
}

func (o DeployAllRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Applications != nil {
		toSerialize["applications"] = o.Applications
	}
	return json.Marshal(toSerialize)
}

type NullableDeployAllRequest struct {
	value *DeployAllRequest
	isSet bool
}

func (v NullableDeployAllRequest) Get() *DeployAllRequest {
	return v.value
}

func (v *NullableDeployAllRequest) Set(val *DeployAllRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployAllRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployAllRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployAllRequest(val *DeployAllRequest) *NullableDeployAllRequest {
	return &NullableDeployAllRequest{value: val, isSet: true}
}

func (v NullableDeployAllRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployAllRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
