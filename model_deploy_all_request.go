/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the DeployAllRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployAllRequest{}

// DeployAllRequest struct for DeployAllRequest
type DeployAllRequest struct {
	Applications []DeployAllRequestApplicationsInner `json:"applications,omitempty"`
	Databases    []string                            `json:"databases,omitempty"`
	Containers   []DeployAllRequestContainersInner   `json:"containers,omitempty"`
	Jobs         []DeployAllRequestJobsInner         `json:"jobs,omitempty"`
}

// NewDeployAllRequest instantiates a new DeployAllRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployAllRequest() *DeployAllRequest {
	this := DeployAllRequest{}
	return &this
}

// NewDeployAllRequestWithDefaults instantiates a new DeployAllRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployAllRequestWithDefaults() *DeployAllRequest {
	this := DeployAllRequest{}
	return &this
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *DeployAllRequest) GetApplications() []DeployAllRequestApplicationsInner {
	if o == nil || IsNil(o.Applications) {
		var ret []DeployAllRequestApplicationsInner
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployAllRequest) GetApplicationsOk() ([]DeployAllRequestApplicationsInner, bool) {
	if o == nil || IsNil(o.Applications) {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *DeployAllRequest) HasApplications() bool {
	if o != nil && !IsNil(o.Applications) {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []DeployAllRequestApplicationsInner and assigns it to the Applications field.
func (o *DeployAllRequest) SetApplications(v []DeployAllRequestApplicationsInner) {
	o.Applications = v
}

// GetDatabases returns the Databases field value if set, zero value otherwise.
func (o *DeployAllRequest) GetDatabases() []string {
	if o == nil || IsNil(o.Databases) {
		var ret []string
		return ret
	}
	return o.Databases
}

// GetDatabasesOk returns a tuple with the Databases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployAllRequest) GetDatabasesOk() ([]string, bool) {
	if o == nil || IsNil(o.Databases) {
		return nil, false
	}
	return o.Databases, true
}

// HasDatabases returns a boolean if a field has been set.
func (o *DeployAllRequest) HasDatabases() bool {
	if o != nil && !IsNil(o.Databases) {
		return true
	}

	return false
}

// SetDatabases gets a reference to the given []string and assigns it to the Databases field.
func (o *DeployAllRequest) SetDatabases(v []string) {
	o.Databases = v
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *DeployAllRequest) GetContainers() []DeployAllRequestContainersInner {
	if o == nil || IsNil(o.Containers) {
		var ret []DeployAllRequestContainersInner
		return ret
	}
	return o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployAllRequest) GetContainersOk() ([]DeployAllRequestContainersInner, bool) {
	if o == nil || IsNil(o.Containers) {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *DeployAllRequest) HasContainers() bool {
	if o != nil && !IsNil(o.Containers) {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []DeployAllRequestContainersInner and assigns it to the Containers field.
func (o *DeployAllRequest) SetContainers(v []DeployAllRequestContainersInner) {
	o.Containers = v
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *DeployAllRequest) GetJobs() []DeployAllRequestJobsInner {
	if o == nil || IsNil(o.Jobs) {
		var ret []DeployAllRequestJobsInner
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployAllRequest) GetJobsOk() ([]DeployAllRequestJobsInner, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *DeployAllRequest) HasJobs() bool {
	if o != nil && !IsNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []DeployAllRequestJobsInner and assigns it to the Jobs field.
func (o *DeployAllRequest) SetJobs(v []DeployAllRequestJobsInner) {
	o.Jobs = v
}

func (o DeployAllRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployAllRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Applications) {
		toSerialize["applications"] = o.Applications
	}
	if !IsNil(o.Databases) {
		toSerialize["databases"] = o.Databases
	}
	if !IsNil(o.Containers) {
		toSerialize["containers"] = o.Containers
	}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	return toSerialize, nil
}

type NullableDeployAllRequest struct {
	value *DeployAllRequest
	isSet bool
}

func (v NullableDeployAllRequest) Get() *DeployAllRequest {
	return v.value
}

func (v *NullableDeployAllRequest) Set(val *DeployAllRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployAllRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployAllRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployAllRequest(val *DeployAllRequest) *NullableDeployAllRequest {
	return &NullableDeployAllRequest{value: val, isSet: true}
}

func (v NullableDeployAllRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployAllRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
