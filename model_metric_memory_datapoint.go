/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// checks if the MetricMemoryDatapoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricMemoryDatapoint{}

// MetricMemoryDatapoint struct for MetricMemoryDatapoint
type MetricMemoryDatapoint struct {
	CreatedAt time.Time `json:"created_at"`
	// unit is MB. 1024 MB = 1GB
	RequestedInMb int32 `json:"requested_in_mb"`
	// unit is MB. 1024 MB = 1GB
	ConsumedInMb      int32   `json:"consumed_in_mb"`
	ConsumedInPercent float32 `json:"consumed_in_percent"`
}

// NewMetricMemoryDatapoint instantiates a new MetricMemoryDatapoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricMemoryDatapoint(createdAt time.Time, requestedInMb int32, consumedInMb int32, consumedInPercent float32) *MetricMemoryDatapoint {
	this := MetricMemoryDatapoint{}
	this.CreatedAt = createdAt
	this.RequestedInMb = requestedInMb
	this.ConsumedInMb = consumedInMb
	this.ConsumedInPercent = consumedInPercent
	return &this
}

// NewMetricMemoryDatapointWithDefaults instantiates a new MetricMemoryDatapoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricMemoryDatapointWithDefaults() *MetricMemoryDatapoint {
	this := MetricMemoryDatapoint{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *MetricMemoryDatapoint) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *MetricMemoryDatapoint) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *MetricMemoryDatapoint) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetRequestedInMb returns the RequestedInMb field value
func (o *MetricMemoryDatapoint) GetRequestedInMb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RequestedInMb
}

// GetRequestedInMbOk returns a tuple with the RequestedInMb field value
// and a boolean to check if the value has been set.
func (o *MetricMemoryDatapoint) GetRequestedInMbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestedInMb, true
}

// SetRequestedInMb sets field value
func (o *MetricMemoryDatapoint) SetRequestedInMb(v int32) {
	o.RequestedInMb = v
}

// GetConsumedInMb returns the ConsumedInMb field value
func (o *MetricMemoryDatapoint) GetConsumedInMb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ConsumedInMb
}

// GetConsumedInMbOk returns a tuple with the ConsumedInMb field value
// and a boolean to check if the value has been set.
func (o *MetricMemoryDatapoint) GetConsumedInMbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConsumedInMb, true
}

// SetConsumedInMb sets field value
func (o *MetricMemoryDatapoint) SetConsumedInMb(v int32) {
	o.ConsumedInMb = v
}

// GetConsumedInPercent returns the ConsumedInPercent field value
func (o *MetricMemoryDatapoint) GetConsumedInPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ConsumedInPercent
}

// GetConsumedInPercentOk returns a tuple with the ConsumedInPercent field value
// and a boolean to check if the value has been set.
func (o *MetricMemoryDatapoint) GetConsumedInPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConsumedInPercent, true
}

// SetConsumedInPercent sets field value
func (o *MetricMemoryDatapoint) SetConsumedInPercent(v float32) {
	o.ConsumedInPercent = v
}

func (o MetricMemoryDatapoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricMemoryDatapoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["requested_in_mb"] = o.RequestedInMb
	toSerialize["consumed_in_mb"] = o.ConsumedInMb
	toSerialize["consumed_in_percent"] = o.ConsumedInPercent
	return toSerialize, nil
}

type NullableMetricMemoryDatapoint struct {
	value *MetricMemoryDatapoint
	isSet bool
}

func (v NullableMetricMemoryDatapoint) Get() *MetricMemoryDatapoint {
	return v.value
}

func (v *NullableMetricMemoryDatapoint) Set(val *MetricMemoryDatapoint) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricMemoryDatapoint) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricMemoryDatapoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricMemoryDatapoint(val *MetricMemoryDatapoint) *NullableMetricMemoryDatapoint {
	return &NullableMetricMemoryDatapoint{value: val, isSet: true}
}

func (v NullableMetricMemoryDatapoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricMemoryDatapoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
