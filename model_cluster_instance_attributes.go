/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the ClusterInstanceAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterInstanceAttributes{}

// ClusterInstanceAttributes struct for ClusterInstanceAttributes
type ClusterInstanceAttributes struct {
	// The category of the instance.
	InstanceCategory *string `json:"instance_category,omitempty"`
	// The generation of the instance.
	InstanceGeneration *int32 `json:"instance_generation,omitempty"`
	// The family or series of the instance.
	InstanceFamily *string `json:"instance_family,omitempty"`
	// Specifies the size of the instance within its family.
	InstanceSize *string `json:"instance_size,omitempty"`
	// The instance has sufficient resources to be chosen as a standalone instance in a cluster.
	MeetsResourceReqs    *bool `json:"meets_resource_reqs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClusterInstanceAttributes ClusterInstanceAttributes

// NewClusterInstanceAttributes instantiates a new ClusterInstanceAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterInstanceAttributes() *ClusterInstanceAttributes {
	this := ClusterInstanceAttributes{}
	return &this
}

// NewClusterInstanceAttributesWithDefaults instantiates a new ClusterInstanceAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterInstanceAttributesWithDefaults() *ClusterInstanceAttributes {
	this := ClusterInstanceAttributes{}
	return &this
}

// GetInstanceCategory returns the InstanceCategory field value if set, zero value otherwise.
func (o *ClusterInstanceAttributes) GetInstanceCategory() string {
	if o == nil || IsNil(o.InstanceCategory) {
		var ret string
		return ret
	}
	return *o.InstanceCategory
}

// GetInstanceCategoryOk returns a tuple with the InstanceCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstanceAttributes) GetInstanceCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceCategory) {
		return nil, false
	}
	return o.InstanceCategory, true
}

// HasInstanceCategory returns a boolean if a field has been set.
func (o *ClusterInstanceAttributes) HasInstanceCategory() bool {
	if o != nil && !IsNil(o.InstanceCategory) {
		return true
	}

	return false
}

// SetInstanceCategory gets a reference to the given string and assigns it to the InstanceCategory field.
func (o *ClusterInstanceAttributes) SetInstanceCategory(v string) {
	o.InstanceCategory = &v
}

// GetInstanceGeneration returns the InstanceGeneration field value if set, zero value otherwise.
func (o *ClusterInstanceAttributes) GetInstanceGeneration() int32 {
	if o == nil || IsNil(o.InstanceGeneration) {
		var ret int32
		return ret
	}
	return *o.InstanceGeneration
}

// GetInstanceGenerationOk returns a tuple with the InstanceGeneration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstanceAttributes) GetInstanceGenerationOk() (*int32, bool) {
	if o == nil || IsNil(o.InstanceGeneration) {
		return nil, false
	}
	return o.InstanceGeneration, true
}

// HasInstanceGeneration returns a boolean if a field has been set.
func (o *ClusterInstanceAttributes) HasInstanceGeneration() bool {
	if o != nil && !IsNil(o.InstanceGeneration) {
		return true
	}

	return false
}

// SetInstanceGeneration gets a reference to the given int32 and assigns it to the InstanceGeneration field.
func (o *ClusterInstanceAttributes) SetInstanceGeneration(v int32) {
	o.InstanceGeneration = &v
}

// GetInstanceFamily returns the InstanceFamily field value if set, zero value otherwise.
func (o *ClusterInstanceAttributes) GetInstanceFamily() string {
	if o == nil || IsNil(o.InstanceFamily) {
		var ret string
		return ret
	}
	return *o.InstanceFamily
}

// GetInstanceFamilyOk returns a tuple with the InstanceFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstanceAttributes) GetInstanceFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceFamily) {
		return nil, false
	}
	return o.InstanceFamily, true
}

// HasInstanceFamily returns a boolean if a field has been set.
func (o *ClusterInstanceAttributes) HasInstanceFamily() bool {
	if o != nil && !IsNil(o.InstanceFamily) {
		return true
	}

	return false
}

// SetInstanceFamily gets a reference to the given string and assigns it to the InstanceFamily field.
func (o *ClusterInstanceAttributes) SetInstanceFamily(v string) {
	o.InstanceFamily = &v
}

// GetInstanceSize returns the InstanceSize field value if set, zero value otherwise.
func (o *ClusterInstanceAttributes) GetInstanceSize() string {
	if o == nil || IsNil(o.InstanceSize) {
		var ret string
		return ret
	}
	return *o.InstanceSize
}

// GetInstanceSizeOk returns a tuple with the InstanceSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstanceAttributes) GetInstanceSizeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceSize) {
		return nil, false
	}
	return o.InstanceSize, true
}

// HasInstanceSize returns a boolean if a field has been set.
func (o *ClusterInstanceAttributes) HasInstanceSize() bool {
	if o != nil && !IsNil(o.InstanceSize) {
		return true
	}

	return false
}

// SetInstanceSize gets a reference to the given string and assigns it to the InstanceSize field.
func (o *ClusterInstanceAttributes) SetInstanceSize(v string) {
	o.InstanceSize = &v
}

// GetMeetsResourceReqs returns the MeetsResourceReqs field value if set, zero value otherwise.
func (o *ClusterInstanceAttributes) GetMeetsResourceReqs() bool {
	if o == nil || IsNil(o.MeetsResourceReqs) {
		var ret bool
		return ret
	}
	return *o.MeetsResourceReqs
}

// GetMeetsResourceReqsOk returns a tuple with the MeetsResourceReqs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstanceAttributes) GetMeetsResourceReqsOk() (*bool, bool) {
	if o == nil || IsNil(o.MeetsResourceReqs) {
		return nil, false
	}
	return o.MeetsResourceReqs, true
}

// HasMeetsResourceReqs returns a boolean if a field has been set.
func (o *ClusterInstanceAttributes) HasMeetsResourceReqs() bool {
	if o != nil && !IsNil(o.MeetsResourceReqs) {
		return true
	}

	return false
}

// SetMeetsResourceReqs gets a reference to the given bool and assigns it to the MeetsResourceReqs field.
func (o *ClusterInstanceAttributes) SetMeetsResourceReqs(v bool) {
	o.MeetsResourceReqs = &v
}

func (o ClusterInstanceAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterInstanceAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceCategory) {
		toSerialize["instance_category"] = o.InstanceCategory
	}
	if !IsNil(o.InstanceGeneration) {
		toSerialize["instance_generation"] = o.InstanceGeneration
	}
	if !IsNil(o.InstanceFamily) {
		toSerialize["instance_family"] = o.InstanceFamily
	}
	if !IsNil(o.InstanceSize) {
		toSerialize["instance_size"] = o.InstanceSize
	}
	if !IsNil(o.MeetsResourceReqs) {
		toSerialize["meets_resource_reqs"] = o.MeetsResourceReqs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterInstanceAttributes) UnmarshalJSON(data []byte) (err error) {
	varClusterInstanceAttributes := _ClusterInstanceAttributes{}

	err = json.Unmarshal(data, &varClusterInstanceAttributes)

	if err != nil {
		return err
	}

	*o = ClusterInstanceAttributes(varClusterInstanceAttributes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "instance_category")
		delete(additionalProperties, "instance_generation")
		delete(additionalProperties, "instance_family")
		delete(additionalProperties, "instance_size")
		delete(additionalProperties, "meets_resource_reqs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterInstanceAttributes struct {
	value *ClusterInstanceAttributes
	isSet bool
}

func (v NullableClusterInstanceAttributes) Get() *ClusterInstanceAttributes {
	return v.value
}

func (v *NullableClusterInstanceAttributes) Set(val *ClusterInstanceAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterInstanceAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterInstanceAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterInstanceAttributes(val *ClusterInstanceAttributes) *NullableClusterInstanceAttributes {
	return &NullableClusterInstanceAttributes{value: val, isSet: true}
}

func (v NullableClusterInstanceAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterInstanceAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
