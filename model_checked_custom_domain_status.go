/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// CheckedCustomDomainStatus This enum represents the final status for your domain. There are 2 successful statuses:   * `RESOLVES_TO_IP`: we succeeded to resolve an IP to your domain. This is the successful final status for custom domains where `use_cdn` is `true`   * `MATCHES_LOAD_BALANCER_HOST`: we succeeded to lookup CNAMEs & found that it matches your cluser Load Balancer host. This is the successful final status for custom domain where `use_cdn` is `false`   * `DOMAIN_NOT_CONFIGURED`: the domain is not configured, look at the `error_details` field for more information    * `DOMAIN_LINKED_TO_WRONG_HOST`: the domain has CNAME(s) that matches a different host than your Load Balancer one   * `GENERIC_FAILURE`: an error occured when attempting to validate your domain, look at the `error_details` field for more information
type CheckedCustomDomainStatus string

// List of CheckedCustomDomainStatus
const (
	CHECKEDCUSTOMDOMAINSTATUS_RESOLVES_TO_IP              CheckedCustomDomainStatus = "RESOLVES_TO_IP"
	CHECKEDCUSTOMDOMAINSTATUS_MATCHES_LOAD_BALANCER_HOST  CheckedCustomDomainStatus = "MATCHES_LOAD_BALANCER_HOST"
	CHECKEDCUSTOMDOMAINSTATUS_DOMAIN_NOT_CONFIGURED       CheckedCustomDomainStatus = "DOMAIN_NOT_CONFIGURED"
	CHECKEDCUSTOMDOMAINSTATUS_DOMAIN_LINKED_TO_WRONG_HOST CheckedCustomDomainStatus = "DOMAIN_LINKED_TO_WRONG_HOST"
	CHECKEDCUSTOMDOMAINSTATUS_GENERIC_FAILURE             CheckedCustomDomainStatus = "GENERIC_FAILURE"
)

// All allowed values of CheckedCustomDomainStatus enum
var AllowedCheckedCustomDomainStatusEnumValues = []CheckedCustomDomainStatus{
	"RESOLVES_TO_IP",
	"MATCHES_LOAD_BALANCER_HOST",
	"DOMAIN_NOT_CONFIGURED",
	"DOMAIN_LINKED_TO_WRONG_HOST",
	"GENERIC_FAILURE",
}

func (v *CheckedCustomDomainStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CheckedCustomDomainStatus(value)
	for _, existing := range AllowedCheckedCustomDomainStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CheckedCustomDomainStatus", value)
}

// NewCheckedCustomDomainStatusFromValue returns a pointer to a valid CheckedCustomDomainStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCheckedCustomDomainStatusFromValue(v string) (*CheckedCustomDomainStatus, error) {
	ev := CheckedCustomDomainStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CheckedCustomDomainStatus: valid values are %v", v, AllowedCheckedCustomDomainStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CheckedCustomDomainStatus) IsValid() bool {
	for _, existing := range AllowedCheckedCustomDomainStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CheckedCustomDomainStatus value
func (v CheckedCustomDomainStatus) Ptr() *CheckedCustomDomainStatus {
	return &v
}

type NullableCheckedCustomDomainStatus struct {
	value *CheckedCustomDomainStatus
	isSet bool
}

func (v NullableCheckedCustomDomainStatus) Get() *CheckedCustomDomainStatus {
	return v.value
}

func (v *NullableCheckedCustomDomainStatus) Set(val *CheckedCustomDomainStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckedCustomDomainStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckedCustomDomainStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckedCustomDomainStatus(val *CheckedCustomDomainStatus) *NullableCheckedCustomDomainStatus {
	return &NullableCheckedCustomDomainStatus{value: val, isSet: true}
}

func (v NullableCheckedCustomDomainStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckedCustomDomainStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
