/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.1
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// VariableImportResponse struct for VariableImportResponse
type VariableImportResponse struct {
	TotalVariablesToImport      float32                                             `json:"total_variables_to_import"`
	SuccessfulImportedVariables []VariableImportResponseSuccessfulImportedVariables `json:"successful_imported_variables"`
}

// NewVariableImportResponse instantiates a new VariableImportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableImportResponse(totalVariablesToImport float32, successfulImportedVariables []VariableImportResponseSuccessfulImportedVariables) *VariableImportResponse {
	this := VariableImportResponse{}
	this.TotalVariablesToImport = totalVariablesToImport
	this.SuccessfulImportedVariables = successfulImportedVariables
	return &this
}

// NewVariableImportResponseWithDefaults instantiates a new VariableImportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableImportResponseWithDefaults() *VariableImportResponse {
	this := VariableImportResponse{}
	return &this
}

// GetTotalVariablesToImport returns the TotalVariablesToImport field value
func (o *VariableImportResponse) GetTotalVariablesToImport() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalVariablesToImport
}

// GetTotalVariablesToImportOk returns a tuple with the TotalVariablesToImport field value
// and a boolean to check if the value has been set.
func (o *VariableImportResponse) GetTotalVariablesToImportOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalVariablesToImport, true
}

// SetTotalVariablesToImport sets field value
func (o *VariableImportResponse) SetTotalVariablesToImport(v float32) {
	o.TotalVariablesToImport = v
}

// GetSuccessfulImportedVariables returns the SuccessfulImportedVariables field value
func (o *VariableImportResponse) GetSuccessfulImportedVariables() []VariableImportResponseSuccessfulImportedVariables {
	if o == nil {
		var ret []VariableImportResponseSuccessfulImportedVariables
		return ret
	}

	return o.SuccessfulImportedVariables
}

// GetSuccessfulImportedVariablesOk returns a tuple with the SuccessfulImportedVariables field value
// and a boolean to check if the value has been set.
func (o *VariableImportResponse) GetSuccessfulImportedVariablesOk() ([]VariableImportResponseSuccessfulImportedVariables, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuccessfulImportedVariables, true
}

// SetSuccessfulImportedVariables sets field value
func (o *VariableImportResponse) SetSuccessfulImportedVariables(v []VariableImportResponseSuccessfulImportedVariables) {
	o.SuccessfulImportedVariables = v
}

func (o VariableImportResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total_variables_to_import"] = o.TotalVariablesToImport
	}
	if true {
		toSerialize["successful_imported_variables"] = o.SuccessfulImportedVariables
	}
	return json.Marshal(toSerialize)
}

type NullableVariableImportResponse struct {
	value *VariableImportResponse
	isSet bool
}

func (v NullableVariableImportResponse) Get() *VariableImportResponse {
	return v.value
}

func (v *NullableVariableImportResponse) Set(val *VariableImportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableImportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableImportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableImportResponse(val *VariableImportResponse) *NullableVariableImportResponse {
	return &NullableVariableImportResponse{value: val, isSet: true}
}

func (v NullableVariableImportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableImportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
