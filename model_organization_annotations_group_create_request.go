/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the OrganizationAnnotationsGroupCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationAnnotationsGroupCreateRequest{}

// OrganizationAnnotationsGroupCreateRequest struct for OrganizationAnnotationsGroupCreateRequest
type OrganizationAnnotationsGroupCreateRequest struct {
	// name of the annotations group
	Name                 string                                  `json:"name"`
	Annotations          []Annotation                            `json:"annotations"`
	Scopes               []OrganizationAnnotationsGroupScopeEnum `json:"scopes"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationAnnotationsGroupCreateRequest OrganizationAnnotationsGroupCreateRequest

// NewOrganizationAnnotationsGroupCreateRequest instantiates a new OrganizationAnnotationsGroupCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationAnnotationsGroupCreateRequest(name string, annotations []Annotation, scopes []OrganizationAnnotationsGroupScopeEnum) *OrganizationAnnotationsGroupCreateRequest {
	this := OrganizationAnnotationsGroupCreateRequest{}
	this.Name = name
	this.Annotations = annotations
	this.Scopes = scopes
	return &this
}

// NewOrganizationAnnotationsGroupCreateRequestWithDefaults instantiates a new OrganizationAnnotationsGroupCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationAnnotationsGroupCreateRequestWithDefaults() *OrganizationAnnotationsGroupCreateRequest {
	this := OrganizationAnnotationsGroupCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *OrganizationAnnotationsGroupCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationAnnotationsGroupCreateRequest) SetName(v string) {
	o.Name = v
}

// GetAnnotations returns the Annotations field value
func (o *OrganizationAnnotationsGroupCreateRequest) GetAnnotations() []Annotation {
	if o == nil {
		var ret []Annotation
		return ret
	}

	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupCreateRequest) GetAnnotationsOk() ([]Annotation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Annotations, true
}

// SetAnnotations sets field value
func (o *OrganizationAnnotationsGroupCreateRequest) SetAnnotations(v []Annotation) {
	o.Annotations = v
}

// GetScopes returns the Scopes field value
func (o *OrganizationAnnotationsGroupCreateRequest) GetScopes() []OrganizationAnnotationsGroupScopeEnum {
	if o == nil {
		var ret []OrganizationAnnotationsGroupScopeEnum
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *OrganizationAnnotationsGroupCreateRequest) GetScopesOk() ([]OrganizationAnnotationsGroupScopeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *OrganizationAnnotationsGroupCreateRequest) SetScopes(v []OrganizationAnnotationsGroupScopeEnum) {
	o.Scopes = v
}

func (o OrganizationAnnotationsGroupCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationAnnotationsGroupCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["annotations"] = o.Annotations
	toSerialize["scopes"] = o.Scopes

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationAnnotationsGroupCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"annotations",
		"scopes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationAnnotationsGroupCreateRequest := _OrganizationAnnotationsGroupCreateRequest{}

	err = json.Unmarshal(data, &varOrganizationAnnotationsGroupCreateRequest)

	if err != nil {
		return err
	}

	*o = OrganizationAnnotationsGroupCreateRequest(varOrganizationAnnotationsGroupCreateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "annotations")
		delete(additionalProperties, "scopes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationAnnotationsGroupCreateRequest struct {
	value *OrganizationAnnotationsGroupCreateRequest
	isSet bool
}

func (v NullableOrganizationAnnotationsGroupCreateRequest) Get() *OrganizationAnnotationsGroupCreateRequest {
	return v.value
}

func (v *NullableOrganizationAnnotationsGroupCreateRequest) Set(val *OrganizationAnnotationsGroupCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationAnnotationsGroupCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationAnnotationsGroupCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationAnnotationsGroupCreateRequest(val *OrganizationAnnotationsGroupCreateRequest) *NullableOrganizationAnnotationsGroupCreateRequest {
	return &NullableOrganizationAnnotationsGroupCreateRequest{value: val, isSet: true}
}

func (v NullableOrganizationAnnotationsGroupCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationAnnotationsGroupCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
