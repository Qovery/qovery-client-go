/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the ClusterLogsDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterLogsDetails{}

// ClusterLogsDetails Present only for `info`, `warning` and `debug` logs
type ClusterLogsDetails struct {
	// cloud provider used
	ProviderKind         *string                                  `json:"provider_kind,omitempty"`
	Region               *string                                  `json:"region,omitempty"`
	Transmitter          *ClusterLogsErrorEventDetailsTransmitter `json:"transmitter,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClusterLogsDetails ClusterLogsDetails

// NewClusterLogsDetails instantiates a new ClusterLogsDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterLogsDetails() *ClusterLogsDetails {
	this := ClusterLogsDetails{}
	return &this
}

// NewClusterLogsDetailsWithDefaults instantiates a new ClusterLogsDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterLogsDetailsWithDefaults() *ClusterLogsDetails {
	this := ClusterLogsDetails{}
	return &this
}

// GetProviderKind returns the ProviderKind field value if set, zero value otherwise.
func (o *ClusterLogsDetails) GetProviderKind() string {
	if o == nil || IsNil(o.ProviderKind) {
		var ret string
		return ret
	}
	return *o.ProviderKind
}

// GetProviderKindOk returns a tuple with the ProviderKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLogsDetails) GetProviderKindOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderKind) {
		return nil, false
	}
	return o.ProviderKind, true
}

// HasProviderKind returns a boolean if a field has been set.
func (o *ClusterLogsDetails) HasProviderKind() bool {
	if o != nil && !IsNil(o.ProviderKind) {
		return true
	}

	return false
}

// SetProviderKind gets a reference to the given string and assigns it to the ProviderKind field.
func (o *ClusterLogsDetails) SetProviderKind(v string) {
	o.ProviderKind = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ClusterLogsDetails) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLogsDetails) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ClusterLogsDetails) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ClusterLogsDetails) SetRegion(v string) {
	o.Region = &v
}

// GetTransmitter returns the Transmitter field value if set, zero value otherwise.
func (o *ClusterLogsDetails) GetTransmitter() ClusterLogsErrorEventDetailsTransmitter {
	if o == nil || IsNil(o.Transmitter) {
		var ret ClusterLogsErrorEventDetailsTransmitter
		return ret
	}
	return *o.Transmitter
}

// GetTransmitterOk returns a tuple with the Transmitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLogsDetails) GetTransmitterOk() (*ClusterLogsErrorEventDetailsTransmitter, bool) {
	if o == nil || IsNil(o.Transmitter) {
		return nil, false
	}
	return o.Transmitter, true
}

// HasTransmitter returns a boolean if a field has been set.
func (o *ClusterLogsDetails) HasTransmitter() bool {
	if o != nil && !IsNil(o.Transmitter) {
		return true
	}

	return false
}

// SetTransmitter gets a reference to the given ClusterLogsErrorEventDetailsTransmitter and assigns it to the Transmitter field.
func (o *ClusterLogsDetails) SetTransmitter(v ClusterLogsErrorEventDetailsTransmitter) {
	o.Transmitter = &v
}

func (o ClusterLogsDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterLogsDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProviderKind) {
		toSerialize["provider_kind"] = o.ProviderKind
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Transmitter) {
		toSerialize["transmitter"] = o.Transmitter
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterLogsDetails) UnmarshalJSON(data []byte) (err error) {
	varClusterLogsDetails := _ClusterLogsDetails{}

	err = json.Unmarshal(data, &varClusterLogsDetails)

	if err != nil {
		return err
	}

	*o = ClusterLogsDetails(varClusterLogsDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "provider_kind")
		delete(additionalProperties, "region")
		delete(additionalProperties, "transmitter")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterLogsDetails struct {
	value *ClusterLogsDetails
	isSet bool
}

func (v NullableClusterLogsDetails) Get() *ClusterLogsDetails {
	return v.value
}

func (v *NullableClusterLogsDetails) Set(val *ClusterLogsDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterLogsDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterLogsDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterLogsDetails(val *ClusterLogsDetails) *NullableClusterLogsDetails {
	return &NullableClusterLogsDetails{value: val, isSet: true}
}

func (v NullableClusterLogsDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterLogsDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
