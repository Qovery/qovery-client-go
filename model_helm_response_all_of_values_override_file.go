/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the HelmResponseAllOfValuesOverrideFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelmResponseAllOfValuesOverrideFile{}

// HelmResponseAllOfValuesOverrideFile struct for HelmResponseAllOfValuesOverrideFile
type HelmResponseAllOfValuesOverrideFile struct {
	Raw                  *HelmResponseAllOfValuesOverrideFileRaw `json:"raw,omitempty"`
	Git                  *HelmResponseAllOfValuesOverrideFileGit `json:"git,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HelmResponseAllOfValuesOverrideFile HelmResponseAllOfValuesOverrideFile

// NewHelmResponseAllOfValuesOverrideFile instantiates a new HelmResponseAllOfValuesOverrideFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmResponseAllOfValuesOverrideFile() *HelmResponseAllOfValuesOverrideFile {
	this := HelmResponseAllOfValuesOverrideFile{}
	return &this
}

// NewHelmResponseAllOfValuesOverrideFileWithDefaults instantiates a new HelmResponseAllOfValuesOverrideFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmResponseAllOfValuesOverrideFileWithDefaults() *HelmResponseAllOfValuesOverrideFile {
	this := HelmResponseAllOfValuesOverrideFile{}
	return &this
}

// GetRaw returns the Raw field value if set, zero value otherwise.
func (o *HelmResponseAllOfValuesOverrideFile) GetRaw() HelmResponseAllOfValuesOverrideFileRaw {
	if o == nil || IsNil(o.Raw) {
		var ret HelmResponseAllOfValuesOverrideFileRaw
		return ret
	}
	return *o.Raw
}

// GetRawOk returns a tuple with the Raw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmResponseAllOfValuesOverrideFile) GetRawOk() (*HelmResponseAllOfValuesOverrideFileRaw, bool) {
	if o == nil || IsNil(o.Raw) {
		return nil, false
	}
	return o.Raw, true
}

// HasRaw returns a boolean if a field has been set.
func (o *HelmResponseAllOfValuesOverrideFile) HasRaw() bool {
	if o != nil && !IsNil(o.Raw) {
		return true
	}

	return false
}

// SetRaw gets a reference to the given HelmResponseAllOfValuesOverrideFileRaw and assigns it to the Raw field.
func (o *HelmResponseAllOfValuesOverrideFile) SetRaw(v HelmResponseAllOfValuesOverrideFileRaw) {
	o.Raw = &v
}

// GetGit returns the Git field value if set, zero value otherwise.
func (o *HelmResponseAllOfValuesOverrideFile) GetGit() HelmResponseAllOfValuesOverrideFileGit {
	if o == nil || IsNil(o.Git) {
		var ret HelmResponseAllOfValuesOverrideFileGit
		return ret
	}
	return *o.Git
}

// GetGitOk returns a tuple with the Git field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmResponseAllOfValuesOverrideFile) GetGitOk() (*HelmResponseAllOfValuesOverrideFileGit, bool) {
	if o == nil || IsNil(o.Git) {
		return nil, false
	}
	return o.Git, true
}

// HasGit returns a boolean if a field has been set.
func (o *HelmResponseAllOfValuesOverrideFile) HasGit() bool {
	if o != nil && !IsNil(o.Git) {
		return true
	}

	return false
}

// SetGit gets a reference to the given HelmResponseAllOfValuesOverrideFileGit and assigns it to the Git field.
func (o *HelmResponseAllOfValuesOverrideFile) SetGit(v HelmResponseAllOfValuesOverrideFileGit) {
	o.Git = &v
}

func (o HelmResponseAllOfValuesOverrideFile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelmResponseAllOfValuesOverrideFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Raw) {
		toSerialize["raw"] = o.Raw
	}
	if !IsNil(o.Git) {
		toSerialize["git"] = o.Git
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HelmResponseAllOfValuesOverrideFile) UnmarshalJSON(data []byte) (err error) {
	varHelmResponseAllOfValuesOverrideFile := _HelmResponseAllOfValuesOverrideFile{}

	err = json.Unmarshal(data, &varHelmResponseAllOfValuesOverrideFile)

	if err != nil {
		return err
	}

	*o = HelmResponseAllOfValuesOverrideFile(varHelmResponseAllOfValuesOverrideFile)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "raw")
		delete(additionalProperties, "git")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHelmResponseAllOfValuesOverrideFile struct {
	value *HelmResponseAllOfValuesOverrideFile
	isSet bool
}

func (v NullableHelmResponseAllOfValuesOverrideFile) Get() *HelmResponseAllOfValuesOverrideFile {
	return v.value
}

func (v *NullableHelmResponseAllOfValuesOverrideFile) Set(val *HelmResponseAllOfValuesOverrideFile) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmResponseAllOfValuesOverrideFile) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmResponseAllOfValuesOverrideFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmResponseAllOfValuesOverrideFile(val *HelmResponseAllOfValuesOverrideFile) *NullableHelmResponseAllOfValuesOverrideFile {
	return &NullableHelmResponseAllOfValuesOverrideFile{value: val, isSet: true}
}

func (v NullableHelmResponseAllOfValuesOverrideFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmResponseAllOfValuesOverrideFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
