/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the ClusterFeatureGcpExistingVpc type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterFeatureGcpExistingVpc{}

// ClusterFeatureGcpExistingVpc struct for ClusterFeatureGcpExistingVpc
type ClusterFeatureGcpExistingVpc struct {
	VpcName                    string         `json:"vpc_name"`
	VpcProjectId               NullableString `json:"vpc_project_id,omitempty"`
	SubnetworkName             NullableString `json:"subnetwork_name,omitempty"`
	IpRangeServicesName        NullableString `json:"ip_range_services_name,omitempty"`
	IpRangePodsName            NullableString `json:"ip_range_pods_name,omitempty"`
	AdditionalIpRangePodsNames []string       `json:"additional_ip_range_pods_names,omitempty"`
}

// NewClusterFeatureGcpExistingVpc instantiates a new ClusterFeatureGcpExistingVpc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterFeatureGcpExistingVpc(vpcName string) *ClusterFeatureGcpExistingVpc {
	this := ClusterFeatureGcpExistingVpc{}
	this.VpcName = vpcName
	return &this
}

// NewClusterFeatureGcpExistingVpcWithDefaults instantiates a new ClusterFeatureGcpExistingVpc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterFeatureGcpExistingVpcWithDefaults() *ClusterFeatureGcpExistingVpc {
	this := ClusterFeatureGcpExistingVpc{}
	return &this
}

// GetVpcName returns the VpcName field value
func (o *ClusterFeatureGcpExistingVpc) GetVpcName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcName
}

// GetVpcNameOk returns a tuple with the VpcName field value
// and a boolean to check if the value has been set.
func (o *ClusterFeatureGcpExistingVpc) GetVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcName, true
}

// SetVpcName sets field value
func (o *ClusterFeatureGcpExistingVpc) SetVpcName(v string) {
	o.VpcName = v
}

// GetVpcProjectId returns the VpcProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterFeatureGcpExistingVpc) GetVpcProjectId() string {
	if o == nil || IsNil(o.VpcProjectId.Get()) {
		var ret string
		return ret
	}
	return *o.VpcProjectId.Get()
}

// GetVpcProjectIdOk returns a tuple with the VpcProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterFeatureGcpExistingVpc) GetVpcProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcProjectId.Get(), o.VpcProjectId.IsSet()
}

// HasVpcProjectId returns a boolean if a field has been set.
func (o *ClusterFeatureGcpExistingVpc) HasVpcProjectId() bool {
	if o != nil && o.VpcProjectId.IsSet() {
		return true
	}

	return false
}

// SetVpcProjectId gets a reference to the given NullableString and assigns it to the VpcProjectId field.
func (o *ClusterFeatureGcpExistingVpc) SetVpcProjectId(v string) {
	o.VpcProjectId.Set(&v)
}

// SetVpcProjectIdNil sets the value for VpcProjectId to be an explicit nil
func (o *ClusterFeatureGcpExistingVpc) SetVpcProjectIdNil() {
	o.VpcProjectId.Set(nil)
}

// UnsetVpcProjectId ensures that no value is present for VpcProjectId, not even an explicit nil
func (o *ClusterFeatureGcpExistingVpc) UnsetVpcProjectId() {
	o.VpcProjectId.Unset()
}

// GetSubnetworkName returns the SubnetworkName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterFeatureGcpExistingVpc) GetSubnetworkName() string {
	if o == nil || IsNil(o.SubnetworkName.Get()) {
		var ret string
		return ret
	}
	return *o.SubnetworkName.Get()
}

// GetSubnetworkNameOk returns a tuple with the SubnetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterFeatureGcpExistingVpc) GetSubnetworkNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetworkName.Get(), o.SubnetworkName.IsSet()
}

// HasSubnetworkName returns a boolean if a field has been set.
func (o *ClusterFeatureGcpExistingVpc) HasSubnetworkName() bool {
	if o != nil && o.SubnetworkName.IsSet() {
		return true
	}

	return false
}

// SetSubnetworkName gets a reference to the given NullableString and assigns it to the SubnetworkName field.
func (o *ClusterFeatureGcpExistingVpc) SetSubnetworkName(v string) {
	o.SubnetworkName.Set(&v)
}

// SetSubnetworkNameNil sets the value for SubnetworkName to be an explicit nil
func (o *ClusterFeatureGcpExistingVpc) SetSubnetworkNameNil() {
	o.SubnetworkName.Set(nil)
}

// UnsetSubnetworkName ensures that no value is present for SubnetworkName, not even an explicit nil
func (o *ClusterFeatureGcpExistingVpc) UnsetSubnetworkName() {
	o.SubnetworkName.Unset()
}

// GetIpRangeServicesName returns the IpRangeServicesName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterFeatureGcpExistingVpc) GetIpRangeServicesName() string {
	if o == nil || IsNil(o.IpRangeServicesName.Get()) {
		var ret string
		return ret
	}
	return *o.IpRangeServicesName.Get()
}

// GetIpRangeServicesNameOk returns a tuple with the IpRangeServicesName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterFeatureGcpExistingVpc) GetIpRangeServicesNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpRangeServicesName.Get(), o.IpRangeServicesName.IsSet()
}

// HasIpRangeServicesName returns a boolean if a field has been set.
func (o *ClusterFeatureGcpExistingVpc) HasIpRangeServicesName() bool {
	if o != nil && o.IpRangeServicesName.IsSet() {
		return true
	}

	return false
}

// SetIpRangeServicesName gets a reference to the given NullableString and assigns it to the IpRangeServicesName field.
func (o *ClusterFeatureGcpExistingVpc) SetIpRangeServicesName(v string) {
	o.IpRangeServicesName.Set(&v)
}

// SetIpRangeServicesNameNil sets the value for IpRangeServicesName to be an explicit nil
func (o *ClusterFeatureGcpExistingVpc) SetIpRangeServicesNameNil() {
	o.IpRangeServicesName.Set(nil)
}

// UnsetIpRangeServicesName ensures that no value is present for IpRangeServicesName, not even an explicit nil
func (o *ClusterFeatureGcpExistingVpc) UnsetIpRangeServicesName() {
	o.IpRangeServicesName.Unset()
}

// GetIpRangePodsName returns the IpRangePodsName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterFeatureGcpExistingVpc) GetIpRangePodsName() string {
	if o == nil || IsNil(o.IpRangePodsName.Get()) {
		var ret string
		return ret
	}
	return *o.IpRangePodsName.Get()
}

// GetIpRangePodsNameOk returns a tuple with the IpRangePodsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterFeatureGcpExistingVpc) GetIpRangePodsNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpRangePodsName.Get(), o.IpRangePodsName.IsSet()
}

// HasIpRangePodsName returns a boolean if a field has been set.
func (o *ClusterFeatureGcpExistingVpc) HasIpRangePodsName() bool {
	if o != nil && o.IpRangePodsName.IsSet() {
		return true
	}

	return false
}

// SetIpRangePodsName gets a reference to the given NullableString and assigns it to the IpRangePodsName field.
func (o *ClusterFeatureGcpExistingVpc) SetIpRangePodsName(v string) {
	o.IpRangePodsName.Set(&v)
}

// SetIpRangePodsNameNil sets the value for IpRangePodsName to be an explicit nil
func (o *ClusterFeatureGcpExistingVpc) SetIpRangePodsNameNil() {
	o.IpRangePodsName.Set(nil)
}

// UnsetIpRangePodsName ensures that no value is present for IpRangePodsName, not even an explicit nil
func (o *ClusterFeatureGcpExistingVpc) UnsetIpRangePodsName() {
	o.IpRangePodsName.Unset()
}

// GetAdditionalIpRangePodsNames returns the AdditionalIpRangePodsNames field value if set, zero value otherwise.
func (o *ClusterFeatureGcpExistingVpc) GetAdditionalIpRangePodsNames() []string {
	if o == nil || IsNil(o.AdditionalIpRangePodsNames) {
		var ret []string
		return ret
	}
	return o.AdditionalIpRangePodsNames
}

// GetAdditionalIpRangePodsNamesOk returns a tuple with the AdditionalIpRangePodsNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFeatureGcpExistingVpc) GetAdditionalIpRangePodsNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalIpRangePodsNames) {
		return nil, false
	}
	return o.AdditionalIpRangePodsNames, true
}

// HasAdditionalIpRangePodsNames returns a boolean if a field has been set.
func (o *ClusterFeatureGcpExistingVpc) HasAdditionalIpRangePodsNames() bool {
	if o != nil && !IsNil(o.AdditionalIpRangePodsNames) {
		return true
	}

	return false
}

// SetAdditionalIpRangePodsNames gets a reference to the given []string and assigns it to the AdditionalIpRangePodsNames field.
func (o *ClusterFeatureGcpExistingVpc) SetAdditionalIpRangePodsNames(v []string) {
	o.AdditionalIpRangePodsNames = v
}

func (o ClusterFeatureGcpExistingVpc) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterFeatureGcpExistingVpc) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vpc_name"] = o.VpcName
	if o.VpcProjectId.IsSet() {
		toSerialize["vpc_project_id"] = o.VpcProjectId.Get()
	}
	if o.SubnetworkName.IsSet() {
		toSerialize["subnetwork_name"] = o.SubnetworkName.Get()
	}
	if o.IpRangeServicesName.IsSet() {
		toSerialize["ip_range_services_name"] = o.IpRangeServicesName.Get()
	}
	if o.IpRangePodsName.IsSet() {
		toSerialize["ip_range_pods_name"] = o.IpRangePodsName.Get()
	}
	if !IsNil(o.AdditionalIpRangePodsNames) {
		toSerialize["additional_ip_range_pods_names"] = o.AdditionalIpRangePodsNames
	}
	return toSerialize, nil
}

type NullableClusterFeatureGcpExistingVpc struct {
	value *ClusterFeatureGcpExistingVpc
	isSet bool
}

func (v NullableClusterFeatureGcpExistingVpc) Get() *ClusterFeatureGcpExistingVpc {
	return v.value
}

func (v *NullableClusterFeatureGcpExistingVpc) Set(val *ClusterFeatureGcpExistingVpc) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterFeatureGcpExistingVpc) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterFeatureGcpExistingVpc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterFeatureGcpExistingVpc(val *ClusterFeatureGcpExistingVpc) *NullableClusterFeatureGcpExistingVpc {
	return &NullableClusterFeatureGcpExistingVpc{value: val, isSet: true}
}

func (v NullableClusterFeatureGcpExistingVpc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterFeatureGcpExistingVpc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
