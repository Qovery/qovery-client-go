/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// GetEnvironmentStatuses200Response struct for GetEnvironmentStatuses200Response
type GetEnvironmentStatuses200Response struct {
	Environment  *Status  `json:"environment,omitempty"`
	Applications []Status `json:"applications,omitempty"`
	Containers   []Status `json:"containers,omitempty"`
	Jobs         []Status `json:"jobs,omitempty"`
	Databases    []Status `json:"databases,omitempty"`
}

// NewGetEnvironmentStatuses200Response instantiates a new GetEnvironmentStatuses200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEnvironmentStatuses200Response() *GetEnvironmentStatuses200Response {
	this := GetEnvironmentStatuses200Response{}
	return &this
}

// NewGetEnvironmentStatuses200ResponseWithDefaults instantiates a new GetEnvironmentStatuses200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEnvironmentStatuses200ResponseWithDefaults() *GetEnvironmentStatuses200Response {
	this := GetEnvironmentStatuses200Response{}
	return &this
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *GetEnvironmentStatuses200Response) GetEnvironment() Status {
	if o == nil || o.Environment == nil {
		var ret Status
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentStatuses200Response) GetEnvironmentOk() (*Status, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *GetEnvironmentStatuses200Response) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given Status and assigns it to the Environment field.
func (o *GetEnvironmentStatuses200Response) SetEnvironment(v Status) {
	o.Environment = &v
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *GetEnvironmentStatuses200Response) GetApplications() []Status {
	if o == nil || o.Applications == nil {
		var ret []Status
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentStatuses200Response) GetApplicationsOk() ([]Status, bool) {
	if o == nil || o.Applications == nil {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *GetEnvironmentStatuses200Response) HasApplications() bool {
	if o != nil && o.Applications != nil {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []Status and assigns it to the Applications field.
func (o *GetEnvironmentStatuses200Response) SetApplications(v []Status) {
	o.Applications = v
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *GetEnvironmentStatuses200Response) GetContainers() []Status {
	if o == nil || o.Containers == nil {
		var ret []Status
		return ret
	}
	return o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentStatuses200Response) GetContainersOk() ([]Status, bool) {
	if o == nil || o.Containers == nil {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *GetEnvironmentStatuses200Response) HasContainers() bool {
	if o != nil && o.Containers != nil {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []Status and assigns it to the Containers field.
func (o *GetEnvironmentStatuses200Response) SetContainers(v []Status) {
	o.Containers = v
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *GetEnvironmentStatuses200Response) GetJobs() []Status {
	if o == nil || o.Jobs == nil {
		var ret []Status
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentStatuses200Response) GetJobsOk() ([]Status, bool) {
	if o == nil || o.Jobs == nil {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *GetEnvironmentStatuses200Response) HasJobs() bool {
	if o != nil && o.Jobs != nil {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []Status and assigns it to the Jobs field.
func (o *GetEnvironmentStatuses200Response) SetJobs(v []Status) {
	o.Jobs = v
}

// GetDatabases returns the Databases field value if set, zero value otherwise.
func (o *GetEnvironmentStatuses200Response) GetDatabases() []Status {
	if o == nil || o.Databases == nil {
		var ret []Status
		return ret
	}
	return o.Databases
}

// GetDatabasesOk returns a tuple with the Databases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnvironmentStatuses200Response) GetDatabasesOk() ([]Status, bool) {
	if o == nil || o.Databases == nil {
		return nil, false
	}
	return o.Databases, true
}

// HasDatabases returns a boolean if a field has been set.
func (o *GetEnvironmentStatuses200Response) HasDatabases() bool {
	if o != nil && o.Databases != nil {
		return true
	}

	return false
}

// SetDatabases gets a reference to the given []Status and assigns it to the Databases field.
func (o *GetEnvironmentStatuses200Response) SetDatabases(v []Status) {
	o.Databases = v
}

func (o GetEnvironmentStatuses200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.Applications != nil {
		toSerialize["applications"] = o.Applications
	}
	if o.Containers != nil {
		toSerialize["containers"] = o.Containers
	}
	if o.Jobs != nil {
		toSerialize["jobs"] = o.Jobs
	}
	if o.Databases != nil {
		toSerialize["databases"] = o.Databases
	}
	return json.Marshal(toSerialize)
}

type NullableGetEnvironmentStatuses200Response struct {
	value *GetEnvironmentStatuses200Response
	isSet bool
}

func (v NullableGetEnvironmentStatuses200Response) Get() *GetEnvironmentStatuses200Response {
	return v.value
}

func (v *NullableGetEnvironmentStatuses200Response) Set(val *GetEnvironmentStatuses200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEnvironmentStatuses200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEnvironmentStatuses200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEnvironmentStatuses200Response(val *GetEnvironmentStatuses200Response) *NullableGetEnvironmentStatuses200Response {
	return &NullableGetEnvironmentStatuses200Response{value: val, isSet: true}
}

func (v NullableGetEnvironmentStatuses200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEnvironmentStatuses200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
