/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// DatabaseCurrentMetric struct for DatabaseCurrentMetric
type DatabaseCurrentMetric struct {
	Cpu     *EnvironmentDatabasesCurrentMetricCpu     `json:"cpu,omitempty"`
	Memory  *EnvironmentDatabasesCurrentMetricMemory  `json:"memory,omitempty"`
	Storage *EnvironmentDatabasesCurrentMetricStorage `json:"storage,omitempty"`
}

// NewDatabaseCurrentMetric instantiates a new DatabaseCurrentMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseCurrentMetric() *DatabaseCurrentMetric {
	this := DatabaseCurrentMetric{}
	return &this
}

// NewDatabaseCurrentMetricWithDefaults instantiates a new DatabaseCurrentMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseCurrentMetricWithDefaults() *DatabaseCurrentMetric {
	this := DatabaseCurrentMetric{}
	return &this
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *DatabaseCurrentMetric) GetCpu() EnvironmentDatabasesCurrentMetricCpu {
	if o == nil || o.Cpu == nil {
		var ret EnvironmentDatabasesCurrentMetricCpu
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseCurrentMetric) GetCpuOk() (*EnvironmentDatabasesCurrentMetricCpu, bool) {
	if o == nil || o.Cpu == nil {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *DatabaseCurrentMetric) HasCpu() bool {
	if o != nil && o.Cpu != nil {
		return true
	}

	return false
}

// SetCpu gets a reference to the given EnvironmentDatabasesCurrentMetricCpu and assigns it to the Cpu field.
func (o *DatabaseCurrentMetric) SetCpu(v EnvironmentDatabasesCurrentMetricCpu) {
	o.Cpu = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *DatabaseCurrentMetric) GetMemory() EnvironmentDatabasesCurrentMetricMemory {
	if o == nil || o.Memory == nil {
		var ret EnvironmentDatabasesCurrentMetricMemory
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseCurrentMetric) GetMemoryOk() (*EnvironmentDatabasesCurrentMetricMemory, bool) {
	if o == nil || o.Memory == nil {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *DatabaseCurrentMetric) HasMemory() bool {
	if o != nil && o.Memory != nil {
		return true
	}

	return false
}

// SetMemory gets a reference to the given EnvironmentDatabasesCurrentMetricMemory and assigns it to the Memory field.
func (o *DatabaseCurrentMetric) SetMemory(v EnvironmentDatabasesCurrentMetricMemory) {
	o.Memory = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *DatabaseCurrentMetric) GetStorage() EnvironmentDatabasesCurrentMetricStorage {
	if o == nil || o.Storage == nil {
		var ret EnvironmentDatabasesCurrentMetricStorage
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseCurrentMetric) GetStorageOk() (*EnvironmentDatabasesCurrentMetricStorage, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *DatabaseCurrentMetric) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given EnvironmentDatabasesCurrentMetricStorage and assigns it to the Storage field.
func (o *DatabaseCurrentMetric) SetStorage(v EnvironmentDatabasesCurrentMetricStorage) {
	o.Storage = &v
}

func (o DatabaseCurrentMetric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cpu != nil {
		toSerialize["cpu"] = o.Cpu
	}
	if o.Memory != nil {
		toSerialize["memory"] = o.Memory
	}
	if o.Storage != nil {
		toSerialize["storage"] = o.Storage
	}
	return json.Marshal(toSerialize)
}

type NullableDatabaseCurrentMetric struct {
	value *DatabaseCurrentMetric
	isSet bool
}

func (v NullableDatabaseCurrentMetric) Get() *DatabaseCurrentMetric {
	return v.value
}

func (v *NullableDatabaseCurrentMetric) Set(val *DatabaseCurrentMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseCurrentMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseCurrentMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseCurrentMetric(val *DatabaseCurrentMetric) *NullableDatabaseCurrentMetric {
	return &NullableDatabaseCurrentMetric{value: val, isSet: true}
}

func (v NullableDatabaseCurrentMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseCurrentMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
