/*
[BETA] Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.0.0
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ApplicationStorageRequestStorage struct for ApplicationStorageRequestStorage
type ApplicationStorageRequestStorage struct {
	Type string `json:"type"`
	// unit is GB
	Size float32 `json:"size"`
	MountPoint string `json:"mount_point"`
}

// NewApplicationStorageRequestStorage instantiates a new ApplicationStorageRequestStorage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationStorageRequestStorage(type_ string, size float32, mountPoint string) *ApplicationStorageRequestStorage {
	this := ApplicationStorageRequestStorage{}
	this.Type = type_
	this.Size = size
	this.MountPoint = mountPoint
	return &this
}

// NewApplicationStorageRequestStorageWithDefaults instantiates a new ApplicationStorageRequestStorage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationStorageRequestStorageWithDefaults() *ApplicationStorageRequestStorage {
	this := ApplicationStorageRequestStorage{}
	return &this
}

// GetType returns the Type field value
func (o *ApplicationStorageRequestStorage) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApplicationStorageRequestStorage) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApplicationStorageRequestStorage) SetType(v string) {
	o.Type = v
}

// GetSize returns the Size field value
func (o *ApplicationStorageRequestStorage) GetSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ApplicationStorageRequestStorage) GetSizeOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ApplicationStorageRequestStorage) SetSize(v float32) {
	o.Size = v
}

// GetMountPoint returns the MountPoint field value
func (o *ApplicationStorageRequestStorage) GetMountPoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MountPoint
}

// GetMountPointOk returns a tuple with the MountPoint field value
// and a boolean to check if the value has been set.
func (o *ApplicationStorageRequestStorage) GetMountPointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MountPoint, true
}

// SetMountPoint sets field value
func (o *ApplicationStorageRequestStorage) SetMountPoint(v string) {
	o.MountPoint = v
}

func (o ApplicationStorageRequestStorage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["mount_point"] = o.MountPoint
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationStorageRequestStorage struct {
	value *ApplicationStorageRequestStorage
	isSet bool
}

func (v NullableApplicationStorageRequestStorage) Get() *ApplicationStorageRequestStorage {
	return v.value
}

func (v *NullableApplicationStorageRequestStorage) Set(val *ApplicationStorageRequestStorage) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationStorageRequestStorage) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationStorageRequestStorage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationStorageRequestStorage(val *ApplicationStorageRequestStorage) *NullableApplicationStorageRequestStorage {
	return &NullableApplicationStorageRequestStorage{value: val, isSet: true}
}

func (v NullableApplicationStorageRequestStorage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationStorageRequestStorage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


