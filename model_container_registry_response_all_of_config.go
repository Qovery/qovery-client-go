/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the ContainerRegistryResponseAllOfConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerRegistryResponseAllOfConfig{}

// ContainerRegistryResponseAllOfConfig struct for ContainerRegistryResponseAllOfConfig
type ContainerRegistryResponseAllOfConfig struct {
	Username             *string `json:"username,omitempty"`
	Region               *string `json:"region,omitempty"`
	ScalewayAccessKey    *string `json:"scaleway_access_key,omitempty"`
	AccessKeyId          *string `json:"access_key_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ContainerRegistryResponseAllOfConfig ContainerRegistryResponseAllOfConfig

// NewContainerRegistryResponseAllOfConfig instantiates a new ContainerRegistryResponseAllOfConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerRegistryResponseAllOfConfig() *ContainerRegistryResponseAllOfConfig {
	this := ContainerRegistryResponseAllOfConfig{}
	return &this
}

// NewContainerRegistryResponseAllOfConfigWithDefaults instantiates a new ContainerRegistryResponseAllOfConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerRegistryResponseAllOfConfigWithDefaults() *ContainerRegistryResponseAllOfConfig {
	this := ContainerRegistryResponseAllOfConfig{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ContainerRegistryResponseAllOfConfig) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponseAllOfConfig) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ContainerRegistryResponseAllOfConfig) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ContainerRegistryResponseAllOfConfig) SetUsername(v string) {
	o.Username = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ContainerRegistryResponseAllOfConfig) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponseAllOfConfig) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ContainerRegistryResponseAllOfConfig) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ContainerRegistryResponseAllOfConfig) SetRegion(v string) {
	o.Region = &v
}

// GetScalewayAccessKey returns the ScalewayAccessKey field value if set, zero value otherwise.
func (o *ContainerRegistryResponseAllOfConfig) GetScalewayAccessKey() string {
	if o == nil || IsNil(o.ScalewayAccessKey) {
		var ret string
		return ret
	}
	return *o.ScalewayAccessKey
}

// GetScalewayAccessKeyOk returns a tuple with the ScalewayAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponseAllOfConfig) GetScalewayAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ScalewayAccessKey) {
		return nil, false
	}
	return o.ScalewayAccessKey, true
}

// HasScalewayAccessKey returns a boolean if a field has been set.
func (o *ContainerRegistryResponseAllOfConfig) HasScalewayAccessKey() bool {
	if o != nil && !IsNil(o.ScalewayAccessKey) {
		return true
	}

	return false
}

// SetScalewayAccessKey gets a reference to the given string and assigns it to the ScalewayAccessKey field.
func (o *ContainerRegistryResponseAllOfConfig) SetScalewayAccessKey(v string) {
	o.ScalewayAccessKey = &v
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *ContainerRegistryResponseAllOfConfig) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId) {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerRegistryResponseAllOfConfig) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeyId) {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *ContainerRegistryResponseAllOfConfig) HasAccessKeyId() bool {
	if o != nil && !IsNil(o.AccessKeyId) {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *ContainerRegistryResponseAllOfConfig) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

func (o ContainerRegistryResponseAllOfConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerRegistryResponseAllOfConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.ScalewayAccessKey) {
		toSerialize["scaleway_access_key"] = o.ScalewayAccessKey
	}
	if !IsNil(o.AccessKeyId) {
		toSerialize["access_key_id"] = o.AccessKeyId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ContainerRegistryResponseAllOfConfig) UnmarshalJSON(data []byte) (err error) {
	varContainerRegistryResponseAllOfConfig := _ContainerRegistryResponseAllOfConfig{}

	err = json.Unmarshal(data, &varContainerRegistryResponseAllOfConfig)

	if err != nil {
		return err
	}

	*o = ContainerRegistryResponseAllOfConfig(varContainerRegistryResponseAllOfConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "username")
		delete(additionalProperties, "region")
		delete(additionalProperties, "scaleway_access_key")
		delete(additionalProperties, "access_key_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableContainerRegistryResponseAllOfConfig struct {
	value *ContainerRegistryResponseAllOfConfig
	isSet bool
}

func (v NullableContainerRegistryResponseAllOfConfig) Get() *ContainerRegistryResponseAllOfConfig {
	return v.value
}

func (v *NullableContainerRegistryResponseAllOfConfig) Set(val *ContainerRegistryResponseAllOfConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerRegistryResponseAllOfConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerRegistryResponseAllOfConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerRegistryResponseAllOfConfig(val *ContainerRegistryResponseAllOfConfig) *NullableContainerRegistryResponseAllOfConfig {
	return &NullableContainerRegistryResponseAllOfConfig{value: val, isSet: true}
}

func (v NullableContainerRegistryResponseAllOfConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerRegistryResponseAllOfConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
