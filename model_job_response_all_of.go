/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// JobResponseAllOf struct for JobResponseAllOf
type JobResponseAllOf struct {
	Environment ReferenceObject `json:"environment"`
	// Maximum cpu that can be allocated to the job based on organization cluster configuration. unit is millicores (m). 1000m = 1 cpu
	MaximumCpu int32 `json:"maximum_cpu"`
	// Maximum memory that can be allocated to the job based on organization cluster configuration. unit is MB. 1024 MB = 1GB
	MaximumMemory int32 `json:"maximum_memory"`
	// name is case insensitive
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
	// unit is millicores (m). 1000m = 1 cpu
	Cpu int32 `json:"cpu"`
	// unit is MB. 1024 MB = 1GB
	Memory int32 `json:"memory"`
	// Maximum number of restart allowed before the job is considered as failed 0 means that no restart/crash of the job is allowed
	MaxNbRestart *int32 `json:"max_nb_restart,omitempty"`
	// Maximum number of seconds allowed for the job to run before killing it and mark it as failed
	MaxDurationSeconds *int32 `json:"max_duration_seconds,omitempty"`
	// Indicates if the 'environment preview option' is enabled for this container.   If enabled, a preview environment will be automatically cloned when `/preview` endpoint is called.   If not specified, it takes the value of the `auto_preview` property from the associated environment.
	AutoPreview bool `json:"auto_preview"`
	// Port where to run readiness and liveliness probes checks. The port will not be exposed externally
	Port         NullableInt32             `json:"port,omitempty"`
	Source       *JobResponseAllOfSource   `json:"source,omitempty"`
	Healthchecks Healthcheck               `json:"healthchecks"`
	Schedule     *JobResponseAllOfSchedule `json:"schedule,omitempty"`
	// Specify if the job will be automatically updated after receiving a new image tag or a new commit according to the source type.  The new image tag shall be communicated via the \"Auto Deploy job\" endpoint https://api-doc.qovery.com/#tag/Jobs/operation/autoDeployJobEnvironments
	AutoDeploy *bool `json:"auto_deploy,omitempty"`
}

// NewJobResponseAllOf instantiates a new JobResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobResponseAllOf(environment ReferenceObject, maximumCpu int32, maximumMemory int32, name string, cpu int32, memory int32, autoPreview bool, healthchecks Healthcheck) *JobResponseAllOf {
	this := JobResponseAllOf{}
	this.Environment = environment
	this.MaximumCpu = maximumCpu
	this.MaximumMemory = maximumMemory
	this.Name = name
	this.Cpu = cpu
	this.Memory = memory
	this.AutoPreview = autoPreview
	this.Healthchecks = healthchecks
	return &this
}

// NewJobResponseAllOfWithDefaults instantiates a new JobResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobResponseAllOfWithDefaults() *JobResponseAllOf {
	this := JobResponseAllOf{}
	return &this
}

// GetEnvironment returns the Environment field value
func (o *JobResponseAllOf) GetEnvironment() ReferenceObject {
	if o == nil {
		var ret ReferenceObject
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetEnvironmentOk() (*ReferenceObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *JobResponseAllOf) SetEnvironment(v ReferenceObject) {
	o.Environment = v
}

// GetMaximumCpu returns the MaximumCpu field value
func (o *JobResponseAllOf) GetMaximumCpu() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaximumCpu
}

// GetMaximumCpuOk returns a tuple with the MaximumCpu field value
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetMaximumCpuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaximumCpu, true
}

// SetMaximumCpu sets field value
func (o *JobResponseAllOf) SetMaximumCpu(v int32) {
	o.MaximumCpu = v
}

// GetMaximumMemory returns the MaximumMemory field value
func (o *JobResponseAllOf) GetMaximumMemory() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaximumMemory
}

// GetMaximumMemoryOk returns a tuple with the MaximumMemory field value
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetMaximumMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaximumMemory, true
}

// SetMaximumMemory sets field value
func (o *JobResponseAllOf) SetMaximumMemory(v int32) {
	o.MaximumMemory = v
}

// GetName returns the Name field value
func (o *JobResponseAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *JobResponseAllOf) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *JobResponseAllOf) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *JobResponseAllOf) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *JobResponseAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetCpu returns the Cpu field value
func (o *JobResponseAllOf) GetCpu() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetCpuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *JobResponseAllOf) SetCpu(v int32) {
	o.Cpu = v
}

// GetMemory returns the Memory field value
func (o *JobResponseAllOf) GetMemory() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *JobResponseAllOf) SetMemory(v int32) {
	o.Memory = v
}

// GetMaxNbRestart returns the MaxNbRestart field value if set, zero value otherwise.
func (o *JobResponseAllOf) GetMaxNbRestart() int32 {
	if o == nil || o.MaxNbRestart == nil {
		var ret int32
		return ret
	}
	return *o.MaxNbRestart
}

// GetMaxNbRestartOk returns a tuple with the MaxNbRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetMaxNbRestartOk() (*int32, bool) {
	if o == nil || o.MaxNbRestart == nil {
		return nil, false
	}
	return o.MaxNbRestart, true
}

// HasMaxNbRestart returns a boolean if a field has been set.
func (o *JobResponseAllOf) HasMaxNbRestart() bool {
	if o != nil && o.MaxNbRestart != nil {
		return true
	}

	return false
}

// SetMaxNbRestart gets a reference to the given int32 and assigns it to the MaxNbRestart field.
func (o *JobResponseAllOf) SetMaxNbRestart(v int32) {
	o.MaxNbRestart = &v
}

// GetMaxDurationSeconds returns the MaxDurationSeconds field value if set, zero value otherwise.
func (o *JobResponseAllOf) GetMaxDurationSeconds() int32 {
	if o == nil || o.MaxDurationSeconds == nil {
		var ret int32
		return ret
	}
	return *o.MaxDurationSeconds
}

// GetMaxDurationSecondsOk returns a tuple with the MaxDurationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetMaxDurationSecondsOk() (*int32, bool) {
	if o == nil || o.MaxDurationSeconds == nil {
		return nil, false
	}
	return o.MaxDurationSeconds, true
}

// HasMaxDurationSeconds returns a boolean if a field has been set.
func (o *JobResponseAllOf) HasMaxDurationSeconds() bool {
	if o != nil && o.MaxDurationSeconds != nil {
		return true
	}

	return false
}

// SetMaxDurationSeconds gets a reference to the given int32 and assigns it to the MaxDurationSeconds field.
func (o *JobResponseAllOf) SetMaxDurationSeconds(v int32) {
	o.MaxDurationSeconds = &v
}

// GetAutoPreview returns the AutoPreview field value
func (o *JobResponseAllOf) GetAutoPreview() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoPreview
}

// GetAutoPreviewOk returns a tuple with the AutoPreview field value
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetAutoPreviewOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoPreview, true
}

// SetAutoPreview sets field value
func (o *JobResponseAllOf) SetAutoPreview(v bool) {
	o.AutoPreview = v
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseAllOf) GetPort() int32 {
	if o == nil || o.Port.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseAllOf) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *JobResponseAllOf) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *JobResponseAllOf) SetPort(v int32) {
	o.Port.Set(&v)
}

// SetPortNil sets the value for Port to be an explicit nil
func (o *JobResponseAllOf) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *JobResponseAllOf) UnsetPort() {
	o.Port.Unset()
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *JobResponseAllOf) GetSource() JobResponseAllOfSource {
	if o == nil || o.Source == nil {
		var ret JobResponseAllOfSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetSourceOk() (*JobResponseAllOfSource, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *JobResponseAllOf) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given JobResponseAllOfSource and assigns it to the Source field.
func (o *JobResponseAllOf) SetSource(v JobResponseAllOfSource) {
	o.Source = &v
}

// GetHealthchecks returns the Healthchecks field value
func (o *JobResponseAllOf) GetHealthchecks() Healthcheck {
	if o == nil {
		var ret Healthcheck
		return ret
	}

	return o.Healthchecks
}

// GetHealthchecksOk returns a tuple with the Healthchecks field value
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetHealthchecksOk() (*Healthcheck, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Healthchecks, true
}

// SetHealthchecks sets field value
func (o *JobResponseAllOf) SetHealthchecks(v Healthcheck) {
	o.Healthchecks = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *JobResponseAllOf) GetSchedule() JobResponseAllOfSchedule {
	if o == nil || o.Schedule == nil {
		var ret JobResponseAllOfSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetScheduleOk() (*JobResponseAllOfSchedule, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *JobResponseAllOf) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given JobResponseAllOfSchedule and assigns it to the Schedule field.
func (o *JobResponseAllOf) SetSchedule(v JobResponseAllOfSchedule) {
	o.Schedule = &v
}

// GetAutoDeploy returns the AutoDeploy field value if set, zero value otherwise.
func (o *JobResponseAllOf) GetAutoDeploy() bool {
	if o == nil || o.AutoDeploy == nil {
		var ret bool
		return ret
	}
	return *o.AutoDeploy
}

// GetAutoDeployOk returns a tuple with the AutoDeploy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobResponseAllOf) GetAutoDeployOk() (*bool, bool) {
	if o == nil || o.AutoDeploy == nil {
		return nil, false
	}
	return o.AutoDeploy, true
}

// HasAutoDeploy returns a boolean if a field has been set.
func (o *JobResponseAllOf) HasAutoDeploy() bool {
	if o != nil && o.AutoDeploy != nil {
		return true
	}

	return false
}

// SetAutoDeploy gets a reference to the given bool and assigns it to the AutoDeploy field.
func (o *JobResponseAllOf) SetAutoDeploy(v bool) {
	o.AutoDeploy = &v
}

func (o JobResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["environment"] = o.Environment
	}
	if true {
		toSerialize["maximum_cpu"] = o.MaximumCpu
	}
	if true {
		toSerialize["maximum_memory"] = o.MaximumMemory
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["cpu"] = o.Cpu
	}
	if true {
		toSerialize["memory"] = o.Memory
	}
	if o.MaxNbRestart != nil {
		toSerialize["max_nb_restart"] = o.MaxNbRestart
	}
	if o.MaxDurationSeconds != nil {
		toSerialize["max_duration_seconds"] = o.MaxDurationSeconds
	}
	if true {
		toSerialize["auto_preview"] = o.AutoPreview
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if true {
		toSerialize["healthchecks"] = o.Healthchecks
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	if o.AutoDeploy != nil {
		toSerialize["auto_deploy"] = o.AutoDeploy
	}
	return json.Marshal(toSerialize)
}

type NullableJobResponseAllOf struct {
	value *JobResponseAllOf
	isSet bool
}

func (v NullableJobResponseAllOf) Get() *JobResponseAllOf {
	return v.value
}

func (v *NullableJobResponseAllOf) Set(val *JobResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableJobResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableJobResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobResponseAllOf(val *JobResponseAllOf) *NullableJobResponseAllOf {
	return &NullableJobResponseAllOf{value: val, isSet: true}
}

func (v NullableJobResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
