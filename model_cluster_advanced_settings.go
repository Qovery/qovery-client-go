/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the ClusterAdvancedSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterAdvancedSettings{}

// ClusterAdvancedSettings struct for ClusterAdvancedSettings
type ClusterAdvancedSettings struct {
	// Set the number of retention days for EKS Cloudwatch logs
	AwsCloudwatchEksLogsRetentionDays *int32 `json:"aws.cloudwatch.eks_logs_retention_days,omitempty"`
	// Enable flow logs for on the VPC and store them in an S3 bucket
	AwsVpcEnableS3FlowLogs *bool `json:"aws.vpc.enable_s3_flow_logs,omitempty"`
	// Set the number of retention days for flow logs. Disable with value \"0\"
	AwsVpcFlowLogsRetentionDays *int32 `json:"aws.vpc.flow_logs_retention_days,omitempty"`
	// For how long in week loki is going to keep logs of your applications
	LokiLogRetentionInWeek *int32 `json:"loki.log_retention_in_week,omitempty"`
	// Configure the number of seconds before cleaning images in the registry
	RegistryImageRetentionTime *int32 `json:"registry.image_retention_time,omitempty"`
	// Add additional tags on the cluster dedicated registry
	CloudProviderContainerRegistryTags *map[string]string `json:"cloud_provider.container_registry.tags,omitempty"`
	// Select the size of the main load_balancer (only effective for Scaleway)
	LoadBalancerSize *string `json:"load_balancer.size,omitempty"`
	// Deny public access to any PostgreSQL database
	DatabasePostgresqlDenyPublicAccess *bool `json:"database.postgresql.deny_public_access,omitempty"`
	// List of CIDRs allowed to access the PostgreSQL database
	DatabasePostgresqlAllowedCidrs []string `json:"database.postgresql.allowed_cidrs,omitempty"`
	// Deny public access to any MySql database
	DatabaseMysqlDenyPublicAccess *bool `json:"database.mysql.deny_public_access,omitempty"`
	// List of CIDRs allowed to access the MySql database
	DatabaseMysqlAllowedCidrs []string `json:"database.mysql.allowed_cidrs,omitempty"`
	// Deny public access to any MongoDB/DocumentDB database
	DatabaseMongodbDenyPublicAccess *bool `json:"database.mongodb.deny_public_access,omitempty"`
	// List of CIDRs allowed to access the MongoDB/DocumentDB database
	DatabaseMongodbAllowedCidrs []string `json:"database.mongodb.allowed_cidrs,omitempty"`
	// Deny public access to any Redis database
	DatabaseRedisDenyPublicAccess *bool `json:"database.redis.deny_public_access,omitempty"`
	// List of CIDRs allowed to access the Redis database
	DatabaseRedisAllowedCidrs []string `json:"database.redis.allowed_cidrs,omitempty"`
	// AWS IAM group name with cluster access
	AwsIamAdminGroup *string `json:"aws.iam.admin_group,omitempty"`
	// Specify the [IMDS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) version you want to use:   * `required`: IMDS V2 only   * `optional`: IMDS V1 + V2
	AwsEksEc2MetadataImds *string `json:"aws.eks.ec2.metadata_imds,omitempty"`
	// Deprecated
	PlecoResourcesTtl     *int32                     `json:"pleco.resources_ttl,omitempty"`
	RegistryMirroringMode *RegistryMirroringModeEnum `json:"registry.mirroring_mode,omitempty"`
	// vcpu request in millicores
	NginxVcpuRequestInMilli *int32 `json:"nginx.vcpu.request_in_milli,omitempty"`
	// vcpu limit in millicores
	NginxVcpuLimitInMilli *int32 `json:"nginx.vcpu.limit_in_milli,omitempty"`
	// memory request in MiB
	NginxMemoryRequestInMib *int32 `json:"nginx.memory.request_in_mib,omitempty"`
	// memory limit in MiB
	NginxMemoryLimitInMib *int32 `json:"nginx.memory.limit_in_mib,omitempty"`
	// hpa cpu threshold in percentage
	NginxHpaCpuUtilizationPercentageThreshold *int32 `json:"nginx.hpa.cpu_utilization_percentage_threshold,omitempty"`
	// hpa memory threshold in percentage
	NginxHpaMemoryUtilizationPercentageThreshold *int32 `json:"nginx.hpa.memory_utilization_percentage_threshold,omitempty"`
	// hpa minimum number of instances
	NginxHpaMinNumberInstances *int32 `json:"nginx.hpa.min_number_instances,omitempty"`
	// hpa maximum number of instances
	NginxHpaMaxNumberInstances *int32 `json:"nginx.hpa.max_number_instances,omitempty"`
}

// NewClusterAdvancedSettings instantiates a new ClusterAdvancedSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterAdvancedSettings() *ClusterAdvancedSettings {
	this := ClusterAdvancedSettings{}
	var awsCloudwatchEksLogsRetentionDays int32 = 90
	this.AwsCloudwatchEksLogsRetentionDays = &awsCloudwatchEksLogsRetentionDays
	var awsVpcEnableS3FlowLogs bool = false
	this.AwsVpcEnableS3FlowLogs = &awsVpcEnableS3FlowLogs
	var awsVpcFlowLogsRetentionDays int32 = 365
	this.AwsVpcFlowLogsRetentionDays = &awsVpcFlowLogsRetentionDays
	var lokiLogRetentionInWeek int32 = 12
	this.LokiLogRetentionInWeek = &lokiLogRetentionInWeek
	var registryImageRetentionTime int32 = 31536000
	this.RegistryImageRetentionTime = &registryImageRetentionTime
	var loadBalancerSize string = "lb-s"
	this.LoadBalancerSize = &loadBalancerSize
	var databasePostgresqlDenyPublicAccess bool = false
	this.DatabasePostgresqlDenyPublicAccess = &databasePostgresqlDenyPublicAccess
	var databaseMysqlDenyPublicAccess bool = false
	this.DatabaseMysqlDenyPublicAccess = &databaseMysqlDenyPublicAccess
	var databaseMongodbDenyPublicAccess bool = false
	this.DatabaseMongodbDenyPublicAccess = &databaseMongodbDenyPublicAccess
	var databaseRedisDenyPublicAccess bool = false
	this.DatabaseRedisDenyPublicAccess = &databaseRedisDenyPublicAccess
	var awsIamAdminGroup string = "Admins"
	this.AwsIamAdminGroup = &awsIamAdminGroup
	var awsEksEc2MetadataImds string = "optional"
	this.AwsEksEc2MetadataImds = &awsEksEc2MetadataImds
	var plecoResourcesTtl int32 = -1
	this.PlecoResourcesTtl = &plecoResourcesTtl
	var registryMirroringMode RegistryMirroringModeEnum = REGISTRYMIRRORINGMODEENUM_SERVICE
	this.RegistryMirroringMode = &registryMirroringMode
	var nginxVcpuRequestInMilli int32 = 100
	this.NginxVcpuRequestInMilli = &nginxVcpuRequestInMilli
	var nginxVcpuLimitInMilli int32 = 500
	this.NginxVcpuLimitInMilli = &nginxVcpuLimitInMilli
	var nginxMemoryRequestInMib int32 = 768
	this.NginxMemoryRequestInMib = &nginxMemoryRequestInMib
	var nginxMemoryLimitInMib int32 = 768
	this.NginxMemoryLimitInMib = &nginxMemoryLimitInMib
	var nginxHpaCpuUtilizationPercentageThreshold int32 = 50
	this.NginxHpaCpuUtilizationPercentageThreshold = &nginxHpaCpuUtilizationPercentageThreshold
	var nginxHpaMemoryUtilizationPercentageThreshold int32 = 50
	this.NginxHpaMemoryUtilizationPercentageThreshold = &nginxHpaMemoryUtilizationPercentageThreshold
	var nginxHpaMinNumberInstances int32 = 2
	this.NginxHpaMinNumberInstances = &nginxHpaMinNumberInstances
	var nginxHpaMaxNumberInstances int32 = 25
	this.NginxHpaMaxNumberInstances = &nginxHpaMaxNumberInstances
	return &this
}

// NewClusterAdvancedSettingsWithDefaults instantiates a new ClusterAdvancedSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterAdvancedSettingsWithDefaults() *ClusterAdvancedSettings {
	this := ClusterAdvancedSettings{}
	var awsCloudwatchEksLogsRetentionDays int32 = 90
	this.AwsCloudwatchEksLogsRetentionDays = &awsCloudwatchEksLogsRetentionDays
	var awsVpcEnableS3FlowLogs bool = false
	this.AwsVpcEnableS3FlowLogs = &awsVpcEnableS3FlowLogs
	var awsVpcFlowLogsRetentionDays int32 = 365
	this.AwsVpcFlowLogsRetentionDays = &awsVpcFlowLogsRetentionDays
	var lokiLogRetentionInWeek int32 = 12
	this.LokiLogRetentionInWeek = &lokiLogRetentionInWeek
	var registryImageRetentionTime int32 = 31536000
	this.RegistryImageRetentionTime = &registryImageRetentionTime
	var loadBalancerSize string = "lb-s"
	this.LoadBalancerSize = &loadBalancerSize
	var databasePostgresqlDenyPublicAccess bool = false
	this.DatabasePostgresqlDenyPublicAccess = &databasePostgresqlDenyPublicAccess
	var databaseMysqlDenyPublicAccess bool = false
	this.DatabaseMysqlDenyPublicAccess = &databaseMysqlDenyPublicAccess
	var databaseMongodbDenyPublicAccess bool = false
	this.DatabaseMongodbDenyPublicAccess = &databaseMongodbDenyPublicAccess
	var databaseRedisDenyPublicAccess bool = false
	this.DatabaseRedisDenyPublicAccess = &databaseRedisDenyPublicAccess
	var awsIamAdminGroup string = "Admins"
	this.AwsIamAdminGroup = &awsIamAdminGroup
	var awsEksEc2MetadataImds string = "optional"
	this.AwsEksEc2MetadataImds = &awsEksEc2MetadataImds
	var plecoResourcesTtl int32 = -1
	this.PlecoResourcesTtl = &plecoResourcesTtl
	var registryMirroringMode RegistryMirroringModeEnum = REGISTRYMIRRORINGMODEENUM_SERVICE
	this.RegistryMirroringMode = &registryMirroringMode
	var nginxVcpuRequestInMilli int32 = 100
	this.NginxVcpuRequestInMilli = &nginxVcpuRequestInMilli
	var nginxVcpuLimitInMilli int32 = 500
	this.NginxVcpuLimitInMilli = &nginxVcpuLimitInMilli
	var nginxMemoryRequestInMib int32 = 768
	this.NginxMemoryRequestInMib = &nginxMemoryRequestInMib
	var nginxMemoryLimitInMib int32 = 768
	this.NginxMemoryLimitInMib = &nginxMemoryLimitInMib
	var nginxHpaCpuUtilizationPercentageThreshold int32 = 50
	this.NginxHpaCpuUtilizationPercentageThreshold = &nginxHpaCpuUtilizationPercentageThreshold
	var nginxHpaMemoryUtilizationPercentageThreshold int32 = 50
	this.NginxHpaMemoryUtilizationPercentageThreshold = &nginxHpaMemoryUtilizationPercentageThreshold
	var nginxHpaMinNumberInstances int32 = 2
	this.NginxHpaMinNumberInstances = &nginxHpaMinNumberInstances
	var nginxHpaMaxNumberInstances int32 = 25
	this.NginxHpaMaxNumberInstances = &nginxHpaMaxNumberInstances
	return &this
}

// GetAwsCloudwatchEksLogsRetentionDays returns the AwsCloudwatchEksLogsRetentionDays field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetAwsCloudwatchEksLogsRetentionDays() int32 {
	if o == nil || IsNil(o.AwsCloudwatchEksLogsRetentionDays) {
		var ret int32
		return ret
	}
	return *o.AwsCloudwatchEksLogsRetentionDays
}

// GetAwsCloudwatchEksLogsRetentionDaysOk returns a tuple with the AwsCloudwatchEksLogsRetentionDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetAwsCloudwatchEksLogsRetentionDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.AwsCloudwatchEksLogsRetentionDays) {
		return nil, false
	}
	return o.AwsCloudwatchEksLogsRetentionDays, true
}

// HasAwsCloudwatchEksLogsRetentionDays returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasAwsCloudwatchEksLogsRetentionDays() bool {
	if o != nil && !IsNil(o.AwsCloudwatchEksLogsRetentionDays) {
		return true
	}

	return false
}

// SetAwsCloudwatchEksLogsRetentionDays gets a reference to the given int32 and assigns it to the AwsCloudwatchEksLogsRetentionDays field.
func (o *ClusterAdvancedSettings) SetAwsCloudwatchEksLogsRetentionDays(v int32) {
	o.AwsCloudwatchEksLogsRetentionDays = &v
}

// GetAwsVpcEnableS3FlowLogs returns the AwsVpcEnableS3FlowLogs field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetAwsVpcEnableS3FlowLogs() bool {
	if o == nil || IsNil(o.AwsVpcEnableS3FlowLogs) {
		var ret bool
		return ret
	}
	return *o.AwsVpcEnableS3FlowLogs
}

// GetAwsVpcEnableS3FlowLogsOk returns a tuple with the AwsVpcEnableS3FlowLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetAwsVpcEnableS3FlowLogsOk() (*bool, bool) {
	if o == nil || IsNil(o.AwsVpcEnableS3FlowLogs) {
		return nil, false
	}
	return o.AwsVpcEnableS3FlowLogs, true
}

// HasAwsVpcEnableS3FlowLogs returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasAwsVpcEnableS3FlowLogs() bool {
	if o != nil && !IsNil(o.AwsVpcEnableS3FlowLogs) {
		return true
	}

	return false
}

// SetAwsVpcEnableS3FlowLogs gets a reference to the given bool and assigns it to the AwsVpcEnableS3FlowLogs field.
func (o *ClusterAdvancedSettings) SetAwsVpcEnableS3FlowLogs(v bool) {
	o.AwsVpcEnableS3FlowLogs = &v
}

// GetAwsVpcFlowLogsRetentionDays returns the AwsVpcFlowLogsRetentionDays field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetAwsVpcFlowLogsRetentionDays() int32 {
	if o == nil || IsNil(o.AwsVpcFlowLogsRetentionDays) {
		var ret int32
		return ret
	}
	return *o.AwsVpcFlowLogsRetentionDays
}

// GetAwsVpcFlowLogsRetentionDaysOk returns a tuple with the AwsVpcFlowLogsRetentionDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetAwsVpcFlowLogsRetentionDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.AwsVpcFlowLogsRetentionDays) {
		return nil, false
	}
	return o.AwsVpcFlowLogsRetentionDays, true
}

// HasAwsVpcFlowLogsRetentionDays returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasAwsVpcFlowLogsRetentionDays() bool {
	if o != nil && !IsNil(o.AwsVpcFlowLogsRetentionDays) {
		return true
	}

	return false
}

// SetAwsVpcFlowLogsRetentionDays gets a reference to the given int32 and assigns it to the AwsVpcFlowLogsRetentionDays field.
func (o *ClusterAdvancedSettings) SetAwsVpcFlowLogsRetentionDays(v int32) {
	o.AwsVpcFlowLogsRetentionDays = &v
}

// GetLokiLogRetentionInWeek returns the LokiLogRetentionInWeek field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetLokiLogRetentionInWeek() int32 {
	if o == nil || IsNil(o.LokiLogRetentionInWeek) {
		var ret int32
		return ret
	}
	return *o.LokiLogRetentionInWeek
}

// GetLokiLogRetentionInWeekOk returns a tuple with the LokiLogRetentionInWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetLokiLogRetentionInWeekOk() (*int32, bool) {
	if o == nil || IsNil(o.LokiLogRetentionInWeek) {
		return nil, false
	}
	return o.LokiLogRetentionInWeek, true
}

// HasLokiLogRetentionInWeek returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasLokiLogRetentionInWeek() bool {
	if o != nil && !IsNil(o.LokiLogRetentionInWeek) {
		return true
	}

	return false
}

// SetLokiLogRetentionInWeek gets a reference to the given int32 and assigns it to the LokiLogRetentionInWeek field.
func (o *ClusterAdvancedSettings) SetLokiLogRetentionInWeek(v int32) {
	o.LokiLogRetentionInWeek = &v
}

// GetRegistryImageRetentionTime returns the RegistryImageRetentionTime field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetRegistryImageRetentionTime() int32 {
	if o == nil || IsNil(o.RegistryImageRetentionTime) {
		var ret int32
		return ret
	}
	return *o.RegistryImageRetentionTime
}

// GetRegistryImageRetentionTimeOk returns a tuple with the RegistryImageRetentionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetRegistryImageRetentionTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.RegistryImageRetentionTime) {
		return nil, false
	}
	return o.RegistryImageRetentionTime, true
}

// HasRegistryImageRetentionTime returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasRegistryImageRetentionTime() bool {
	if o != nil && !IsNil(o.RegistryImageRetentionTime) {
		return true
	}

	return false
}

// SetRegistryImageRetentionTime gets a reference to the given int32 and assigns it to the RegistryImageRetentionTime field.
func (o *ClusterAdvancedSettings) SetRegistryImageRetentionTime(v int32) {
	o.RegistryImageRetentionTime = &v
}

// GetCloudProviderContainerRegistryTags returns the CloudProviderContainerRegistryTags field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetCloudProviderContainerRegistryTags() map[string]string {
	if o == nil || IsNil(o.CloudProviderContainerRegistryTags) {
		var ret map[string]string
		return ret
	}
	return *o.CloudProviderContainerRegistryTags
}

// GetCloudProviderContainerRegistryTagsOk returns a tuple with the CloudProviderContainerRegistryTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetCloudProviderContainerRegistryTagsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CloudProviderContainerRegistryTags) {
		return nil, false
	}
	return o.CloudProviderContainerRegistryTags, true
}

// HasCloudProviderContainerRegistryTags returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasCloudProviderContainerRegistryTags() bool {
	if o != nil && !IsNil(o.CloudProviderContainerRegistryTags) {
		return true
	}

	return false
}

// SetCloudProviderContainerRegistryTags gets a reference to the given map[string]string and assigns it to the CloudProviderContainerRegistryTags field.
func (o *ClusterAdvancedSettings) SetCloudProviderContainerRegistryTags(v map[string]string) {
	o.CloudProviderContainerRegistryTags = &v
}

// GetLoadBalancerSize returns the LoadBalancerSize field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetLoadBalancerSize() string {
	if o == nil || IsNil(o.LoadBalancerSize) {
		var ret string
		return ret
	}
	return *o.LoadBalancerSize
}

// GetLoadBalancerSizeOk returns a tuple with the LoadBalancerSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetLoadBalancerSizeOk() (*string, bool) {
	if o == nil || IsNil(o.LoadBalancerSize) {
		return nil, false
	}
	return o.LoadBalancerSize, true
}

// HasLoadBalancerSize returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasLoadBalancerSize() bool {
	if o != nil && !IsNil(o.LoadBalancerSize) {
		return true
	}

	return false
}

// SetLoadBalancerSize gets a reference to the given string and assigns it to the LoadBalancerSize field.
func (o *ClusterAdvancedSettings) SetLoadBalancerSize(v string) {
	o.LoadBalancerSize = &v
}

// GetDatabasePostgresqlDenyPublicAccess returns the DatabasePostgresqlDenyPublicAccess field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetDatabasePostgresqlDenyPublicAccess() bool {
	if o == nil || IsNil(o.DatabasePostgresqlDenyPublicAccess) {
		var ret bool
		return ret
	}
	return *o.DatabasePostgresqlDenyPublicAccess
}

// GetDatabasePostgresqlDenyPublicAccessOk returns a tuple with the DatabasePostgresqlDenyPublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetDatabasePostgresqlDenyPublicAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.DatabasePostgresqlDenyPublicAccess) {
		return nil, false
	}
	return o.DatabasePostgresqlDenyPublicAccess, true
}

// HasDatabasePostgresqlDenyPublicAccess returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasDatabasePostgresqlDenyPublicAccess() bool {
	if o != nil && !IsNil(o.DatabasePostgresqlDenyPublicAccess) {
		return true
	}

	return false
}

// SetDatabasePostgresqlDenyPublicAccess gets a reference to the given bool and assigns it to the DatabasePostgresqlDenyPublicAccess field.
func (o *ClusterAdvancedSettings) SetDatabasePostgresqlDenyPublicAccess(v bool) {
	o.DatabasePostgresqlDenyPublicAccess = &v
}

// GetDatabasePostgresqlAllowedCidrs returns the DatabasePostgresqlAllowedCidrs field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetDatabasePostgresqlAllowedCidrs() []string {
	if o == nil || IsNil(o.DatabasePostgresqlAllowedCidrs) {
		var ret []string
		return ret
	}
	return o.DatabasePostgresqlAllowedCidrs
}

// GetDatabasePostgresqlAllowedCidrsOk returns a tuple with the DatabasePostgresqlAllowedCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetDatabasePostgresqlAllowedCidrsOk() ([]string, bool) {
	if o == nil || IsNil(o.DatabasePostgresqlAllowedCidrs) {
		return nil, false
	}
	return o.DatabasePostgresqlAllowedCidrs, true
}

// HasDatabasePostgresqlAllowedCidrs returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasDatabasePostgresqlAllowedCidrs() bool {
	if o != nil && !IsNil(o.DatabasePostgresqlAllowedCidrs) {
		return true
	}

	return false
}

// SetDatabasePostgresqlAllowedCidrs gets a reference to the given []string and assigns it to the DatabasePostgresqlAllowedCidrs field.
func (o *ClusterAdvancedSettings) SetDatabasePostgresqlAllowedCidrs(v []string) {
	o.DatabasePostgresqlAllowedCidrs = v
}

// GetDatabaseMysqlDenyPublicAccess returns the DatabaseMysqlDenyPublicAccess field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetDatabaseMysqlDenyPublicAccess() bool {
	if o == nil || IsNil(o.DatabaseMysqlDenyPublicAccess) {
		var ret bool
		return ret
	}
	return *o.DatabaseMysqlDenyPublicAccess
}

// GetDatabaseMysqlDenyPublicAccessOk returns a tuple with the DatabaseMysqlDenyPublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetDatabaseMysqlDenyPublicAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.DatabaseMysqlDenyPublicAccess) {
		return nil, false
	}
	return o.DatabaseMysqlDenyPublicAccess, true
}

// HasDatabaseMysqlDenyPublicAccess returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasDatabaseMysqlDenyPublicAccess() bool {
	if o != nil && !IsNil(o.DatabaseMysqlDenyPublicAccess) {
		return true
	}

	return false
}

// SetDatabaseMysqlDenyPublicAccess gets a reference to the given bool and assigns it to the DatabaseMysqlDenyPublicAccess field.
func (o *ClusterAdvancedSettings) SetDatabaseMysqlDenyPublicAccess(v bool) {
	o.DatabaseMysqlDenyPublicAccess = &v
}

// GetDatabaseMysqlAllowedCidrs returns the DatabaseMysqlAllowedCidrs field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetDatabaseMysqlAllowedCidrs() []string {
	if o == nil || IsNil(o.DatabaseMysqlAllowedCidrs) {
		var ret []string
		return ret
	}
	return o.DatabaseMysqlAllowedCidrs
}

// GetDatabaseMysqlAllowedCidrsOk returns a tuple with the DatabaseMysqlAllowedCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetDatabaseMysqlAllowedCidrsOk() ([]string, bool) {
	if o == nil || IsNil(o.DatabaseMysqlAllowedCidrs) {
		return nil, false
	}
	return o.DatabaseMysqlAllowedCidrs, true
}

// HasDatabaseMysqlAllowedCidrs returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasDatabaseMysqlAllowedCidrs() bool {
	if o != nil && !IsNil(o.DatabaseMysqlAllowedCidrs) {
		return true
	}

	return false
}

// SetDatabaseMysqlAllowedCidrs gets a reference to the given []string and assigns it to the DatabaseMysqlAllowedCidrs field.
func (o *ClusterAdvancedSettings) SetDatabaseMysqlAllowedCidrs(v []string) {
	o.DatabaseMysqlAllowedCidrs = v
}

// GetDatabaseMongodbDenyPublicAccess returns the DatabaseMongodbDenyPublicAccess field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetDatabaseMongodbDenyPublicAccess() bool {
	if o == nil || IsNil(o.DatabaseMongodbDenyPublicAccess) {
		var ret bool
		return ret
	}
	return *o.DatabaseMongodbDenyPublicAccess
}

// GetDatabaseMongodbDenyPublicAccessOk returns a tuple with the DatabaseMongodbDenyPublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetDatabaseMongodbDenyPublicAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.DatabaseMongodbDenyPublicAccess) {
		return nil, false
	}
	return o.DatabaseMongodbDenyPublicAccess, true
}

// HasDatabaseMongodbDenyPublicAccess returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasDatabaseMongodbDenyPublicAccess() bool {
	if o != nil && !IsNil(o.DatabaseMongodbDenyPublicAccess) {
		return true
	}

	return false
}

// SetDatabaseMongodbDenyPublicAccess gets a reference to the given bool and assigns it to the DatabaseMongodbDenyPublicAccess field.
func (o *ClusterAdvancedSettings) SetDatabaseMongodbDenyPublicAccess(v bool) {
	o.DatabaseMongodbDenyPublicAccess = &v
}

// GetDatabaseMongodbAllowedCidrs returns the DatabaseMongodbAllowedCidrs field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetDatabaseMongodbAllowedCidrs() []string {
	if o == nil || IsNil(o.DatabaseMongodbAllowedCidrs) {
		var ret []string
		return ret
	}
	return o.DatabaseMongodbAllowedCidrs
}

// GetDatabaseMongodbAllowedCidrsOk returns a tuple with the DatabaseMongodbAllowedCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetDatabaseMongodbAllowedCidrsOk() ([]string, bool) {
	if o == nil || IsNil(o.DatabaseMongodbAllowedCidrs) {
		return nil, false
	}
	return o.DatabaseMongodbAllowedCidrs, true
}

// HasDatabaseMongodbAllowedCidrs returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasDatabaseMongodbAllowedCidrs() bool {
	if o != nil && !IsNil(o.DatabaseMongodbAllowedCidrs) {
		return true
	}

	return false
}

// SetDatabaseMongodbAllowedCidrs gets a reference to the given []string and assigns it to the DatabaseMongodbAllowedCidrs field.
func (o *ClusterAdvancedSettings) SetDatabaseMongodbAllowedCidrs(v []string) {
	o.DatabaseMongodbAllowedCidrs = v
}

// GetDatabaseRedisDenyPublicAccess returns the DatabaseRedisDenyPublicAccess field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetDatabaseRedisDenyPublicAccess() bool {
	if o == nil || IsNil(o.DatabaseRedisDenyPublicAccess) {
		var ret bool
		return ret
	}
	return *o.DatabaseRedisDenyPublicAccess
}

// GetDatabaseRedisDenyPublicAccessOk returns a tuple with the DatabaseRedisDenyPublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetDatabaseRedisDenyPublicAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.DatabaseRedisDenyPublicAccess) {
		return nil, false
	}
	return o.DatabaseRedisDenyPublicAccess, true
}

// HasDatabaseRedisDenyPublicAccess returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasDatabaseRedisDenyPublicAccess() bool {
	if o != nil && !IsNil(o.DatabaseRedisDenyPublicAccess) {
		return true
	}

	return false
}

// SetDatabaseRedisDenyPublicAccess gets a reference to the given bool and assigns it to the DatabaseRedisDenyPublicAccess field.
func (o *ClusterAdvancedSettings) SetDatabaseRedisDenyPublicAccess(v bool) {
	o.DatabaseRedisDenyPublicAccess = &v
}

// GetDatabaseRedisAllowedCidrs returns the DatabaseRedisAllowedCidrs field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetDatabaseRedisAllowedCidrs() []string {
	if o == nil || IsNil(o.DatabaseRedisAllowedCidrs) {
		var ret []string
		return ret
	}
	return o.DatabaseRedisAllowedCidrs
}

// GetDatabaseRedisAllowedCidrsOk returns a tuple with the DatabaseRedisAllowedCidrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetDatabaseRedisAllowedCidrsOk() ([]string, bool) {
	if o == nil || IsNil(o.DatabaseRedisAllowedCidrs) {
		return nil, false
	}
	return o.DatabaseRedisAllowedCidrs, true
}

// HasDatabaseRedisAllowedCidrs returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasDatabaseRedisAllowedCidrs() bool {
	if o != nil && !IsNil(o.DatabaseRedisAllowedCidrs) {
		return true
	}

	return false
}

// SetDatabaseRedisAllowedCidrs gets a reference to the given []string and assigns it to the DatabaseRedisAllowedCidrs field.
func (o *ClusterAdvancedSettings) SetDatabaseRedisAllowedCidrs(v []string) {
	o.DatabaseRedisAllowedCidrs = v
}

// GetAwsIamAdminGroup returns the AwsIamAdminGroup field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetAwsIamAdminGroup() string {
	if o == nil || IsNil(o.AwsIamAdminGroup) {
		var ret string
		return ret
	}
	return *o.AwsIamAdminGroup
}

// GetAwsIamAdminGroupOk returns a tuple with the AwsIamAdminGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetAwsIamAdminGroupOk() (*string, bool) {
	if o == nil || IsNil(o.AwsIamAdminGroup) {
		return nil, false
	}
	return o.AwsIamAdminGroup, true
}

// HasAwsIamAdminGroup returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasAwsIamAdminGroup() bool {
	if o != nil && !IsNil(o.AwsIamAdminGroup) {
		return true
	}

	return false
}

// SetAwsIamAdminGroup gets a reference to the given string and assigns it to the AwsIamAdminGroup field.
func (o *ClusterAdvancedSettings) SetAwsIamAdminGroup(v string) {
	o.AwsIamAdminGroup = &v
}

// GetAwsEksEc2MetadataImds returns the AwsEksEc2MetadataImds field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetAwsEksEc2MetadataImds() string {
	if o == nil || IsNil(o.AwsEksEc2MetadataImds) {
		var ret string
		return ret
	}
	return *o.AwsEksEc2MetadataImds
}

// GetAwsEksEc2MetadataImdsOk returns a tuple with the AwsEksEc2MetadataImds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetAwsEksEc2MetadataImdsOk() (*string, bool) {
	if o == nil || IsNil(o.AwsEksEc2MetadataImds) {
		return nil, false
	}
	return o.AwsEksEc2MetadataImds, true
}

// HasAwsEksEc2MetadataImds returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasAwsEksEc2MetadataImds() bool {
	if o != nil && !IsNil(o.AwsEksEc2MetadataImds) {
		return true
	}

	return false
}

// SetAwsEksEc2MetadataImds gets a reference to the given string and assigns it to the AwsEksEc2MetadataImds field.
func (o *ClusterAdvancedSettings) SetAwsEksEc2MetadataImds(v string) {
	o.AwsEksEc2MetadataImds = &v
}

// GetPlecoResourcesTtl returns the PlecoResourcesTtl field value if set, zero value otherwise.
// Deprecated
func (o *ClusterAdvancedSettings) GetPlecoResourcesTtl() int32 {
	if o == nil || IsNil(o.PlecoResourcesTtl) {
		var ret int32
		return ret
	}
	return *o.PlecoResourcesTtl
}

// GetPlecoResourcesTtlOk returns a tuple with the PlecoResourcesTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ClusterAdvancedSettings) GetPlecoResourcesTtlOk() (*int32, bool) {
	if o == nil || IsNil(o.PlecoResourcesTtl) {
		return nil, false
	}
	return o.PlecoResourcesTtl, true
}

// HasPlecoResourcesTtl returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasPlecoResourcesTtl() bool {
	if o != nil && !IsNil(o.PlecoResourcesTtl) {
		return true
	}

	return false
}

// SetPlecoResourcesTtl gets a reference to the given int32 and assigns it to the PlecoResourcesTtl field.
// Deprecated
func (o *ClusterAdvancedSettings) SetPlecoResourcesTtl(v int32) {
	o.PlecoResourcesTtl = &v
}

// GetRegistryMirroringMode returns the RegistryMirroringMode field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetRegistryMirroringMode() RegistryMirroringModeEnum {
	if o == nil || IsNil(o.RegistryMirroringMode) {
		var ret RegistryMirroringModeEnum
		return ret
	}
	return *o.RegistryMirroringMode
}

// GetRegistryMirroringModeOk returns a tuple with the RegistryMirroringMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetRegistryMirroringModeOk() (*RegistryMirroringModeEnum, bool) {
	if o == nil || IsNil(o.RegistryMirroringMode) {
		return nil, false
	}
	return o.RegistryMirroringMode, true
}

// HasRegistryMirroringMode returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasRegistryMirroringMode() bool {
	if o != nil && !IsNil(o.RegistryMirroringMode) {
		return true
	}

	return false
}

// SetRegistryMirroringMode gets a reference to the given RegistryMirroringModeEnum and assigns it to the RegistryMirroringMode field.
func (o *ClusterAdvancedSettings) SetRegistryMirroringMode(v RegistryMirroringModeEnum) {
	o.RegistryMirroringMode = &v
}

// GetNginxVcpuRequestInMilli returns the NginxVcpuRequestInMilli field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetNginxVcpuRequestInMilli() int32 {
	if o == nil || IsNil(o.NginxVcpuRequestInMilli) {
		var ret int32
		return ret
	}
	return *o.NginxVcpuRequestInMilli
}

// GetNginxVcpuRequestInMilliOk returns a tuple with the NginxVcpuRequestInMilli field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetNginxVcpuRequestInMilliOk() (*int32, bool) {
	if o == nil || IsNil(o.NginxVcpuRequestInMilli) {
		return nil, false
	}
	return o.NginxVcpuRequestInMilli, true
}

// HasNginxVcpuRequestInMilli returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasNginxVcpuRequestInMilli() bool {
	if o != nil && !IsNil(o.NginxVcpuRequestInMilli) {
		return true
	}

	return false
}

// SetNginxVcpuRequestInMilli gets a reference to the given int32 and assigns it to the NginxVcpuRequestInMilli field.
func (o *ClusterAdvancedSettings) SetNginxVcpuRequestInMilli(v int32) {
	o.NginxVcpuRequestInMilli = &v
}

// GetNginxVcpuLimitInMilli returns the NginxVcpuLimitInMilli field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetNginxVcpuLimitInMilli() int32 {
	if o == nil || IsNil(o.NginxVcpuLimitInMilli) {
		var ret int32
		return ret
	}
	return *o.NginxVcpuLimitInMilli
}

// GetNginxVcpuLimitInMilliOk returns a tuple with the NginxVcpuLimitInMilli field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetNginxVcpuLimitInMilliOk() (*int32, bool) {
	if o == nil || IsNil(o.NginxVcpuLimitInMilli) {
		return nil, false
	}
	return o.NginxVcpuLimitInMilli, true
}

// HasNginxVcpuLimitInMilli returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasNginxVcpuLimitInMilli() bool {
	if o != nil && !IsNil(o.NginxVcpuLimitInMilli) {
		return true
	}

	return false
}

// SetNginxVcpuLimitInMilli gets a reference to the given int32 and assigns it to the NginxVcpuLimitInMilli field.
func (o *ClusterAdvancedSettings) SetNginxVcpuLimitInMilli(v int32) {
	o.NginxVcpuLimitInMilli = &v
}

// GetNginxMemoryRequestInMib returns the NginxMemoryRequestInMib field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetNginxMemoryRequestInMib() int32 {
	if o == nil || IsNil(o.NginxMemoryRequestInMib) {
		var ret int32
		return ret
	}
	return *o.NginxMemoryRequestInMib
}

// GetNginxMemoryRequestInMibOk returns a tuple with the NginxMemoryRequestInMib field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetNginxMemoryRequestInMibOk() (*int32, bool) {
	if o == nil || IsNil(o.NginxMemoryRequestInMib) {
		return nil, false
	}
	return o.NginxMemoryRequestInMib, true
}

// HasNginxMemoryRequestInMib returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasNginxMemoryRequestInMib() bool {
	if o != nil && !IsNil(o.NginxMemoryRequestInMib) {
		return true
	}

	return false
}

// SetNginxMemoryRequestInMib gets a reference to the given int32 and assigns it to the NginxMemoryRequestInMib field.
func (o *ClusterAdvancedSettings) SetNginxMemoryRequestInMib(v int32) {
	o.NginxMemoryRequestInMib = &v
}

// GetNginxMemoryLimitInMib returns the NginxMemoryLimitInMib field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetNginxMemoryLimitInMib() int32 {
	if o == nil || IsNil(o.NginxMemoryLimitInMib) {
		var ret int32
		return ret
	}
	return *o.NginxMemoryLimitInMib
}

// GetNginxMemoryLimitInMibOk returns a tuple with the NginxMemoryLimitInMib field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetNginxMemoryLimitInMibOk() (*int32, bool) {
	if o == nil || IsNil(o.NginxMemoryLimitInMib) {
		return nil, false
	}
	return o.NginxMemoryLimitInMib, true
}

// HasNginxMemoryLimitInMib returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasNginxMemoryLimitInMib() bool {
	if o != nil && !IsNil(o.NginxMemoryLimitInMib) {
		return true
	}

	return false
}

// SetNginxMemoryLimitInMib gets a reference to the given int32 and assigns it to the NginxMemoryLimitInMib field.
func (o *ClusterAdvancedSettings) SetNginxMemoryLimitInMib(v int32) {
	o.NginxMemoryLimitInMib = &v
}

// GetNginxHpaCpuUtilizationPercentageThreshold returns the NginxHpaCpuUtilizationPercentageThreshold field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetNginxHpaCpuUtilizationPercentageThreshold() int32 {
	if o == nil || IsNil(o.NginxHpaCpuUtilizationPercentageThreshold) {
		var ret int32
		return ret
	}
	return *o.NginxHpaCpuUtilizationPercentageThreshold
}

// GetNginxHpaCpuUtilizationPercentageThresholdOk returns a tuple with the NginxHpaCpuUtilizationPercentageThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetNginxHpaCpuUtilizationPercentageThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.NginxHpaCpuUtilizationPercentageThreshold) {
		return nil, false
	}
	return o.NginxHpaCpuUtilizationPercentageThreshold, true
}

// HasNginxHpaCpuUtilizationPercentageThreshold returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasNginxHpaCpuUtilizationPercentageThreshold() bool {
	if o != nil && !IsNil(o.NginxHpaCpuUtilizationPercentageThreshold) {
		return true
	}

	return false
}

// SetNginxHpaCpuUtilizationPercentageThreshold gets a reference to the given int32 and assigns it to the NginxHpaCpuUtilizationPercentageThreshold field.
func (o *ClusterAdvancedSettings) SetNginxHpaCpuUtilizationPercentageThreshold(v int32) {
	o.NginxHpaCpuUtilizationPercentageThreshold = &v
}

// GetNginxHpaMemoryUtilizationPercentageThreshold returns the NginxHpaMemoryUtilizationPercentageThreshold field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetNginxHpaMemoryUtilizationPercentageThreshold() int32 {
	if o == nil || IsNil(o.NginxHpaMemoryUtilizationPercentageThreshold) {
		var ret int32
		return ret
	}
	return *o.NginxHpaMemoryUtilizationPercentageThreshold
}

// GetNginxHpaMemoryUtilizationPercentageThresholdOk returns a tuple with the NginxHpaMemoryUtilizationPercentageThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetNginxHpaMemoryUtilizationPercentageThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.NginxHpaMemoryUtilizationPercentageThreshold) {
		return nil, false
	}
	return o.NginxHpaMemoryUtilizationPercentageThreshold, true
}

// HasNginxHpaMemoryUtilizationPercentageThreshold returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasNginxHpaMemoryUtilizationPercentageThreshold() bool {
	if o != nil && !IsNil(o.NginxHpaMemoryUtilizationPercentageThreshold) {
		return true
	}

	return false
}

// SetNginxHpaMemoryUtilizationPercentageThreshold gets a reference to the given int32 and assigns it to the NginxHpaMemoryUtilizationPercentageThreshold field.
func (o *ClusterAdvancedSettings) SetNginxHpaMemoryUtilizationPercentageThreshold(v int32) {
	o.NginxHpaMemoryUtilizationPercentageThreshold = &v
}

// GetNginxHpaMinNumberInstances returns the NginxHpaMinNumberInstances field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetNginxHpaMinNumberInstances() int32 {
	if o == nil || IsNil(o.NginxHpaMinNumberInstances) {
		var ret int32
		return ret
	}
	return *o.NginxHpaMinNumberInstances
}

// GetNginxHpaMinNumberInstancesOk returns a tuple with the NginxHpaMinNumberInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetNginxHpaMinNumberInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.NginxHpaMinNumberInstances) {
		return nil, false
	}
	return o.NginxHpaMinNumberInstances, true
}

// HasNginxHpaMinNumberInstances returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasNginxHpaMinNumberInstances() bool {
	if o != nil && !IsNil(o.NginxHpaMinNumberInstances) {
		return true
	}

	return false
}

// SetNginxHpaMinNumberInstances gets a reference to the given int32 and assigns it to the NginxHpaMinNumberInstances field.
func (o *ClusterAdvancedSettings) SetNginxHpaMinNumberInstances(v int32) {
	o.NginxHpaMinNumberInstances = &v
}

// GetNginxHpaMaxNumberInstances returns the NginxHpaMaxNumberInstances field value if set, zero value otherwise.
func (o *ClusterAdvancedSettings) GetNginxHpaMaxNumberInstances() int32 {
	if o == nil || IsNil(o.NginxHpaMaxNumberInstances) {
		var ret int32
		return ret
	}
	return *o.NginxHpaMaxNumberInstances
}

// GetNginxHpaMaxNumberInstancesOk returns a tuple with the NginxHpaMaxNumberInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterAdvancedSettings) GetNginxHpaMaxNumberInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.NginxHpaMaxNumberInstances) {
		return nil, false
	}
	return o.NginxHpaMaxNumberInstances, true
}

// HasNginxHpaMaxNumberInstances returns a boolean if a field has been set.
func (o *ClusterAdvancedSettings) HasNginxHpaMaxNumberInstances() bool {
	if o != nil && !IsNil(o.NginxHpaMaxNumberInstances) {
		return true
	}

	return false
}

// SetNginxHpaMaxNumberInstances gets a reference to the given int32 and assigns it to the NginxHpaMaxNumberInstances field.
func (o *ClusterAdvancedSettings) SetNginxHpaMaxNumberInstances(v int32) {
	o.NginxHpaMaxNumberInstances = &v
}

func (o ClusterAdvancedSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterAdvancedSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsCloudwatchEksLogsRetentionDays) {
		toSerialize["aws.cloudwatch.eks_logs_retention_days"] = o.AwsCloudwatchEksLogsRetentionDays
	}
	if !IsNil(o.AwsVpcEnableS3FlowLogs) {
		toSerialize["aws.vpc.enable_s3_flow_logs"] = o.AwsVpcEnableS3FlowLogs
	}
	if !IsNil(o.AwsVpcFlowLogsRetentionDays) {
		toSerialize["aws.vpc.flow_logs_retention_days"] = o.AwsVpcFlowLogsRetentionDays
	}
	if !IsNil(o.LokiLogRetentionInWeek) {
		toSerialize["loki.log_retention_in_week"] = o.LokiLogRetentionInWeek
	}
	if !IsNil(o.RegistryImageRetentionTime) {
		toSerialize["registry.image_retention_time"] = o.RegistryImageRetentionTime
	}
	if !IsNil(o.CloudProviderContainerRegistryTags) {
		toSerialize["cloud_provider.container_registry.tags"] = o.CloudProviderContainerRegistryTags
	}
	if !IsNil(o.LoadBalancerSize) {
		toSerialize["load_balancer.size"] = o.LoadBalancerSize
	}
	if !IsNil(o.DatabasePostgresqlDenyPublicAccess) {
		toSerialize["database.postgresql.deny_public_access"] = o.DatabasePostgresqlDenyPublicAccess
	}
	if !IsNil(o.DatabasePostgresqlAllowedCidrs) {
		toSerialize["database.postgresql.allowed_cidrs"] = o.DatabasePostgresqlAllowedCidrs
	}
	if !IsNil(o.DatabaseMysqlDenyPublicAccess) {
		toSerialize["database.mysql.deny_public_access"] = o.DatabaseMysqlDenyPublicAccess
	}
	if !IsNil(o.DatabaseMysqlAllowedCidrs) {
		toSerialize["database.mysql.allowed_cidrs"] = o.DatabaseMysqlAllowedCidrs
	}
	if !IsNil(o.DatabaseMongodbDenyPublicAccess) {
		toSerialize["database.mongodb.deny_public_access"] = o.DatabaseMongodbDenyPublicAccess
	}
	if !IsNil(o.DatabaseMongodbAllowedCidrs) {
		toSerialize["database.mongodb.allowed_cidrs"] = o.DatabaseMongodbAllowedCidrs
	}
	if !IsNil(o.DatabaseRedisDenyPublicAccess) {
		toSerialize["database.redis.deny_public_access"] = o.DatabaseRedisDenyPublicAccess
	}
	if !IsNil(o.DatabaseRedisAllowedCidrs) {
		toSerialize["database.redis.allowed_cidrs"] = o.DatabaseRedisAllowedCidrs
	}
	if !IsNil(o.AwsIamAdminGroup) {
		toSerialize["aws.iam.admin_group"] = o.AwsIamAdminGroup
	}
	if !IsNil(o.AwsEksEc2MetadataImds) {
		toSerialize["aws.eks.ec2.metadata_imds"] = o.AwsEksEc2MetadataImds
	}
	if !IsNil(o.PlecoResourcesTtl) {
		toSerialize["pleco.resources_ttl"] = o.PlecoResourcesTtl
	}
	if !IsNil(o.RegistryMirroringMode) {
		toSerialize["registry.mirroring_mode"] = o.RegistryMirroringMode
	}
	if !IsNil(o.NginxVcpuRequestInMilli) {
		toSerialize["nginx.vcpu.request_in_milli"] = o.NginxVcpuRequestInMilli
	}
	if !IsNil(o.NginxVcpuLimitInMilli) {
		toSerialize["nginx.vcpu.limit_in_milli"] = o.NginxVcpuLimitInMilli
	}
	if !IsNil(o.NginxMemoryRequestInMib) {
		toSerialize["nginx.memory.request_in_mib"] = o.NginxMemoryRequestInMib
	}
	if !IsNil(o.NginxMemoryLimitInMib) {
		toSerialize["nginx.memory.limit_in_mib"] = o.NginxMemoryLimitInMib
	}
	if !IsNil(o.NginxHpaCpuUtilizationPercentageThreshold) {
		toSerialize["nginx.hpa.cpu_utilization_percentage_threshold"] = o.NginxHpaCpuUtilizationPercentageThreshold
	}
	if !IsNil(o.NginxHpaMemoryUtilizationPercentageThreshold) {
		toSerialize["nginx.hpa.memory_utilization_percentage_threshold"] = o.NginxHpaMemoryUtilizationPercentageThreshold
	}
	if !IsNil(o.NginxHpaMinNumberInstances) {
		toSerialize["nginx.hpa.min_number_instances"] = o.NginxHpaMinNumberInstances
	}
	if !IsNil(o.NginxHpaMaxNumberInstances) {
		toSerialize["nginx.hpa.max_number_instances"] = o.NginxHpaMaxNumberInstances
	}
	return toSerialize, nil
}

type NullableClusterAdvancedSettings struct {
	value *ClusterAdvancedSettings
	isSet bool
}

func (v NullableClusterAdvancedSettings) Get() *ClusterAdvancedSettings {
	return v.value
}

func (v *NullableClusterAdvancedSettings) Set(val *ClusterAdvancedSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterAdvancedSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterAdvancedSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterAdvancedSettings(val *ClusterAdvancedSettings) *NullableClusterAdvancedSettings {
	return &NullableClusterAdvancedSettings{value: val, isSet: true}
}

func (v NullableClusterAdvancedSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterAdvancedSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
