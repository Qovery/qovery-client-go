/*
Qovery API

Testing HelmMainCallsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package qovery

import (
	"context"
	openapiclient "github.com/qovery/qovery-client-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_qovery_HelmMainCallsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test HelmMainCallsAPIService DeleteHelm", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var helmId string

		httpRes, err := apiClient.HelmMainCallsAPI.DeleteHelm(context.Background(), helmId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HelmMainCallsAPIService EditHelm", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var helmId string

		resp, httpRes, err := apiClient.HelmMainCallsAPI.EditHelm(context.Background(), helmId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HelmMainCallsAPIService GetHelm", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var helmId string

		resp, httpRes, err := apiClient.HelmMainCallsAPI.GetHelm(context.Background(), helmId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HelmMainCallsAPIService GetHelmStatus", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var helmId string

		resp, httpRes, err := apiClient.HelmMainCallsAPI.GetHelmStatus(context.Background(), helmId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
