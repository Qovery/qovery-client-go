/*
Qovery API

Testing ContainerCustomDomainAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package qovery

import (
	"context"
	openapiclient "github.com/qovery/qovery-client-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_qovery_ContainerCustomDomainAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ContainerCustomDomainAPIService CheckContainerCustomDomain", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var containerId string

		resp, httpRes, err := apiClient.ContainerCustomDomainAPI.CheckContainerCustomDomain(context.Background(), containerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContainerCustomDomainAPIService CreateContainerCustomDomain", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var containerId string

		resp, httpRes, err := apiClient.ContainerCustomDomainAPI.CreateContainerCustomDomain(context.Background(), containerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContainerCustomDomainAPIService DeleteContainerCustomDomain", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var containerId string
		var customDomainId string

		httpRes, err := apiClient.ContainerCustomDomainAPI.DeleteContainerCustomDomain(context.Background(), containerId, customDomainId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContainerCustomDomainAPIService EditContainerCustomDomain", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var containerId string
		var customDomainId string

		resp, httpRes, err := apiClient.ContainerCustomDomainAPI.EditContainerCustomDomain(context.Background(), containerId, customDomainId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContainerCustomDomainAPIService GetContainerCustomDomainStatus", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var containerId string
		var customDomainId string

		resp, httpRes, err := apiClient.ContainerCustomDomainAPI.GetContainerCustomDomainStatus(context.Background(), containerId, customDomainId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContainerCustomDomainAPIService ListContainerCustomDomain", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var containerId string

		resp, httpRes, err := apiClient.ContainerCustomDomainAPI.ListContainerCustomDomain(context.Background(), containerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
