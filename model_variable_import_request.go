/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// VariableImportRequest struct for VariableImportRequest
type VariableImportRequest struct {
	Overwrite bool                        `json:"overwrite"`
	Vars      []VariableImportRequestVars `json:"vars"`
}

// NewVariableImportRequest instantiates a new VariableImportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableImportRequest(overwrite bool, vars []VariableImportRequestVars) *VariableImportRequest {
	this := VariableImportRequest{}
	this.Overwrite = overwrite
	this.Vars = vars
	return &this
}

// NewVariableImportRequestWithDefaults instantiates a new VariableImportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableImportRequestWithDefaults() *VariableImportRequest {
	this := VariableImportRequest{}
	var overwrite bool = false
	this.Overwrite = overwrite
	return &this
}

// GetOverwrite returns the Overwrite field value
func (o *VariableImportRequest) GetOverwrite() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Overwrite
}

// GetOverwriteOk returns a tuple with the Overwrite field value
// and a boolean to check if the value has been set.
func (o *VariableImportRequest) GetOverwriteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Overwrite, true
}

// SetOverwrite sets field value
func (o *VariableImportRequest) SetOverwrite(v bool) {
	o.Overwrite = v
}

// GetVars returns the Vars field value
func (o *VariableImportRequest) GetVars() []VariableImportRequestVars {
	if o == nil {
		var ret []VariableImportRequestVars
		return ret
	}

	return o.Vars
}

// GetVarsOk returns a tuple with the Vars field value
// and a boolean to check if the value has been set.
func (o *VariableImportRequest) GetVarsOk() ([]VariableImportRequestVars, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vars, true
}

// SetVars sets field value
func (o *VariableImportRequest) SetVars(v []VariableImportRequestVars) {
	o.Vars = v
}

func (o VariableImportRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["overwrite"] = o.Overwrite
	}
	if true {
		toSerialize["vars"] = o.Vars
	}
	return json.Marshal(toSerialize)
}

type NullableVariableImportRequest struct {
	value *VariableImportRequest
	isSet bool
}

func (v NullableVariableImportRequest) Get() *VariableImportRequest {
	return v.value
}

func (v *NullableVariableImportRequest) Set(val *VariableImportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableImportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableImportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableImportRequest(val *VariableImportRequest) *NullableVariableImportRequest {
	return &NullableVariableImportRequest{value: val, isSet: true}
}

func (v NullableVariableImportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableImportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
