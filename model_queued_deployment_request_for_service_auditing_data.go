/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the QueuedDeploymentRequestForServiceAuditingData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueuedDeploymentRequestForServiceAuditingData{}

// QueuedDeploymentRequestForServiceAuditingData struct for QueuedDeploymentRequestForServiceAuditingData
type QueuedDeploymentRequestForServiceAuditingData struct {
	TriggeredBy          string                   `json:"triggered_by"`
	Origin               *OrganizationEventOrigin `json:"origin,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QueuedDeploymentRequestForServiceAuditingData QueuedDeploymentRequestForServiceAuditingData

// NewQueuedDeploymentRequestForServiceAuditingData instantiates a new QueuedDeploymentRequestForServiceAuditingData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueuedDeploymentRequestForServiceAuditingData(triggeredBy string) *QueuedDeploymentRequestForServiceAuditingData {
	this := QueuedDeploymentRequestForServiceAuditingData{}
	this.TriggeredBy = triggeredBy
	return &this
}

// NewQueuedDeploymentRequestForServiceAuditingDataWithDefaults instantiates a new QueuedDeploymentRequestForServiceAuditingData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueuedDeploymentRequestForServiceAuditingDataWithDefaults() *QueuedDeploymentRequestForServiceAuditingData {
	this := QueuedDeploymentRequestForServiceAuditingData{}
	return &this
}

// GetTriggeredBy returns the TriggeredBy field value
func (o *QueuedDeploymentRequestForServiceAuditingData) GetTriggeredBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TriggeredBy
}

// GetTriggeredByOk returns a tuple with the TriggeredBy field value
// and a boolean to check if the value has been set.
func (o *QueuedDeploymentRequestForServiceAuditingData) GetTriggeredByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TriggeredBy, true
}

// SetTriggeredBy sets field value
func (o *QueuedDeploymentRequestForServiceAuditingData) SetTriggeredBy(v string) {
	o.TriggeredBy = v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *QueuedDeploymentRequestForServiceAuditingData) GetOrigin() OrganizationEventOrigin {
	if o == nil || IsNil(o.Origin) {
		var ret OrganizationEventOrigin
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueuedDeploymentRequestForServiceAuditingData) GetOriginOk() (*OrganizationEventOrigin, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *QueuedDeploymentRequestForServiceAuditingData) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given OrganizationEventOrigin and assigns it to the Origin field.
func (o *QueuedDeploymentRequestForServiceAuditingData) SetOrigin(v OrganizationEventOrigin) {
	o.Origin = &v
}

func (o QueuedDeploymentRequestForServiceAuditingData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueuedDeploymentRequestForServiceAuditingData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["triggered_by"] = o.TriggeredBy
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QueuedDeploymentRequestForServiceAuditingData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"triggered_by",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueuedDeploymentRequestForServiceAuditingData := _QueuedDeploymentRequestForServiceAuditingData{}

	err = json.Unmarshal(data, &varQueuedDeploymentRequestForServiceAuditingData)

	if err != nil {
		return err
	}

	*o = QueuedDeploymentRequestForServiceAuditingData(varQueuedDeploymentRequestForServiceAuditingData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "triggered_by")
		delete(additionalProperties, "origin")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQueuedDeploymentRequestForServiceAuditingData struct {
	value *QueuedDeploymentRequestForServiceAuditingData
	isSet bool
}

func (v NullableQueuedDeploymentRequestForServiceAuditingData) Get() *QueuedDeploymentRequestForServiceAuditingData {
	return v.value
}

func (v *NullableQueuedDeploymentRequestForServiceAuditingData) Set(val *QueuedDeploymentRequestForServiceAuditingData) {
	v.value = val
	v.isSet = true
}

func (v NullableQueuedDeploymentRequestForServiceAuditingData) IsSet() bool {
	return v.isSet
}

func (v *NullableQueuedDeploymentRequestForServiceAuditingData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueuedDeploymentRequestForServiceAuditingData(val *QueuedDeploymentRequestForServiceAuditingData) *NullableQueuedDeploymentRequestForServiceAuditingData {
	return &NullableQueuedDeploymentRequestForServiceAuditingData{value: val, isSet: true}
}

func (v NullableQueuedDeploymentRequestForServiceAuditingData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueuedDeploymentRequestForServiceAuditingData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
