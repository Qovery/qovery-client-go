/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ProjectDeploymentRuleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectDeploymentRuleRequest{}

// ProjectDeploymentRuleRequest struct for ProjectDeploymentRuleRequest
type ProjectDeploymentRuleRequest struct {
	// name is case insensitive
	Name        string              `json:"name"`
	Description *string             `json:"description,omitempty"`
	Mode        EnvironmentModeEnum `json:"mode"`
	ClusterId   string              `json:"cluster_id"`
	AutoStop    *bool               `json:"auto_stop,omitempty"`
	Timezone    string              `json:"timezone"`
	StartTime   time.Time           `json:"start_time"`
	StopTime    time.Time           `json:"stop_time"`
	Weekdays    []WeekdayEnum       `json:"weekdays"`
	// wildcard pattern composed of '?' and/or '*' used to target new created environments
	Wildcard             string `json:"wildcard"`
	AdditionalProperties map[string]interface{}
}

type _ProjectDeploymentRuleRequest ProjectDeploymentRuleRequest

// NewProjectDeploymentRuleRequest instantiates a new ProjectDeploymentRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectDeploymentRuleRequest(name string, mode EnvironmentModeEnum, clusterId string, timezone string, startTime time.Time, stopTime time.Time, weekdays []WeekdayEnum, wildcard string) *ProjectDeploymentRuleRequest {
	this := ProjectDeploymentRuleRequest{}
	this.Name = name
	this.Mode = mode
	this.ClusterId = clusterId
	var autoStop bool = false
	this.AutoStop = &autoStop
	this.Timezone = timezone
	this.StartTime = startTime
	this.StopTime = stopTime
	this.Weekdays = weekdays
	this.Wildcard = wildcard
	return &this
}

// NewProjectDeploymentRuleRequestWithDefaults instantiates a new ProjectDeploymentRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectDeploymentRuleRequestWithDefaults() *ProjectDeploymentRuleRequest {
	this := ProjectDeploymentRuleRequest{}
	var autoStop bool = false
	this.AutoStop = &autoStop
	var wildcard string = ""
	this.Wildcard = wildcard
	return &this
}

// GetName returns the Name field value
func (o *ProjectDeploymentRuleRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProjectDeploymentRuleRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectDeploymentRuleRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectDeploymentRuleRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectDeploymentRuleRequest) SetDescription(v string) {
	o.Description = &v
}

// GetMode returns the Mode field value
func (o *ProjectDeploymentRuleRequest) GetMode() EnvironmentModeEnum {
	if o == nil {
		var ret EnvironmentModeEnum
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleRequest) GetModeOk() (*EnvironmentModeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *ProjectDeploymentRuleRequest) SetMode(v EnvironmentModeEnum) {
	o.Mode = v
}

// GetClusterId returns the ClusterId field value
func (o *ProjectDeploymentRuleRequest) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleRequest) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *ProjectDeploymentRuleRequest) SetClusterId(v string) {
	o.ClusterId = v
}

// GetAutoStop returns the AutoStop field value if set, zero value otherwise.
func (o *ProjectDeploymentRuleRequest) GetAutoStop() bool {
	if o == nil || IsNil(o.AutoStop) {
		var ret bool
		return ret
	}
	return *o.AutoStop
}

// GetAutoStopOk returns a tuple with the AutoStop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleRequest) GetAutoStopOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoStop) {
		return nil, false
	}
	return o.AutoStop, true
}

// HasAutoStop returns a boolean if a field has been set.
func (o *ProjectDeploymentRuleRequest) HasAutoStop() bool {
	if o != nil && !IsNil(o.AutoStop) {
		return true
	}

	return false
}

// SetAutoStop gets a reference to the given bool and assigns it to the AutoStop field.
func (o *ProjectDeploymentRuleRequest) SetAutoStop(v bool) {
	o.AutoStop = &v
}

// GetTimezone returns the Timezone field value
func (o *ProjectDeploymentRuleRequest) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleRequest) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *ProjectDeploymentRuleRequest) SetTimezone(v string) {
	o.Timezone = v
}

// GetStartTime returns the StartTime field value
func (o *ProjectDeploymentRuleRequest) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleRequest) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *ProjectDeploymentRuleRequest) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetStopTime returns the StopTime field value
func (o *ProjectDeploymentRuleRequest) GetStopTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StopTime
}

// GetStopTimeOk returns a tuple with the StopTime field value
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleRequest) GetStopTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StopTime, true
}

// SetStopTime sets field value
func (o *ProjectDeploymentRuleRequest) SetStopTime(v time.Time) {
	o.StopTime = v
}

// GetWeekdays returns the Weekdays field value
func (o *ProjectDeploymentRuleRequest) GetWeekdays() []WeekdayEnum {
	if o == nil {
		var ret []WeekdayEnum
		return ret
	}

	return o.Weekdays
}

// GetWeekdaysOk returns a tuple with the Weekdays field value
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleRequest) GetWeekdaysOk() ([]WeekdayEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Weekdays, true
}

// SetWeekdays sets field value
func (o *ProjectDeploymentRuleRequest) SetWeekdays(v []WeekdayEnum) {
	o.Weekdays = v
}

// GetWildcard returns the Wildcard field value
func (o *ProjectDeploymentRuleRequest) GetWildcard() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Wildcard
}

// GetWildcardOk returns a tuple with the Wildcard field value
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleRequest) GetWildcardOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Wildcard, true
}

// SetWildcard sets field value
func (o *ProjectDeploymentRuleRequest) SetWildcard(v string) {
	o.Wildcard = v
}

func (o ProjectDeploymentRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectDeploymentRuleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["mode"] = o.Mode
	toSerialize["cluster_id"] = o.ClusterId
	if !IsNil(o.AutoStop) {
		toSerialize["auto_stop"] = o.AutoStop
	}
	toSerialize["timezone"] = o.Timezone
	toSerialize["start_time"] = o.StartTime
	toSerialize["stop_time"] = o.StopTime
	toSerialize["weekdays"] = o.Weekdays
	toSerialize["wildcard"] = o.Wildcard

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProjectDeploymentRuleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"mode",
		"cluster_id",
		"timezone",
		"start_time",
		"stop_time",
		"weekdays",
		"wildcard",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProjectDeploymentRuleRequest := _ProjectDeploymentRuleRequest{}

	err = json.Unmarshal(data, &varProjectDeploymentRuleRequest)

	if err != nil {
		return err
	}

	*o = ProjectDeploymentRuleRequest(varProjectDeploymentRuleRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "mode")
		delete(additionalProperties, "cluster_id")
		delete(additionalProperties, "auto_stop")
		delete(additionalProperties, "timezone")
		delete(additionalProperties, "start_time")
		delete(additionalProperties, "stop_time")
		delete(additionalProperties, "weekdays")
		delete(additionalProperties, "wildcard")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProjectDeploymentRuleRequest struct {
	value *ProjectDeploymentRuleRequest
	isSet bool
}

func (v NullableProjectDeploymentRuleRequest) Get() *ProjectDeploymentRuleRequest {
	return v.value
}

func (v *NullableProjectDeploymentRuleRequest) Set(val *ProjectDeploymentRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectDeploymentRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectDeploymentRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectDeploymentRuleRequest(val *ProjectDeploymentRuleRequest) *NullableProjectDeploymentRuleRequest {
	return &NullableProjectDeploymentRuleRequest{value: val, isSet: true}
}

func (v NullableProjectDeploymentRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectDeploymentRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
