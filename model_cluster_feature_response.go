/*
[BETA] Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.0.0
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ClusterFeatureResponse struct for ClusterFeatureResponse
type ClusterFeatureResponse struct {
	Id                  *string         `json:"id,omitempty"`
	Title               *string         `json:"title,omitempty"`
	Description         NullableString  `json:"description,omitempty"`
	CostPerMonthInCents NullableInt32   `json:"cost_per_month_in_cents,omitempty"`
	CostPerMonth        NullableFloat32 `json:"cost_per_month,omitempty"`
	CurrencyCode        NullableString  `json:"currency_code,omitempty"`
	ValueType           *string         `json:"value_type,omitempty"`
	Value               NullableString  `json:"value,omitempty"`
	IsValueUpdatable    *bool           `json:"is_value_updatable,omitempty"`
	AcceptedValues      *Array          `json:"accepted_values,omitempty"`
}

// NewClusterFeatureResponse instantiates a new ClusterFeatureResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterFeatureResponse() *ClusterFeatureResponse {
	this := ClusterFeatureResponse{}
	var isValueUpdatable bool = false
	this.IsValueUpdatable = &isValueUpdatable
	return &this
}

// NewClusterFeatureResponseWithDefaults instantiates a new ClusterFeatureResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterFeatureResponseWithDefaults() *ClusterFeatureResponse {
	this := ClusterFeatureResponse{}
	var isValueUpdatable bool = false
	this.IsValueUpdatable = &isValueUpdatable
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterFeatureResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFeatureResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterFeatureResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ClusterFeatureResponse) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ClusterFeatureResponse) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFeatureResponse) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ClusterFeatureResponse) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ClusterFeatureResponse) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterFeatureResponse) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterFeatureResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ClusterFeatureResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ClusterFeatureResponse) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ClusterFeatureResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ClusterFeatureResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetCostPerMonthInCents returns the CostPerMonthInCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterFeatureResponse) GetCostPerMonthInCents() int32 {
	if o == nil || o.CostPerMonthInCents.Get() == nil {
		var ret int32
		return ret
	}
	return *o.CostPerMonthInCents.Get()
}

// GetCostPerMonthInCentsOk returns a tuple with the CostPerMonthInCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterFeatureResponse) GetCostPerMonthInCentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CostPerMonthInCents.Get(), o.CostPerMonthInCents.IsSet()
}

// HasCostPerMonthInCents returns a boolean if a field has been set.
func (o *ClusterFeatureResponse) HasCostPerMonthInCents() bool {
	if o != nil && o.CostPerMonthInCents.IsSet() {
		return true
	}

	return false
}

// SetCostPerMonthInCents gets a reference to the given NullableInt32 and assigns it to the CostPerMonthInCents field.
func (o *ClusterFeatureResponse) SetCostPerMonthInCents(v int32) {
	o.CostPerMonthInCents.Set(&v)
}

// SetCostPerMonthInCentsNil sets the value for CostPerMonthInCents to be an explicit nil
func (o *ClusterFeatureResponse) SetCostPerMonthInCentsNil() {
	o.CostPerMonthInCents.Set(nil)
}

// UnsetCostPerMonthInCents ensures that no value is present for CostPerMonthInCents, not even an explicit nil
func (o *ClusterFeatureResponse) UnsetCostPerMonthInCents() {
	o.CostPerMonthInCents.Unset()
}

// GetCostPerMonth returns the CostPerMonth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterFeatureResponse) GetCostPerMonth() float32 {
	if o == nil || o.CostPerMonth.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CostPerMonth.Get()
}

// GetCostPerMonthOk returns a tuple with the CostPerMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterFeatureResponse) GetCostPerMonthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CostPerMonth.Get(), o.CostPerMonth.IsSet()
}

// HasCostPerMonth returns a boolean if a field has been set.
func (o *ClusterFeatureResponse) HasCostPerMonth() bool {
	if o != nil && o.CostPerMonth.IsSet() {
		return true
	}

	return false
}

// SetCostPerMonth gets a reference to the given NullableFloat32 and assigns it to the CostPerMonth field.
func (o *ClusterFeatureResponse) SetCostPerMonth(v float32) {
	o.CostPerMonth.Set(&v)
}

// SetCostPerMonthNil sets the value for CostPerMonth to be an explicit nil
func (o *ClusterFeatureResponse) SetCostPerMonthNil() {
	o.CostPerMonth.Set(nil)
}

// UnsetCostPerMonth ensures that no value is present for CostPerMonth, not even an explicit nil
func (o *ClusterFeatureResponse) UnsetCostPerMonth() {
	o.CostPerMonth.Unset()
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterFeatureResponse) GetCurrencyCode() string {
	if o == nil || o.CurrencyCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.CurrencyCode.Get()
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterFeatureResponse) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrencyCode.Get(), o.CurrencyCode.IsSet()
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *ClusterFeatureResponse) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given NullableString and assigns it to the CurrencyCode field.
func (o *ClusterFeatureResponse) SetCurrencyCode(v string) {
	o.CurrencyCode.Set(&v)
}

// SetCurrencyCodeNil sets the value for CurrencyCode to be an explicit nil
func (o *ClusterFeatureResponse) SetCurrencyCodeNil() {
	o.CurrencyCode.Set(nil)
}

// UnsetCurrencyCode ensures that no value is present for CurrencyCode, not even an explicit nil
func (o *ClusterFeatureResponse) UnsetCurrencyCode() {
	o.CurrencyCode.Unset()
}

// GetValueType returns the ValueType field value if set, zero value otherwise.
func (o *ClusterFeatureResponse) GetValueType() string {
	if o == nil || o.ValueType == nil {
		var ret string
		return ret
	}
	return *o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFeatureResponse) GetValueTypeOk() (*string, bool) {
	if o == nil || o.ValueType == nil {
		return nil, false
	}
	return o.ValueType, true
}

// HasValueType returns a boolean if a field has been set.
func (o *ClusterFeatureResponse) HasValueType() bool {
	if o != nil && o.ValueType != nil {
		return true
	}

	return false
}

// SetValueType gets a reference to the given string and assigns it to the ValueType field.
func (o *ClusterFeatureResponse) SetValueType(v string) {
	o.ValueType = &v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterFeatureResponse) GetValue() string {
	if o == nil || o.Value.Get() == nil {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterFeatureResponse) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *ClusterFeatureResponse) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *ClusterFeatureResponse) SetValue(v string) {
	o.Value.Set(&v)
}

// SetValueNil sets the value for Value to be an explicit nil
func (o *ClusterFeatureResponse) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *ClusterFeatureResponse) UnsetValue() {
	o.Value.Unset()
}

// GetIsValueUpdatable returns the IsValueUpdatable field value if set, zero value otherwise.
func (o *ClusterFeatureResponse) GetIsValueUpdatable() bool {
	if o == nil || o.IsValueUpdatable == nil {
		var ret bool
		return ret
	}
	return *o.IsValueUpdatable
}

// GetIsValueUpdatableOk returns a tuple with the IsValueUpdatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFeatureResponse) GetIsValueUpdatableOk() (*bool, bool) {
	if o == nil || o.IsValueUpdatable == nil {
		return nil, false
	}
	return o.IsValueUpdatable, true
}

// HasIsValueUpdatable returns a boolean if a field has been set.
func (o *ClusterFeatureResponse) HasIsValueUpdatable() bool {
	if o != nil && o.IsValueUpdatable != nil {
		return true
	}

	return false
}

// SetIsValueUpdatable gets a reference to the given bool and assigns it to the IsValueUpdatable field.
func (o *ClusterFeatureResponse) SetIsValueUpdatable(v bool) {
	o.IsValueUpdatable = &v
}

// GetAcceptedValues returns the AcceptedValues field value if set, zero value otherwise.
func (o *ClusterFeatureResponse) GetAcceptedValues() Array {
	if o == nil || o.AcceptedValues == nil {
		var ret Array
		return ret
	}
	return *o.AcceptedValues
}

// GetAcceptedValuesOk returns a tuple with the AcceptedValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFeatureResponse) GetAcceptedValuesOk() (*Array, bool) {
	if o == nil || o.AcceptedValues == nil {
		return nil, false
	}
	return o.AcceptedValues, true
}

// HasAcceptedValues returns a boolean if a field has been set.
func (o *ClusterFeatureResponse) HasAcceptedValues() bool {
	if o != nil && o.AcceptedValues != nil {
		return true
	}

	return false
}

// SetAcceptedValues gets a reference to the given Array and assigns it to the AcceptedValues field.
func (o *ClusterFeatureResponse) SetAcceptedValues(v Array) {
	o.AcceptedValues = &v
}

func (o ClusterFeatureResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.CostPerMonthInCents.IsSet() {
		toSerialize["cost_per_month_in_cents"] = o.CostPerMonthInCents.Get()
	}
	if o.CostPerMonth.IsSet() {
		toSerialize["cost_per_month"] = o.CostPerMonth.Get()
	}
	if o.CurrencyCode.IsSet() {
		toSerialize["currency_code"] = o.CurrencyCode.Get()
	}
	if o.ValueType != nil {
		toSerialize["value_type"] = o.ValueType
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if o.IsValueUpdatable != nil {
		toSerialize["is_value_updatable"] = o.IsValueUpdatable
	}
	if o.AcceptedValues != nil {
		toSerialize["accepted_values"] = o.AcceptedValues
	}
	return json.Marshal(toSerialize)
}

type NullableClusterFeatureResponse struct {
	value *ClusterFeatureResponse
	isSet bool
}

func (v NullableClusterFeatureResponse) Get() *ClusterFeatureResponse {
	return v.value
}

func (v *NullableClusterFeatureResponse) Set(val *ClusterFeatureResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterFeatureResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterFeatureResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterFeatureResponse(val *ClusterFeatureResponse) *NullableClusterFeatureResponse {
	return &NullableClusterFeatureResponse{value: val, isSet: true}
}

func (v NullableClusterFeatureResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterFeatureResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
