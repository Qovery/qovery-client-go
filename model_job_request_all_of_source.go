/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the JobRequestAllOfSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobRequestAllOfSource{}

// JobRequestAllOfSource struct for JobRequestAllOfSource
type JobRequestAllOfSource struct {
	Image                *JobRequestAllOfSourceImage  `json:"image,omitempty"`
	Docker               *JobRequestAllOfSourceDocker `json:"docker,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _JobRequestAllOfSource JobRequestAllOfSource

// NewJobRequestAllOfSource instantiates a new JobRequestAllOfSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobRequestAllOfSource() *JobRequestAllOfSource {
	this := JobRequestAllOfSource{}
	return &this
}

// NewJobRequestAllOfSourceWithDefaults instantiates a new JobRequestAllOfSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobRequestAllOfSourceWithDefaults() *JobRequestAllOfSource {
	this := JobRequestAllOfSource{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *JobRequestAllOfSource) GetImage() JobRequestAllOfSourceImage {
	if o == nil || IsNil(o.Image) {
		var ret JobRequestAllOfSourceImage
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRequestAllOfSource) GetImageOk() (*JobRequestAllOfSourceImage, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *JobRequestAllOfSource) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given JobRequestAllOfSourceImage and assigns it to the Image field.
func (o *JobRequestAllOfSource) SetImage(v JobRequestAllOfSourceImage) {
	o.Image = &v
}

// GetDocker returns the Docker field value if set, zero value otherwise.
func (o *JobRequestAllOfSource) GetDocker() JobRequestAllOfSourceDocker {
	if o == nil || IsNil(o.Docker) {
		var ret JobRequestAllOfSourceDocker
		return ret
	}
	return *o.Docker
}

// GetDockerOk returns a tuple with the Docker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRequestAllOfSource) GetDockerOk() (*JobRequestAllOfSourceDocker, bool) {
	if o == nil || IsNil(o.Docker) {
		return nil, false
	}
	return o.Docker, true
}

// HasDocker returns a boolean if a field has been set.
func (o *JobRequestAllOfSource) HasDocker() bool {
	if o != nil && !IsNil(o.Docker) {
		return true
	}

	return false
}

// SetDocker gets a reference to the given JobRequestAllOfSourceDocker and assigns it to the Docker field.
func (o *JobRequestAllOfSource) SetDocker(v JobRequestAllOfSourceDocker) {
	o.Docker = &v
}

func (o JobRequestAllOfSource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobRequestAllOfSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Docker) {
		toSerialize["docker"] = o.Docker
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *JobRequestAllOfSource) UnmarshalJSON(data []byte) (err error) {
	varJobRequestAllOfSource := _JobRequestAllOfSource{}

	err = json.Unmarshal(data, &varJobRequestAllOfSource)

	if err != nil {
		return err
	}

	*o = JobRequestAllOfSource(varJobRequestAllOfSource)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "image")
		delete(additionalProperties, "docker")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableJobRequestAllOfSource struct {
	value *JobRequestAllOfSource
	isSet bool
}

func (v NullableJobRequestAllOfSource) Get() *JobRequestAllOfSource {
	return v.value
}

func (v *NullableJobRequestAllOfSource) Set(val *JobRequestAllOfSource) {
	v.value = val
	v.isSet = true
}

func (v NullableJobRequestAllOfSource) IsSet() bool {
	return v.isSet
}

func (v *NullableJobRequestAllOfSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobRequestAllOfSource(val *JobRequestAllOfSource) *NullableJobRequestAllOfSource {
	return &NullableJobRequestAllOfSource{value: val, isSet: true}
}

func (v NullableJobRequestAllOfSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobRequestAllOfSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
