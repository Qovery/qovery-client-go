/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the CheckedCustomDomainResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckedCustomDomainResponse{}

// CheckedCustomDomainResponse struct for CheckedCustomDomainResponse
type CheckedCustomDomainResponse struct {
	// domain name checked
	DomainName string                    `json:"domain_name"`
	Status     CheckedCustomDomainStatus `json:"status"`
	// optional field containing information about failure check
	ErrorDetails         *string `json:"error_details,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CheckedCustomDomainResponse CheckedCustomDomainResponse

// NewCheckedCustomDomainResponse instantiates a new CheckedCustomDomainResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckedCustomDomainResponse(domainName string, status CheckedCustomDomainStatus) *CheckedCustomDomainResponse {
	this := CheckedCustomDomainResponse{}
	this.DomainName = domainName
	this.Status = status
	return &this
}

// NewCheckedCustomDomainResponseWithDefaults instantiates a new CheckedCustomDomainResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckedCustomDomainResponseWithDefaults() *CheckedCustomDomainResponse {
	this := CheckedCustomDomainResponse{}
	return &this
}

// GetDomainName returns the DomainName field value
func (o *CheckedCustomDomainResponse) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *CheckedCustomDomainResponse) GetDomainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *CheckedCustomDomainResponse) SetDomainName(v string) {
	o.DomainName = v
}

// GetStatus returns the Status field value
func (o *CheckedCustomDomainResponse) GetStatus() CheckedCustomDomainStatus {
	if o == nil {
		var ret CheckedCustomDomainStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CheckedCustomDomainResponse) GetStatusOk() (*CheckedCustomDomainStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CheckedCustomDomainResponse) SetStatus(v CheckedCustomDomainStatus) {
	o.Status = v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *CheckedCustomDomainResponse) GetErrorDetails() string {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret string
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckedCustomDomainResponse) GetErrorDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *CheckedCustomDomainResponse) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given string and assigns it to the ErrorDetails field.
func (o *CheckedCustomDomainResponse) SetErrorDetails(v string) {
	o.ErrorDetails = &v
}

func (o CheckedCustomDomainResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckedCustomDomainResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domain_name"] = o.DomainName
	toSerialize["status"] = o.Status
	if !IsNil(o.ErrorDetails) {
		toSerialize["error_details"] = o.ErrorDetails
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CheckedCustomDomainResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"domain_name",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCheckedCustomDomainResponse := _CheckedCustomDomainResponse{}

	err = json.Unmarshal(data, &varCheckedCustomDomainResponse)

	if err != nil {
		return err
	}

	*o = CheckedCustomDomainResponse(varCheckedCustomDomainResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "domain_name")
		delete(additionalProperties, "status")
		delete(additionalProperties, "error_details")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCheckedCustomDomainResponse struct {
	value *CheckedCustomDomainResponse
	isSet bool
}

func (v NullableCheckedCustomDomainResponse) Get() *CheckedCustomDomainResponse {
	return v.value
}

func (v *NullableCheckedCustomDomainResponse) Set(val *CheckedCustomDomainResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckedCustomDomainResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckedCustomDomainResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckedCustomDomainResponse(val *CheckedCustomDomainResponse) *NullableCheckedCustomDomainResponse {
	return &NullableCheckedCustomDomainResponse{value: val, isSet: true}
}

func (v NullableCheckedCustomDomainResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckedCustomDomainResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
