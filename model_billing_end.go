/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.0
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// BillingEnd struct for BillingEnd
type BillingEnd struct {
	BillingEndedOn *time.Time `json:"billing_ended_on,omitempty"`
}

// NewBillingEnd instantiates a new BillingEnd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingEnd() *BillingEnd {
	this := BillingEnd{}
	return &this
}

// NewBillingEndWithDefaults instantiates a new BillingEnd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingEndWithDefaults() *BillingEnd {
	this := BillingEnd{}
	return &this
}

// GetBillingEndedOn returns the BillingEndedOn field value if set, zero value otherwise.
func (o *BillingEnd) GetBillingEndedOn() time.Time {
	if o == nil || o.BillingEndedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.BillingEndedOn
}

// GetBillingEndedOnOk returns a tuple with the BillingEndedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingEnd) GetBillingEndedOnOk() (*time.Time, bool) {
	if o == nil || o.BillingEndedOn == nil {
		return nil, false
	}
	return o.BillingEndedOn, true
}

// HasBillingEndedOn returns a boolean if a field has been set.
func (o *BillingEnd) HasBillingEndedOn() bool {
	if o != nil && o.BillingEndedOn != nil {
		return true
	}

	return false
}

// SetBillingEndedOn gets a reference to the given time.Time and assigns it to the BillingEndedOn field.
func (o *BillingEnd) SetBillingEndedOn(v time.Time) {
	o.BillingEndedOn = &v
}

func (o BillingEnd) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BillingEndedOn != nil {
		toSerialize["billing_ended_on"] = o.BillingEndedOn
	}
	return json.Marshal(toSerialize)
}

type NullableBillingEnd struct {
	value *BillingEnd
	isSet bool
}

func (v NullableBillingEnd) Get() *BillingEnd {
	return v.value
}

func (v *NullableBillingEnd) Set(val *BillingEnd) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingEnd) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingEnd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingEnd(val *BillingEnd) *NullableBillingEnd {
	return &NullableBillingEnd{value: val, isSet: true}
}

func (v NullableBillingEnd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingEnd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
