/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the TfVarsListRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TfVarsListRequest{}

// TfVarsListRequest Request to list Terraform tfvars files from a Git repository
type TfVarsListRequest struct {
	GitRepository        ApplicationGitRepositoryRequest `json:"git_repository"`
	Mode                 TfVarsDiscoveryMode             `json:"mode"`
	AdditionalProperties map[string]interface{}
}

type _TfVarsListRequest TfVarsListRequest

// NewTfVarsListRequest instantiates a new TfVarsListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTfVarsListRequest(gitRepository ApplicationGitRepositoryRequest, mode TfVarsDiscoveryMode) *TfVarsListRequest {
	this := TfVarsListRequest{}
	this.GitRepository = gitRepository
	this.Mode = mode
	return &this
}

// NewTfVarsListRequestWithDefaults instantiates a new TfVarsListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTfVarsListRequestWithDefaults() *TfVarsListRequest {
	this := TfVarsListRequest{}
	return &this
}

// GetGitRepository returns the GitRepository field value
func (o *TfVarsListRequest) GetGitRepository() ApplicationGitRepositoryRequest {
	if o == nil {
		var ret ApplicationGitRepositoryRequest
		return ret
	}

	return o.GitRepository
}

// GetGitRepositoryOk returns a tuple with the GitRepository field value
// and a boolean to check if the value has been set.
func (o *TfVarsListRequest) GetGitRepositoryOk() (*ApplicationGitRepositoryRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GitRepository, true
}

// SetGitRepository sets field value
func (o *TfVarsListRequest) SetGitRepository(v ApplicationGitRepositoryRequest) {
	o.GitRepository = v
}

// GetMode returns the Mode field value
func (o *TfVarsListRequest) GetMode() TfVarsDiscoveryMode {
	if o == nil {
		var ret TfVarsDiscoveryMode
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *TfVarsListRequest) GetModeOk() (*TfVarsDiscoveryMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *TfVarsListRequest) SetMode(v TfVarsDiscoveryMode) {
	o.Mode = v
}

func (o TfVarsListRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TfVarsListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["git_repository"] = o.GitRepository
	toSerialize["mode"] = o.Mode

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TfVarsListRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"git_repository",
		"mode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTfVarsListRequest := _TfVarsListRequest{}

	err = json.Unmarshal(data, &varTfVarsListRequest)

	if err != nil {
		return err
	}

	*o = TfVarsListRequest(varTfVarsListRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "git_repository")
		delete(additionalProperties, "mode")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTfVarsListRequest struct {
	value *TfVarsListRequest
	isSet bool
}

func (v NullableTfVarsListRequest) Get() *TfVarsListRequest {
	return v.value
}

func (v *NullableTfVarsListRequest) Set(val *TfVarsListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTfVarsListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTfVarsListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTfVarsListRequest(val *TfVarsListRequest) *NullableTfVarsListRequest {
	return &NullableTfVarsListRequest{value: val, isSet: true}
}

func (v NullableTfVarsListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTfVarsListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
