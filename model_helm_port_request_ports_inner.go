/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the HelmPortRequestPortsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelmPortRequestPortsInner{}

// HelmPortRequestPortsInner struct for HelmPortRequestPortsInner
type HelmPortRequestPortsInner struct {
	Name *string `json:"name,omitempty"`
	// The listening port of your service.
	InternalPort int32 `json:"internal_port"`
	// The exposed port for your service. This is optional. If not set a default port will be used.
	ExternalPort *int32                `json:"external_port,omitempty"`
	ServiceName  string                `json:"service_name"`
	Namespace    *string               `json:"namespace,omitempty"`
	Protocol     *HelmPortProtocolEnum `json:"protocol,omitempty"`
}

// NewHelmPortRequestPortsInner instantiates a new HelmPortRequestPortsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmPortRequestPortsInner(internalPort int32, serviceName string) *HelmPortRequestPortsInner {
	this := HelmPortRequestPortsInner{}
	this.InternalPort = internalPort
	this.ServiceName = serviceName
	var protocol HelmPortProtocolEnum = HELMPORTPROTOCOLENUM_HTTP
	this.Protocol = &protocol
	return &this
}

// NewHelmPortRequestPortsInnerWithDefaults instantiates a new HelmPortRequestPortsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmPortRequestPortsInnerWithDefaults() *HelmPortRequestPortsInner {
	this := HelmPortRequestPortsInner{}
	var protocol HelmPortProtocolEnum = HELMPORTPROTOCOLENUM_HTTP
	this.Protocol = &protocol
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HelmPortRequestPortsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmPortRequestPortsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HelmPortRequestPortsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HelmPortRequestPortsInner) SetName(v string) {
	o.Name = &v
}

// GetInternalPort returns the InternalPort field value
func (o *HelmPortRequestPortsInner) GetInternalPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InternalPort
}

// GetInternalPortOk returns a tuple with the InternalPort field value
// and a boolean to check if the value has been set.
func (o *HelmPortRequestPortsInner) GetInternalPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InternalPort, true
}

// SetInternalPort sets field value
func (o *HelmPortRequestPortsInner) SetInternalPort(v int32) {
	o.InternalPort = v
}

// GetExternalPort returns the ExternalPort field value if set, zero value otherwise.
func (o *HelmPortRequestPortsInner) GetExternalPort() int32 {
	if o == nil || IsNil(o.ExternalPort) {
		var ret int32
		return ret
	}
	return *o.ExternalPort
}

// GetExternalPortOk returns a tuple with the ExternalPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmPortRequestPortsInner) GetExternalPortOk() (*int32, bool) {
	if o == nil || IsNil(o.ExternalPort) {
		return nil, false
	}
	return o.ExternalPort, true
}

// HasExternalPort returns a boolean if a field has been set.
func (o *HelmPortRequestPortsInner) HasExternalPort() bool {
	if o != nil && !IsNil(o.ExternalPort) {
		return true
	}

	return false
}

// SetExternalPort gets a reference to the given int32 and assigns it to the ExternalPort field.
func (o *HelmPortRequestPortsInner) SetExternalPort(v int32) {
	o.ExternalPort = &v
}

// GetServiceName returns the ServiceName field value
func (o *HelmPortRequestPortsInner) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *HelmPortRequestPortsInner) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *HelmPortRequestPortsInner) SetServiceName(v string) {
	o.ServiceName = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *HelmPortRequestPortsInner) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmPortRequestPortsInner) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *HelmPortRequestPortsInner) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *HelmPortRequestPortsInner) SetNamespace(v string) {
	o.Namespace = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *HelmPortRequestPortsInner) GetProtocol() HelmPortProtocolEnum {
	if o == nil || IsNil(o.Protocol) {
		var ret HelmPortProtocolEnum
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmPortRequestPortsInner) GetProtocolOk() (*HelmPortProtocolEnum, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *HelmPortRequestPortsInner) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given HelmPortProtocolEnum and assigns it to the Protocol field.
func (o *HelmPortRequestPortsInner) SetProtocol(v HelmPortProtocolEnum) {
	o.Protocol = &v
}

func (o HelmPortRequestPortsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelmPortRequestPortsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["internal_port"] = o.InternalPort
	if !IsNil(o.ExternalPort) {
		toSerialize["external_port"] = o.ExternalPort
	}
	toSerialize["service_name"] = o.ServiceName
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	return toSerialize, nil
}

type NullableHelmPortRequestPortsInner struct {
	value *HelmPortRequestPortsInner
	isSet bool
}

func (v NullableHelmPortRequestPortsInner) Get() *HelmPortRequestPortsInner {
	return v.value
}

func (v *NullableHelmPortRequestPortsInner) Set(val *HelmPortRequestPortsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmPortRequestPortsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmPortRequestPortsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmPortRequestPortsInner(val *HelmPortRequestPortsInner) *NullableHelmPortRequestPortsInner {
	return &NullableHelmPortRequestPortsInner{value: val, isSet: true}
}

func (v NullableHelmPortRequestPortsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmPortRequestPortsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
