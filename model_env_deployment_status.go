/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the EnvDeploymentStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvDeploymentStatus{}

// EnvDeploymentStatus struct for EnvDeploymentStatus
type EnvDeploymentStatus struct {
	DeploymentRequestId  *string    `json:"deployment_request_id,omitempty"`
	EnvironmentId        *string    `json:"environment_id,omitempty"`
	Status               *StateEnum `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EnvDeploymentStatus EnvDeploymentStatus

// NewEnvDeploymentStatus instantiates a new EnvDeploymentStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvDeploymentStatus() *EnvDeploymentStatus {
	this := EnvDeploymentStatus{}
	return &this
}

// NewEnvDeploymentStatusWithDefaults instantiates a new EnvDeploymentStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvDeploymentStatusWithDefaults() *EnvDeploymentStatus {
	this := EnvDeploymentStatus{}
	return &this
}

// GetDeploymentRequestId returns the DeploymentRequestId field value if set, zero value otherwise.
func (o *EnvDeploymentStatus) GetDeploymentRequestId() string {
	if o == nil || IsNil(o.DeploymentRequestId) {
		var ret string
		return ret
	}
	return *o.DeploymentRequestId
}

// GetDeploymentRequestIdOk returns a tuple with the DeploymentRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvDeploymentStatus) GetDeploymentRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentRequestId) {
		return nil, false
	}
	return o.DeploymentRequestId, true
}

// HasDeploymentRequestId returns a boolean if a field has been set.
func (o *EnvDeploymentStatus) HasDeploymentRequestId() bool {
	if o != nil && !IsNil(o.DeploymentRequestId) {
		return true
	}

	return false
}

// SetDeploymentRequestId gets a reference to the given string and assigns it to the DeploymentRequestId field.
func (o *EnvDeploymentStatus) SetDeploymentRequestId(v string) {
	o.DeploymentRequestId = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *EnvDeploymentStatus) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvDeploymentStatus) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *EnvDeploymentStatus) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *EnvDeploymentStatus) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EnvDeploymentStatus) GetStatus() StateEnum {
	if o == nil || IsNil(o.Status) {
		var ret StateEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvDeploymentStatus) GetStatusOk() (*StateEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EnvDeploymentStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given StateEnum and assigns it to the Status field.
func (o *EnvDeploymentStatus) SetStatus(v StateEnum) {
	o.Status = &v
}

func (o EnvDeploymentStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvDeploymentStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeploymentRequestId) {
		toSerialize["deployment_request_id"] = o.DeploymentRequestId
	}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EnvDeploymentStatus) UnmarshalJSON(data []byte) (err error) {
	varEnvDeploymentStatus := _EnvDeploymentStatus{}

	err = json.Unmarshal(data, &varEnvDeploymentStatus)

	if err != nil {
		return err
	}

	*o = EnvDeploymentStatus(varEnvDeploymentStatus)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "deployment_request_id")
		delete(additionalProperties, "environment_id")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEnvDeploymentStatus struct {
	value *EnvDeploymentStatus
	isSet bool
}

func (v NullableEnvDeploymentStatus) Get() *EnvDeploymentStatus {
	return v.value
}

func (v *NullableEnvDeploymentStatus) Set(val *EnvDeploymentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvDeploymentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvDeploymentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvDeploymentStatus(val *EnvDeploymentStatus) *NullableEnvDeploymentStatus {
	return &NullableEnvDeploymentStatus{value: val, isSet: true}
}

func (v NullableEnvDeploymentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvDeploymentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
