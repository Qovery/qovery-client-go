/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the AlertRuleEditRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRuleEditRequest{}

// AlertRuleEditRequest struct for AlertRuleEditRequest
type AlertRuleEditRequest struct {
	// Name of the alert rule
	Name string `json:"name"`
	// Description of what the alert monitors
	Description string `json:"description"`
	// PromQL expression to evaluate
	PromqlExpr string `json:"promql_expr"`
	// Duration the condition must be true before firing (ISO-8601 duration format)
	ForDuration string        `json:"for_duration"`
	Severity    AlertSeverity `json:"severity"`
	// Whether the alert rule is enabled
	Enabled bool `json:"enabled"`
	// List of alert receiver IDs to send notifications to
	AlertReceiverIds     []string          `json:"alert_receiver_ids"`
	Presentation         AlertPresentation `json:"presentation"`
	AdditionalProperties map[string]interface{}
}

type _AlertRuleEditRequest AlertRuleEditRequest

// NewAlertRuleEditRequest instantiates a new AlertRuleEditRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRuleEditRequest(name string, description string, promqlExpr string, forDuration string, severity AlertSeverity, enabled bool, alertReceiverIds []string, presentation AlertPresentation) *AlertRuleEditRequest {
	this := AlertRuleEditRequest{}
	this.Name = name
	this.Description = description
	this.PromqlExpr = promqlExpr
	this.ForDuration = forDuration
	this.Severity = severity
	this.Enabled = enabled
	this.AlertReceiverIds = alertReceiverIds
	this.Presentation = presentation
	return &this
}

// NewAlertRuleEditRequestWithDefaults instantiates a new AlertRuleEditRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRuleEditRequestWithDefaults() *AlertRuleEditRequest {
	this := AlertRuleEditRequest{}
	return &this
}

// GetName returns the Name field value
func (o *AlertRuleEditRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AlertRuleEditRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AlertRuleEditRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *AlertRuleEditRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AlertRuleEditRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AlertRuleEditRequest) SetDescription(v string) {
	o.Description = v
}

// GetPromqlExpr returns the PromqlExpr field value
func (o *AlertRuleEditRequest) GetPromqlExpr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PromqlExpr
}

// GetPromqlExprOk returns a tuple with the PromqlExpr field value
// and a boolean to check if the value has been set.
func (o *AlertRuleEditRequest) GetPromqlExprOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromqlExpr, true
}

// SetPromqlExpr sets field value
func (o *AlertRuleEditRequest) SetPromqlExpr(v string) {
	o.PromqlExpr = v
}

// GetForDuration returns the ForDuration field value
func (o *AlertRuleEditRequest) GetForDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ForDuration
}

// GetForDurationOk returns a tuple with the ForDuration field value
// and a boolean to check if the value has been set.
func (o *AlertRuleEditRequest) GetForDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForDuration, true
}

// SetForDuration sets field value
func (o *AlertRuleEditRequest) SetForDuration(v string) {
	o.ForDuration = v
}

// GetSeverity returns the Severity field value
func (o *AlertRuleEditRequest) GetSeverity() AlertSeverity {
	if o == nil {
		var ret AlertSeverity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *AlertRuleEditRequest) GetSeverityOk() (*AlertSeverity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *AlertRuleEditRequest) SetSeverity(v AlertSeverity) {
	o.Severity = v
}

// GetEnabled returns the Enabled field value
func (o *AlertRuleEditRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AlertRuleEditRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AlertRuleEditRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetAlertReceiverIds returns the AlertReceiverIds field value
func (o *AlertRuleEditRequest) GetAlertReceiverIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AlertReceiverIds
}

// GetAlertReceiverIdsOk returns a tuple with the AlertReceiverIds field value
// and a boolean to check if the value has been set.
func (o *AlertRuleEditRequest) GetAlertReceiverIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertReceiverIds, true
}

// SetAlertReceiverIds sets field value
func (o *AlertRuleEditRequest) SetAlertReceiverIds(v []string) {
	o.AlertReceiverIds = v
}

// GetPresentation returns the Presentation field value
func (o *AlertRuleEditRequest) GetPresentation() AlertPresentation {
	if o == nil {
		var ret AlertPresentation
		return ret
	}

	return o.Presentation
}

// GetPresentationOk returns a tuple with the Presentation field value
// and a boolean to check if the value has been set.
func (o *AlertRuleEditRequest) GetPresentationOk() (*AlertPresentation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Presentation, true
}

// SetPresentation sets field value
func (o *AlertRuleEditRequest) SetPresentation(v AlertPresentation) {
	o.Presentation = v
}

func (o AlertRuleEditRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRuleEditRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["promql_expr"] = o.PromqlExpr
	toSerialize["for_duration"] = o.ForDuration
	toSerialize["severity"] = o.Severity
	toSerialize["enabled"] = o.Enabled
	toSerialize["alert_receiver_ids"] = o.AlertReceiverIds
	toSerialize["presentation"] = o.Presentation

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AlertRuleEditRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"description",
		"promql_expr",
		"for_duration",
		"severity",
		"enabled",
		"alert_receiver_ids",
		"presentation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertRuleEditRequest := _AlertRuleEditRequest{}

	err = json.Unmarshal(data, &varAlertRuleEditRequest)

	if err != nil {
		return err
	}

	*o = AlertRuleEditRequest(varAlertRuleEditRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "promql_expr")
		delete(additionalProperties, "for_duration")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "alert_receiver_ids")
		delete(additionalProperties, "presentation")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAlertRuleEditRequest struct {
	value *AlertRuleEditRequest
	isSet bool
}

func (v NullableAlertRuleEditRequest) Get() *AlertRuleEditRequest {
	return v.value
}

func (v *NullableAlertRuleEditRequest) Set(val *AlertRuleEditRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRuleEditRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRuleEditRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRuleEditRequest(val *AlertRuleEditRequest) *NullableAlertRuleEditRequest {
	return &NullableAlertRuleEditRequest{value: val, isSet: true}
}

func (v NullableAlertRuleEditRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRuleEditRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
