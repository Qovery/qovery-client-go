/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the OrganizationBillingUsageReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationBillingUsageReportRequest{}

// OrganizationBillingUsageReportRequest struct for OrganizationBillingUsageReportRequest
type OrganizationBillingUsageReportRequest struct {
	// The start date of the report
	From time.Time `json:"from"`
	// The end date of the report
	To time.Time `json:"to"`
	// The number of seconds the report will be publicly available
	ReportExpirationInSeconds int32 `json:"report_expiration_in_seconds"`
	AdditionalProperties      map[string]interface{}
}

type _OrganizationBillingUsageReportRequest OrganizationBillingUsageReportRequest

// NewOrganizationBillingUsageReportRequest instantiates a new OrganizationBillingUsageReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationBillingUsageReportRequest(from time.Time, to time.Time, reportExpirationInSeconds int32) *OrganizationBillingUsageReportRequest {
	this := OrganizationBillingUsageReportRequest{}
	this.From = from
	this.To = to
	this.ReportExpirationInSeconds = reportExpirationInSeconds
	return &this
}

// NewOrganizationBillingUsageReportRequestWithDefaults instantiates a new OrganizationBillingUsageReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationBillingUsageReportRequestWithDefaults() *OrganizationBillingUsageReportRequest {
	this := OrganizationBillingUsageReportRequest{}
	return &this
}

// GetFrom returns the From field value
func (o *OrganizationBillingUsageReportRequest) GetFrom() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *OrganizationBillingUsageReportRequest) GetFromOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *OrganizationBillingUsageReportRequest) SetFrom(v time.Time) {
	o.From = v
}

// GetTo returns the To field value
func (o *OrganizationBillingUsageReportRequest) GetTo() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *OrganizationBillingUsageReportRequest) GetToOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *OrganizationBillingUsageReportRequest) SetTo(v time.Time) {
	o.To = v
}

// GetReportExpirationInSeconds returns the ReportExpirationInSeconds field value
func (o *OrganizationBillingUsageReportRequest) GetReportExpirationInSeconds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReportExpirationInSeconds
}

// GetReportExpirationInSecondsOk returns a tuple with the ReportExpirationInSeconds field value
// and a boolean to check if the value has been set.
func (o *OrganizationBillingUsageReportRequest) GetReportExpirationInSecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportExpirationInSeconds, true
}

// SetReportExpirationInSeconds sets field value
func (o *OrganizationBillingUsageReportRequest) SetReportExpirationInSeconds(v int32) {
	o.ReportExpirationInSeconds = v
}

func (o OrganizationBillingUsageReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationBillingUsageReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["from"] = o.From
	toSerialize["to"] = o.To
	toSerialize["report_expiration_in_seconds"] = o.ReportExpirationInSeconds

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationBillingUsageReportRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"from",
		"to",
		"report_expiration_in_seconds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationBillingUsageReportRequest := _OrganizationBillingUsageReportRequest{}

	err = json.Unmarshal(data, &varOrganizationBillingUsageReportRequest)

	if err != nil {
		return err
	}

	*o = OrganizationBillingUsageReportRequest(varOrganizationBillingUsageReportRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "from")
		delete(additionalProperties, "to")
		delete(additionalProperties, "report_expiration_in_seconds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationBillingUsageReportRequest struct {
	value *OrganizationBillingUsageReportRequest
	isSet bool
}

func (v NullableOrganizationBillingUsageReportRequest) Get() *OrganizationBillingUsageReportRequest {
	return v.value
}

func (v *NullableOrganizationBillingUsageReportRequest) Set(val *OrganizationBillingUsageReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationBillingUsageReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationBillingUsageReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationBillingUsageReportRequest(val *OrganizationBillingUsageReportRequest) *NullableOrganizationBillingUsageReportRequest {
	return &NullableOrganizationBillingUsageReportRequest{value: val, isSet: true}
}

func (v NullableOrganizationBillingUsageReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationBillingUsageReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
