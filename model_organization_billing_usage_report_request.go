/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// checks if the OrganizationBillingUsageReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationBillingUsageReportRequest{}

// OrganizationBillingUsageReportRequest struct for OrganizationBillingUsageReportRequest
type OrganizationBillingUsageReportRequest struct {
	// The start date of the report
	From *time.Time `json:"from,omitempty"`
	// The end date of the report
	To *time.Time `json:"to,omitempty"`
	// The number of seconds the report will be publicly available
	ReportExpirationInSeconds *int32 `json:"report_expiration_in_seconds,omitempty"`
}

// NewOrganizationBillingUsageReportRequest instantiates a new OrganizationBillingUsageReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationBillingUsageReportRequest() *OrganizationBillingUsageReportRequest {
	this := OrganizationBillingUsageReportRequest{}
	return &this
}

// NewOrganizationBillingUsageReportRequestWithDefaults instantiates a new OrganizationBillingUsageReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationBillingUsageReportRequestWithDefaults() *OrganizationBillingUsageReportRequest {
	this := OrganizationBillingUsageReportRequest{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *OrganizationBillingUsageReportRequest) GetFrom() time.Time {
	if o == nil || IsNil(o.From) {
		var ret time.Time
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationBillingUsageReportRequest) GetFromOk() (*time.Time, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *OrganizationBillingUsageReportRequest) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given time.Time and assigns it to the From field.
func (o *OrganizationBillingUsageReportRequest) SetFrom(v time.Time) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *OrganizationBillingUsageReportRequest) GetTo() time.Time {
	if o == nil || IsNil(o.To) {
		var ret time.Time
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationBillingUsageReportRequest) GetToOk() (*time.Time, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *OrganizationBillingUsageReportRequest) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given time.Time and assigns it to the To field.
func (o *OrganizationBillingUsageReportRequest) SetTo(v time.Time) {
	o.To = &v
}

// GetReportExpirationInSeconds returns the ReportExpirationInSeconds field value if set, zero value otherwise.
func (o *OrganizationBillingUsageReportRequest) GetReportExpirationInSeconds() int32 {
	if o == nil || IsNil(o.ReportExpirationInSeconds) {
		var ret int32
		return ret
	}
	return *o.ReportExpirationInSeconds
}

// GetReportExpirationInSecondsOk returns a tuple with the ReportExpirationInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationBillingUsageReportRequest) GetReportExpirationInSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.ReportExpirationInSeconds) {
		return nil, false
	}
	return o.ReportExpirationInSeconds, true
}

// HasReportExpirationInSeconds returns a boolean if a field has been set.
func (o *OrganizationBillingUsageReportRequest) HasReportExpirationInSeconds() bool {
	if o != nil && !IsNil(o.ReportExpirationInSeconds) {
		return true
	}

	return false
}

// SetReportExpirationInSeconds gets a reference to the given int32 and assigns it to the ReportExpirationInSeconds field.
func (o *OrganizationBillingUsageReportRequest) SetReportExpirationInSeconds(v int32) {
	o.ReportExpirationInSeconds = &v
}

func (o OrganizationBillingUsageReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationBillingUsageReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.ReportExpirationInSeconds) {
		toSerialize["report_expiration_in_seconds"] = o.ReportExpirationInSeconds
	}
	return toSerialize, nil
}

type NullableOrganizationBillingUsageReportRequest struct {
	value *OrganizationBillingUsageReportRequest
	isSet bool
}

func (v NullableOrganizationBillingUsageReportRequest) Get() *OrganizationBillingUsageReportRequest {
	return v.value
}

func (v *NullableOrganizationBillingUsageReportRequest) Set(val *OrganizationBillingUsageReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationBillingUsageReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationBillingUsageReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationBillingUsageReportRequest(val *OrganizationBillingUsageReportRequest) *NullableOrganizationBillingUsageReportRequest {
	return &NullableOrganizationBillingUsageReportRequest{value: val, isSet: true}
}

func (v NullableOrganizationBillingUsageReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationBillingUsageReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
