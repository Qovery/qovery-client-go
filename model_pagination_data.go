/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the PaginationData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginationData{}

// PaginationData struct for PaginationData
type PaginationData struct {
	Page     float32 `json:"page"`
	PageSize float32 `json:"page_size"`
}

// NewPaginationData instantiates a new PaginationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationData(page float32, pageSize float32) *PaginationData {
	this := PaginationData{}
	this.Page = page
	this.PageSize = pageSize
	return &this
}

// NewPaginationDataWithDefaults instantiates a new PaginationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationDataWithDefaults() *PaginationData {
	this := PaginationData{}
	return &this
}

// GetPage returns the Page field value
func (o *PaginationData) GetPage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *PaginationData) GetPageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *PaginationData) SetPage(v float32) {
	o.Page = v
}

// GetPageSize returns the PageSize field value
func (o *PaginationData) GetPageSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *PaginationData) GetPageSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *PaginationData) SetPageSize(v float32) {
	o.PageSize = v
}

func (o PaginationData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginationData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["page"] = o.Page
	toSerialize["page_size"] = o.PageSize
	return toSerialize, nil
}

type NullablePaginationData struct {
	value *PaginationData
	isSet bool
}

func (v NullablePaginationData) Get() *PaginationData {
	return v.value
}

func (v *NullablePaginationData) Set(val *PaginationData) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationData) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationData(val *PaginationData) *NullablePaginationData {
	return &NullablePaginationData{value: val, isSet: true}
}

func (v NullablePaginationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
