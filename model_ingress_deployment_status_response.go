/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the IngressDeploymentStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngressDeploymentStatusResponse{}

// IngressDeploymentStatusResponse struct for IngressDeploymentStatusResponse
type IngressDeploymentStatusResponse struct {
	RouterId             *string    `json:"routerId,omitempty"`
	Status               *StateEnum `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IngressDeploymentStatusResponse IngressDeploymentStatusResponse

// NewIngressDeploymentStatusResponse instantiates a new IngressDeploymentStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngressDeploymentStatusResponse() *IngressDeploymentStatusResponse {
	this := IngressDeploymentStatusResponse{}
	return &this
}

// NewIngressDeploymentStatusResponseWithDefaults instantiates a new IngressDeploymentStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngressDeploymentStatusResponseWithDefaults() *IngressDeploymentStatusResponse {
	this := IngressDeploymentStatusResponse{}
	return &this
}

// GetRouterId returns the RouterId field value if set, zero value otherwise.
func (o *IngressDeploymentStatusResponse) GetRouterId() string {
	if o == nil || IsNil(o.RouterId) {
		var ret string
		return ret
	}
	return *o.RouterId
}

// GetRouterIdOk returns a tuple with the RouterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngressDeploymentStatusResponse) GetRouterIdOk() (*string, bool) {
	if o == nil || IsNil(o.RouterId) {
		return nil, false
	}
	return o.RouterId, true
}

// HasRouterId returns a boolean if a field has been set.
func (o *IngressDeploymentStatusResponse) HasRouterId() bool {
	if o != nil && !IsNil(o.RouterId) {
		return true
	}

	return false
}

// SetRouterId gets a reference to the given string and assigns it to the RouterId field.
func (o *IngressDeploymentStatusResponse) SetRouterId(v string) {
	o.RouterId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IngressDeploymentStatusResponse) GetStatus() StateEnum {
	if o == nil || IsNil(o.Status) {
		var ret StateEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngressDeploymentStatusResponse) GetStatusOk() (*StateEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IngressDeploymentStatusResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given StateEnum and assigns it to the Status field.
func (o *IngressDeploymentStatusResponse) SetStatus(v StateEnum) {
	o.Status = &v
}

func (o IngressDeploymentStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngressDeploymentStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RouterId) {
		toSerialize["routerId"] = o.RouterId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IngressDeploymentStatusResponse) UnmarshalJSON(data []byte) (err error) {
	varIngressDeploymentStatusResponse := _IngressDeploymentStatusResponse{}

	err = json.Unmarshal(data, &varIngressDeploymentStatusResponse)

	if err != nil {
		return err
	}

	*o = IngressDeploymentStatusResponse(varIngressDeploymentStatusResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "routerId")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIngressDeploymentStatusResponse struct {
	value *IngressDeploymentStatusResponse
	isSet bool
}

func (v NullableIngressDeploymentStatusResponse) Get() *IngressDeploymentStatusResponse {
	return v.value
}

func (v *NullableIngressDeploymentStatusResponse) Set(val *IngressDeploymentStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIngressDeploymentStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIngressDeploymentStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngressDeploymentStatusResponse(val *IngressDeploymentStatusResponse) *NullableIngressDeploymentStatusResponse {
	return &NullableIngressDeploymentStatusResponse{value: val, isSet: true}
}

func (v NullableIngressDeploymentStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngressDeploymentStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
