/*
[BETA] Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.0.0
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// InviteMemberResponse struct for InviteMemberResponse
type InviteMemberResponse struct {
	Email            string     `json:"email"`
	Role             string     `json:"role"`
	InvitationLink   string     `json:"invitation_link"`
	InvitationStatus string     `json:"invitation_status"`
	Inviter          string     `json:"inviter"`
	LogoUrl          *string    `json:"logo_url,omitempty"`
	Id               string     `json:"id"`
	CreatedAt        time.Time  `json:"created_at"`
	UpdatedAt        *time.Time `json:"updated_at,omitempty"`
}

// NewInviteMemberResponse instantiates a new InviteMemberResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteMemberResponse(email string, role string, invitationLink string, invitationStatus string, inviter string, id string, createdAt time.Time) *InviteMemberResponse {
	this := InviteMemberResponse{}
	this.Id = id
	this.CreatedAt = createdAt
	return &this
}

// NewInviteMemberResponseWithDefaults instantiates a new InviteMemberResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteMemberResponseWithDefaults() *InviteMemberResponse {
	this := InviteMemberResponse{}
	return &this
}

// GetEmail returns the Email field value
func (o *InviteMemberResponse) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponse) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *InviteMemberResponse) SetEmail(v string) {
	o.Email = v
}

// GetRole returns the Role field value
func (o *InviteMemberResponse) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponse) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *InviteMemberResponse) SetRole(v string) {
	o.Role = v
}

// GetInvitationLink returns the InvitationLink field value
func (o *InviteMemberResponse) GetInvitationLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvitationLink
}

// GetInvitationLinkOk returns a tuple with the InvitationLink field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponse) GetInvitationLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvitationLink, true
}

// SetInvitationLink sets field value
func (o *InviteMemberResponse) SetInvitationLink(v string) {
	o.InvitationLink = v
}

// GetInvitationStatus returns the InvitationStatus field value
func (o *InviteMemberResponse) GetInvitationStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvitationStatus
}

// GetInvitationStatusOk returns a tuple with the InvitationStatus field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponse) GetInvitationStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvitationStatus, true
}

// SetInvitationStatus sets field value
func (o *InviteMemberResponse) SetInvitationStatus(v string) {
	o.InvitationStatus = v
}

// GetInviter returns the Inviter field value
func (o *InviteMemberResponse) GetInviter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Inviter
}

// GetInviterOk returns a tuple with the Inviter field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponse) GetInviterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inviter, true
}

// SetInviter sets field value
func (o *InviteMemberResponse) SetInviter(v string) {
	o.Inviter = v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *InviteMemberResponse) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteMemberResponse) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *InviteMemberResponse) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *InviteMemberResponse) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetId returns the Id field value
func (o *InviteMemberResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InviteMemberResponse) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *InviteMemberResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *InviteMemberResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *InviteMemberResponse) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteMemberResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *InviteMemberResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *InviteMemberResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o InviteMemberResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["invitation_link"] = o.InvitationLink
	}
	if true {
		toSerialize["invitation_status"] = o.InvitationStatus
	}
	if true {
		toSerialize["inviter"] = o.Inviter
	}
	if o.LogoUrl != nil {
		toSerialize["logo_url"] = o.LogoUrl
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableInviteMemberResponse struct {
	value *InviteMemberResponse
	isSet bool
}

func (v NullableInviteMemberResponse) Get() *InviteMemberResponse {
	return v.value
}

func (v *NullableInviteMemberResponse) Set(val *InviteMemberResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteMemberResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteMemberResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteMemberResponse(val *InviteMemberResponse) *NullableInviteMemberResponse {
	return &NullableInviteMemberResponse{value: val, isSet: true}
}

func (v NullableInviteMemberResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteMemberResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
