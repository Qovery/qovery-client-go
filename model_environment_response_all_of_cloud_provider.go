/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// EnvironmentResponseAllOfCloudProvider struct for EnvironmentResponseAllOfCloudProvider
type EnvironmentResponseAllOfCloudProvider struct {
	Provider *string `json:"provider,omitempty"`
	Cluster  *string `json:"cluster,omitempty"`
}

// NewEnvironmentResponseAllOfCloudProvider instantiates a new EnvironmentResponseAllOfCloudProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentResponseAllOfCloudProvider() *EnvironmentResponseAllOfCloudProvider {
	this := EnvironmentResponseAllOfCloudProvider{}
	return &this
}

// NewEnvironmentResponseAllOfCloudProviderWithDefaults instantiates a new EnvironmentResponseAllOfCloudProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentResponseAllOfCloudProviderWithDefaults() *EnvironmentResponseAllOfCloudProvider {
	this := EnvironmentResponseAllOfCloudProvider{}
	return &this
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *EnvironmentResponseAllOfCloudProvider) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentResponseAllOfCloudProvider) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *EnvironmentResponseAllOfCloudProvider) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *EnvironmentResponseAllOfCloudProvider) SetProvider(v string) {
	o.Provider = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *EnvironmentResponseAllOfCloudProvider) GetCluster() string {
	if o == nil || o.Cluster == nil {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentResponseAllOfCloudProvider) GetClusterOk() (*string, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *EnvironmentResponseAllOfCloudProvider) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *EnvironmentResponseAllOfCloudProvider) SetCluster(v string) {
	o.Cluster = &v
}

func (o EnvironmentResponseAllOfCloudProvider) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentResponseAllOfCloudProvider struct {
	value *EnvironmentResponseAllOfCloudProvider
	isSet bool
}

func (v NullableEnvironmentResponseAllOfCloudProvider) Get() *EnvironmentResponseAllOfCloudProvider {
	return v.value
}

func (v *NullableEnvironmentResponseAllOfCloudProvider) Set(val *EnvironmentResponseAllOfCloudProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentResponseAllOfCloudProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentResponseAllOfCloudProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentResponseAllOfCloudProvider(val *EnvironmentResponseAllOfCloudProvider) *NullableEnvironmentResponseAllOfCloudProvider {
	return &NullableEnvironmentResponseAllOfCloudProvider{value: val, isSet: true}
}

func (v NullableEnvironmentResponseAllOfCloudProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentResponseAllOfCloudProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
