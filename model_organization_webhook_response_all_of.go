/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// OrganizationWebhookResponseAllOf struct for OrganizationWebhookResponseAllOf
type OrganizationWebhookResponseAllOf struct {
	Kind *OrganizationWebhookKindEnum `json:"kind,omitempty"`
	// Set the public HTTP or HTTPS endpoint that will receive the specified events. The target URL must starts with `http://` or `https://`
	TargetUrl       *string `json:"target_url,omitempty"`
	TargetSecretSet *bool   `json:"target_secret_set,omitempty"`
	Description     *string `json:"description,omitempty"`
	// Turn on or off your endpoint.
	Enabled         *bool                          `json:"enabled,omitempty"`
	Events          []OrganizationWebhookEventEnum `json:"events,omitempty"`
	ProjectIdFilter []string                       `json:"project_id_filter,omitempty"`
	// Specify the environment modes you want to filter to. This webhook will be triggered only if the event is coming from an environment with the specified mode.
	EnvironmentTypesFilter []EnvironmentModeEnum `json:"environment_types_filter,omitempty"`
}

// NewOrganizationWebhookResponseAllOf instantiates a new OrganizationWebhookResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationWebhookResponseAllOf() *OrganizationWebhookResponseAllOf {
	this := OrganizationWebhookResponseAllOf{}
	return &this
}

// NewOrganizationWebhookResponseAllOfWithDefaults instantiates a new OrganizationWebhookResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationWebhookResponseAllOfWithDefaults() *OrganizationWebhookResponseAllOf {
	this := OrganizationWebhookResponseAllOf{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *OrganizationWebhookResponseAllOf) GetKind() OrganizationWebhookKindEnum {
	if o == nil || o.Kind == nil {
		var ret OrganizationWebhookKindEnum
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWebhookResponseAllOf) GetKindOk() (*OrganizationWebhookKindEnum, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *OrganizationWebhookResponseAllOf) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given OrganizationWebhookKindEnum and assigns it to the Kind field.
func (o *OrganizationWebhookResponseAllOf) SetKind(v OrganizationWebhookKindEnum) {
	o.Kind = &v
}

// GetTargetUrl returns the TargetUrl field value if set, zero value otherwise.
func (o *OrganizationWebhookResponseAllOf) GetTargetUrl() string {
	if o == nil || o.TargetUrl == nil {
		var ret string
		return ret
	}
	return *o.TargetUrl
}

// GetTargetUrlOk returns a tuple with the TargetUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWebhookResponseAllOf) GetTargetUrlOk() (*string, bool) {
	if o == nil || o.TargetUrl == nil {
		return nil, false
	}
	return o.TargetUrl, true
}

// HasTargetUrl returns a boolean if a field has been set.
func (o *OrganizationWebhookResponseAllOf) HasTargetUrl() bool {
	if o != nil && o.TargetUrl != nil {
		return true
	}

	return false
}

// SetTargetUrl gets a reference to the given string and assigns it to the TargetUrl field.
func (o *OrganizationWebhookResponseAllOf) SetTargetUrl(v string) {
	o.TargetUrl = &v
}

// GetTargetSecretSet returns the TargetSecretSet field value if set, zero value otherwise.
func (o *OrganizationWebhookResponseAllOf) GetTargetSecretSet() bool {
	if o == nil || o.TargetSecretSet == nil {
		var ret bool
		return ret
	}
	return *o.TargetSecretSet
}

// GetTargetSecretSetOk returns a tuple with the TargetSecretSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWebhookResponseAllOf) GetTargetSecretSetOk() (*bool, bool) {
	if o == nil || o.TargetSecretSet == nil {
		return nil, false
	}
	return o.TargetSecretSet, true
}

// HasTargetSecretSet returns a boolean if a field has been set.
func (o *OrganizationWebhookResponseAllOf) HasTargetSecretSet() bool {
	if o != nil && o.TargetSecretSet != nil {
		return true
	}

	return false
}

// SetTargetSecretSet gets a reference to the given bool and assigns it to the TargetSecretSet field.
func (o *OrganizationWebhookResponseAllOf) SetTargetSecretSet(v bool) {
	o.TargetSecretSet = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrganizationWebhookResponseAllOf) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWebhookResponseAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrganizationWebhookResponseAllOf) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrganizationWebhookResponseAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *OrganizationWebhookResponseAllOf) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWebhookResponseAllOf) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *OrganizationWebhookResponseAllOf) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *OrganizationWebhookResponseAllOf) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *OrganizationWebhookResponseAllOf) GetEvents() []OrganizationWebhookEventEnum {
	if o == nil || o.Events == nil {
		var ret []OrganizationWebhookEventEnum
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWebhookResponseAllOf) GetEventsOk() ([]OrganizationWebhookEventEnum, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *OrganizationWebhookResponseAllOf) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []OrganizationWebhookEventEnum and assigns it to the Events field.
func (o *OrganizationWebhookResponseAllOf) SetEvents(v []OrganizationWebhookEventEnum) {
	o.Events = v
}

// GetProjectIdFilter returns the ProjectIdFilter field value if set, zero value otherwise.
func (o *OrganizationWebhookResponseAllOf) GetProjectIdFilter() []string {
	if o == nil || o.ProjectIdFilter == nil {
		var ret []string
		return ret
	}
	return o.ProjectIdFilter
}

// GetProjectIdFilterOk returns a tuple with the ProjectIdFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWebhookResponseAllOf) GetProjectIdFilterOk() ([]string, bool) {
	if o == nil || o.ProjectIdFilter == nil {
		return nil, false
	}
	return o.ProjectIdFilter, true
}

// HasProjectIdFilter returns a boolean if a field has been set.
func (o *OrganizationWebhookResponseAllOf) HasProjectIdFilter() bool {
	if o != nil && o.ProjectIdFilter != nil {
		return true
	}

	return false
}

// SetProjectIdFilter gets a reference to the given []string and assigns it to the ProjectIdFilter field.
func (o *OrganizationWebhookResponseAllOf) SetProjectIdFilter(v []string) {
	o.ProjectIdFilter = v
}

// GetEnvironmentTypesFilter returns the EnvironmentTypesFilter field value if set, zero value otherwise.
func (o *OrganizationWebhookResponseAllOf) GetEnvironmentTypesFilter() []EnvironmentModeEnum {
	if o == nil || o.EnvironmentTypesFilter == nil {
		var ret []EnvironmentModeEnum
		return ret
	}
	return o.EnvironmentTypesFilter
}

// GetEnvironmentTypesFilterOk returns a tuple with the EnvironmentTypesFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationWebhookResponseAllOf) GetEnvironmentTypesFilterOk() ([]EnvironmentModeEnum, bool) {
	if o == nil || o.EnvironmentTypesFilter == nil {
		return nil, false
	}
	return o.EnvironmentTypesFilter, true
}

// HasEnvironmentTypesFilter returns a boolean if a field has been set.
func (o *OrganizationWebhookResponseAllOf) HasEnvironmentTypesFilter() bool {
	if o != nil && o.EnvironmentTypesFilter != nil {
		return true
	}

	return false
}

// SetEnvironmentTypesFilter gets a reference to the given []EnvironmentModeEnum and assigns it to the EnvironmentTypesFilter field.
func (o *OrganizationWebhookResponseAllOf) SetEnvironmentTypesFilter(v []EnvironmentModeEnum) {
	o.EnvironmentTypesFilter = v
}

func (o OrganizationWebhookResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.TargetUrl != nil {
		toSerialize["target_url"] = o.TargetUrl
	}
	if o.TargetSecretSet != nil {
		toSerialize["target_secret_set"] = o.TargetSecretSet
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	if o.ProjectIdFilter != nil {
		toSerialize["project_id_filter"] = o.ProjectIdFilter
	}
	if o.EnvironmentTypesFilter != nil {
		toSerialize["environment_types_filter"] = o.EnvironmentTypesFilter
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationWebhookResponseAllOf struct {
	value *OrganizationWebhookResponseAllOf
	isSet bool
}

func (v NullableOrganizationWebhookResponseAllOf) Get() *OrganizationWebhookResponseAllOf {
	return v.value
}

func (v *NullableOrganizationWebhookResponseAllOf) Set(val *OrganizationWebhookResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationWebhookResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationWebhookResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationWebhookResponseAllOf(val *OrganizationWebhookResponseAllOf) *NullableOrganizationWebhookResponseAllOf {
	return &NullableOrganizationWebhookResponseAllOf{value: val, isSet: true}
}

func (v NullableOrganizationWebhookResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationWebhookResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
