/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the CloneRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloneRequest{}

// CloneRequest struct for CloneRequest
type CloneRequest struct {
	// name is case insensitive
	Name                string               `json:"name"`
	ClusterId           *string              `json:"cluster_id,omitempty"`
	Mode                *EnvironmentModeEnum `json:"mode,omitempty"`
	ApplyDeploymentRule *bool                `json:"apply_deployment_rule,omitempty"`
}

// NewCloneRequest instantiates a new CloneRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneRequest(name string) *CloneRequest {
	this := CloneRequest{}
	this.Name = name
	var applyDeploymentRule bool = false
	this.ApplyDeploymentRule = &applyDeploymentRule
	return &this
}

// NewCloneRequestWithDefaults instantiates a new CloneRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneRequestWithDefaults() *CloneRequest {
	this := CloneRequest{}
	var applyDeploymentRule bool = false
	this.ApplyDeploymentRule = &applyDeploymentRule
	return &this
}

// GetName returns the Name field value
func (o *CloneRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CloneRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CloneRequest) SetName(v string) {
	o.Name = v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *CloneRequest) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneRequest) GetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *CloneRequest) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *CloneRequest) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *CloneRequest) GetMode() EnvironmentModeEnum {
	if o == nil || IsNil(o.Mode) {
		var ret EnvironmentModeEnum
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneRequest) GetModeOk() (*EnvironmentModeEnum, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *CloneRequest) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given EnvironmentModeEnum and assigns it to the Mode field.
func (o *CloneRequest) SetMode(v EnvironmentModeEnum) {
	o.Mode = &v
}

// GetApplyDeploymentRule returns the ApplyDeploymentRule field value if set, zero value otherwise.
func (o *CloneRequest) GetApplyDeploymentRule() bool {
	if o == nil || IsNil(o.ApplyDeploymentRule) {
		var ret bool
		return ret
	}
	return *o.ApplyDeploymentRule
}

// GetApplyDeploymentRuleOk returns a tuple with the ApplyDeploymentRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneRequest) GetApplyDeploymentRuleOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplyDeploymentRule) {
		return nil, false
	}
	return o.ApplyDeploymentRule, true
}

// HasApplyDeploymentRule returns a boolean if a field has been set.
func (o *CloneRequest) HasApplyDeploymentRule() bool {
	if o != nil && !IsNil(o.ApplyDeploymentRule) {
		return true
	}

	return false
}

// SetApplyDeploymentRule gets a reference to the given bool and assigns it to the ApplyDeploymentRule field.
func (o *CloneRequest) SetApplyDeploymentRule(v bool) {
	o.ApplyDeploymentRule = &v
}

func (o CloneRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloneRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.ApplyDeploymentRule) {
		toSerialize["apply_deployment_rule"] = o.ApplyDeploymentRule
	}
	return toSerialize, nil
}

type NullableCloneRequest struct {
	value *CloneRequest
	isSet bool
}

func (v NullableCloneRequest) Get() *CloneRequest {
	return v.value
}

func (v *NullableCloneRequest) Set(val *CloneRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneRequest(val *CloneRequest) *NullableCloneRequest {
	return &NullableCloneRequest{value: val, isSet: true}
}

func (v NullableCloneRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
