/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// ListEnvironmentLogs200ResponseInner struct for ListEnvironmentLogs200ResponseInner
type ListEnvironmentLogs200ResponseInner struct {
	Id        string                                             `json:"id"`
	Timestamp time.Time                                          `json:"timestamp"`
	Details   ListEnvironmentLogs200ResponseInnerDetails         `json:"details"`
	Error     NullableListEnvironmentLogs200ResponseInnerError   `json:"error,omitempty"`
	Message   NullableListEnvironmentLogs200ResponseInnerMessage `json:"message,omitempty"`
}

// NewListEnvironmentLogs200ResponseInner instantiates a new ListEnvironmentLogs200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListEnvironmentLogs200ResponseInner(id string, timestamp time.Time, details ListEnvironmentLogs200ResponseInnerDetails) *ListEnvironmentLogs200ResponseInner {
	this := ListEnvironmentLogs200ResponseInner{}
	this.Id = id
	this.Timestamp = timestamp
	this.Details = details
	return &this
}

// NewListEnvironmentLogs200ResponseInnerWithDefaults instantiates a new ListEnvironmentLogs200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListEnvironmentLogs200ResponseInnerWithDefaults() *ListEnvironmentLogs200ResponseInner {
	this := ListEnvironmentLogs200ResponseInner{}
	return &this
}

// GetId returns the Id field value
func (o *ListEnvironmentLogs200ResponseInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListEnvironmentLogs200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListEnvironmentLogs200ResponseInner) SetId(v string) {
	o.Id = v
}

// GetTimestamp returns the Timestamp field value
func (o *ListEnvironmentLogs200ResponseInner) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ListEnvironmentLogs200ResponseInner) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ListEnvironmentLogs200ResponseInner) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetDetails returns the Details field value
func (o *ListEnvironmentLogs200ResponseInner) GetDetails() ListEnvironmentLogs200ResponseInnerDetails {
	if o == nil {
		var ret ListEnvironmentLogs200ResponseInnerDetails
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *ListEnvironmentLogs200ResponseInner) GetDetailsOk() (*ListEnvironmentLogs200ResponseInnerDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *ListEnvironmentLogs200ResponseInner) SetDetails(v ListEnvironmentLogs200ResponseInnerDetails) {
	o.Details = v
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListEnvironmentLogs200ResponseInner) GetError() ListEnvironmentLogs200ResponseInnerError {
	if o == nil || o.Error.Get() == nil {
		var ret ListEnvironmentLogs200ResponseInnerError
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListEnvironmentLogs200ResponseInner) GetErrorOk() (*ListEnvironmentLogs200ResponseInnerError, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *ListEnvironmentLogs200ResponseInner) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableListEnvironmentLogs200ResponseInnerError and assigns it to the Error field.
func (o *ListEnvironmentLogs200ResponseInner) SetError(v ListEnvironmentLogs200ResponseInnerError) {
	o.Error.Set(&v)
}

// SetErrorNil sets the value for Error to be an explicit nil
func (o *ListEnvironmentLogs200ResponseInner) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *ListEnvironmentLogs200ResponseInner) UnsetError() {
	o.Error.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListEnvironmentLogs200ResponseInner) GetMessage() ListEnvironmentLogs200ResponseInnerMessage {
	if o == nil || o.Message.Get() == nil {
		var ret ListEnvironmentLogs200ResponseInnerMessage
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListEnvironmentLogs200ResponseInner) GetMessageOk() (*ListEnvironmentLogs200ResponseInnerMessage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *ListEnvironmentLogs200ResponseInner) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableListEnvironmentLogs200ResponseInnerMessage and assigns it to the Message field.
func (o *ListEnvironmentLogs200ResponseInner) SetMessage(v ListEnvironmentLogs200ResponseInnerMessage) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *ListEnvironmentLogs200ResponseInner) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *ListEnvironmentLogs200ResponseInner) UnsetMessage() {
	o.Message.Unset()
}

func (o ListEnvironmentLogs200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["details"] = o.Details
	}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableListEnvironmentLogs200ResponseInner struct {
	value *ListEnvironmentLogs200ResponseInner
	isSet bool
}

func (v NullableListEnvironmentLogs200ResponseInner) Get() *ListEnvironmentLogs200ResponseInner {
	return v.value
}

func (v *NullableListEnvironmentLogs200ResponseInner) Set(val *ListEnvironmentLogs200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListEnvironmentLogs200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListEnvironmentLogs200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListEnvironmentLogs200ResponseInner(val *ListEnvironmentLogs200ResponseInner) *NullableListEnvironmentLogs200ResponseInner {
	return &NullableListEnvironmentLogs200ResponseInner{value: val, isSet: true}
}

func (v NullableListEnvironmentLogs200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListEnvironmentLogs200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
