/*
[BETA] Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet.

API version: 1.0.0
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// Healthcheck struct for Healthcheck
type Healthcheck struct {
	Protocol *string `json:"protocol,omitempty"`
	Value    *string `json:"value,omitempty"`
}

// NewHealthcheck instantiates a new Healthcheck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthcheck() *Healthcheck {
	this := Healthcheck{}
	return &this
}

// NewHealthcheckWithDefaults instantiates a new Healthcheck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthcheckWithDefaults() *Healthcheck {
	this := Healthcheck{}
	return &this
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *Healthcheck) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Healthcheck) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *Healthcheck) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *Healthcheck) SetProtocol(v string) {
	o.Protocol = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *Healthcheck) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Healthcheck) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *Healthcheck) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *Healthcheck) SetValue(v string) {
	o.Value = &v
}

func (o Healthcheck) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableHealthcheck struct {
	value *Healthcheck
	isSet bool
}

func (v NullableHealthcheck) Get() *Healthcheck {
	return v.value
}

func (v *NullableHealthcheck) Set(val *Healthcheck) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthcheck) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthcheck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthcheck(val *Healthcheck) *NullableHealthcheck {
	return &NullableHealthcheck{value: val, isSet: true}
}

func (v NullableHealthcheck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthcheck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
