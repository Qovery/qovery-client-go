/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the CancelEnvironmentDeploymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelEnvironmentDeploymentRequest{}

// CancelEnvironmentDeploymentRequest struct for CancelEnvironmentDeploymentRequest
type CancelEnvironmentDeploymentRequest struct {
	// Force cancel everything running in this environment if set to true (e.q lifecycle jobs triggered during the deployment).
	ForceCancel          *bool `json:"force_cancel,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CancelEnvironmentDeploymentRequest CancelEnvironmentDeploymentRequest

// NewCancelEnvironmentDeploymentRequest instantiates a new CancelEnvironmentDeploymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelEnvironmentDeploymentRequest() *CancelEnvironmentDeploymentRequest {
	this := CancelEnvironmentDeploymentRequest{}
	var forceCancel bool = false
	this.ForceCancel = &forceCancel
	return &this
}

// NewCancelEnvironmentDeploymentRequestWithDefaults instantiates a new CancelEnvironmentDeploymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelEnvironmentDeploymentRequestWithDefaults() *CancelEnvironmentDeploymentRequest {
	this := CancelEnvironmentDeploymentRequest{}
	var forceCancel bool = false
	this.ForceCancel = &forceCancel
	return &this
}

// GetForceCancel returns the ForceCancel field value if set, zero value otherwise.
func (o *CancelEnvironmentDeploymentRequest) GetForceCancel() bool {
	if o == nil || IsNil(o.ForceCancel) {
		var ret bool
		return ret
	}
	return *o.ForceCancel
}

// GetForceCancelOk returns a tuple with the ForceCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelEnvironmentDeploymentRequest) GetForceCancelOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceCancel) {
		return nil, false
	}
	return o.ForceCancel, true
}

// HasForceCancel returns a boolean if a field has been set.
func (o *CancelEnvironmentDeploymentRequest) HasForceCancel() bool {
	if o != nil && !IsNil(o.ForceCancel) {
		return true
	}

	return false
}

// SetForceCancel gets a reference to the given bool and assigns it to the ForceCancel field.
func (o *CancelEnvironmentDeploymentRequest) SetForceCancel(v bool) {
	o.ForceCancel = &v
}

func (o CancelEnvironmentDeploymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelEnvironmentDeploymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ForceCancel) {
		toSerialize["force_cancel"] = o.ForceCancel
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CancelEnvironmentDeploymentRequest) UnmarshalJSON(data []byte) (err error) {
	varCancelEnvironmentDeploymentRequest := _CancelEnvironmentDeploymentRequest{}

	err = json.Unmarshal(data, &varCancelEnvironmentDeploymentRequest)

	if err != nil {
		return err
	}

	*o = CancelEnvironmentDeploymentRequest(varCancelEnvironmentDeploymentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "force_cancel")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCancelEnvironmentDeploymentRequest struct {
	value *CancelEnvironmentDeploymentRequest
	isSet bool
}

func (v NullableCancelEnvironmentDeploymentRequest) Get() *CancelEnvironmentDeploymentRequest {
	return v.value
}

func (v *NullableCancelEnvironmentDeploymentRequest) Set(val *CancelEnvironmentDeploymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelEnvironmentDeploymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelEnvironmentDeploymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelEnvironmentDeploymentRequest(val *CancelEnvironmentDeploymentRequest) *NullableCancelEnvironmentDeploymentRequest {
	return &NullableCancelEnvironmentDeploymentRequest{value: val, isSet: true}
}

func (v NullableCancelEnvironmentDeploymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelEnvironmentDeploymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
