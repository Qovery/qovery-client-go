/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the TerraformResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TerraformResponse{}

// TerraformResponse struct for TerraformResponse
type TerraformResponse struct {
	Id        string     `json:"id"`
	CreatedAt time.Time  `json:"created_at"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// name is case insensitive
	Name                 string                 `json:"name"`
	Description          *string                `json:"description,omitempty"`
	TimeoutSec           int32                  `json:"timeout_sec"`
	AutoApprove          bool                   `json:"auto_approve"`
	AutoDeploy           bool                   `json:"auto_deploy"`
	TerraformFilesSource map[string]interface{} `json:"terraform_files_source,omitempty"`
	// Icon URI representing the terraform service.
	IconUri                  string                           `json:"icon_uri"`
	ServiceType              ServiceTypeEnum                  `json:"service_type"`
	TerraformVariablesSource TerraformVariablesSourceResponse `json:"terraform_variables_source"`
	Provider                 string                           `json:"provider"`
	ProviderVersion          TerraformProviderVersion         `json:"provider_version"`
	JobResources             TerraformJobResourcesResponse    `json:"job_resources"`
	Environment              ReferenceObject                  `json:"environment"`
	AdditionalProperties     map[string]interface{}
}

type _TerraformResponse TerraformResponse

// NewTerraformResponse instantiates a new TerraformResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerraformResponse(id string, createdAt time.Time, name string, timeoutSec int32, autoApprove bool, autoDeploy bool, iconUri string, serviceType ServiceTypeEnum, terraformVariablesSource TerraformVariablesSourceResponse, provider string, providerVersion TerraformProviderVersion, jobResources TerraformJobResourcesResponse, environment ReferenceObject) *TerraformResponse {
	this := TerraformResponse{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Name = name
	this.TimeoutSec = timeoutSec
	this.AutoApprove = autoApprove
	this.AutoDeploy = autoDeploy
	this.IconUri = iconUri
	this.ServiceType = serviceType
	this.TerraformVariablesSource = terraformVariablesSource
	this.Provider = provider
	this.ProviderVersion = providerVersion
	this.JobResources = jobResources
	this.Environment = environment
	return &this
}

// NewTerraformResponseWithDefaults instantiates a new TerraformResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformResponseWithDefaults() *TerraformResponse {
	this := TerraformResponse{}
	var timeoutSec int32 = 600
	this.TimeoutSec = timeoutSec
	return &this
}

// GetId returns the Id field value
func (o *TerraformResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TerraformResponse) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TerraformResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TerraformResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TerraformResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TerraformResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *TerraformResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetName returns the Name field value
func (o *TerraformResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TerraformResponse) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TerraformResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TerraformResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TerraformResponse) SetDescription(v string) {
	o.Description = &v
}

// GetTimeoutSec returns the TimeoutSec field value
func (o *TerraformResponse) GetTimeoutSec() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TimeoutSec
}

// GetTimeoutSecOk returns a tuple with the TimeoutSec field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetTimeoutSecOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeoutSec, true
}

// SetTimeoutSec sets field value
func (o *TerraformResponse) SetTimeoutSec(v int32) {
	o.TimeoutSec = v
}

// GetAutoApprove returns the AutoApprove field value
func (o *TerraformResponse) GetAutoApprove() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoApprove
}

// GetAutoApproveOk returns a tuple with the AutoApprove field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetAutoApproveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoApprove, true
}

// SetAutoApprove sets field value
func (o *TerraformResponse) SetAutoApprove(v bool) {
	o.AutoApprove = v
}

// GetAutoDeploy returns the AutoDeploy field value
func (o *TerraformResponse) GetAutoDeploy() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoDeploy
}

// GetAutoDeployOk returns a tuple with the AutoDeploy field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetAutoDeployOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoDeploy, true
}

// SetAutoDeploy sets field value
func (o *TerraformResponse) SetAutoDeploy(v bool) {
	o.AutoDeploy = v
}

// GetTerraformFilesSource returns the TerraformFilesSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TerraformResponse) GetTerraformFilesSource() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.TerraformFilesSource
}

// GetTerraformFilesSourceOk returns a tuple with the TerraformFilesSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TerraformResponse) GetTerraformFilesSourceOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TerraformFilesSource) {
		return map[string]interface{}{}, false
	}
	return o.TerraformFilesSource, true
}

// HasTerraformFilesSource returns a boolean if a field has been set.
func (o *TerraformResponse) HasTerraformFilesSource() bool {
	if o != nil && !IsNil(o.TerraformFilesSource) {
		return true
	}

	return false
}

// SetTerraformFilesSource gets a reference to the given map[string]interface{} and assigns it to the TerraformFilesSource field.
func (o *TerraformResponse) SetTerraformFilesSource(v map[string]interface{}) {
	o.TerraformFilesSource = v
}

// GetIconUri returns the IconUri field value
func (o *TerraformResponse) GetIconUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IconUri
}

// GetIconUriOk returns a tuple with the IconUri field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetIconUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IconUri, true
}

// SetIconUri sets field value
func (o *TerraformResponse) SetIconUri(v string) {
	o.IconUri = v
}

// GetServiceType returns the ServiceType field value
func (o *TerraformResponse) GetServiceType() ServiceTypeEnum {
	if o == nil {
		var ret ServiceTypeEnum
		return ret
	}

	return o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetServiceTypeOk() (*ServiceTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceType, true
}

// SetServiceType sets field value
func (o *TerraformResponse) SetServiceType(v ServiceTypeEnum) {
	o.ServiceType = v
}

// GetTerraformVariablesSource returns the TerraformVariablesSource field value
func (o *TerraformResponse) GetTerraformVariablesSource() TerraformVariablesSourceResponse {
	if o == nil {
		var ret TerraformVariablesSourceResponse
		return ret
	}

	return o.TerraformVariablesSource
}

// GetTerraformVariablesSourceOk returns a tuple with the TerraformVariablesSource field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetTerraformVariablesSourceOk() (*TerraformVariablesSourceResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerraformVariablesSource, true
}

// SetTerraformVariablesSource sets field value
func (o *TerraformResponse) SetTerraformVariablesSource(v TerraformVariablesSourceResponse) {
	o.TerraformVariablesSource = v
}

// GetProvider returns the Provider field value
func (o *TerraformResponse) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *TerraformResponse) SetProvider(v string) {
	o.Provider = v
}

// GetProviderVersion returns the ProviderVersion field value
func (o *TerraformResponse) GetProviderVersion() TerraformProviderVersion {
	if o == nil {
		var ret TerraformProviderVersion
		return ret
	}

	return o.ProviderVersion
}

// GetProviderVersionOk returns a tuple with the ProviderVersion field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetProviderVersionOk() (*TerraformProviderVersion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderVersion, true
}

// SetProviderVersion sets field value
func (o *TerraformResponse) SetProviderVersion(v TerraformProviderVersion) {
	o.ProviderVersion = v
}

// GetJobResources returns the JobResources field value
func (o *TerraformResponse) GetJobResources() TerraformJobResourcesResponse {
	if o == nil {
		var ret TerraformJobResourcesResponse
		return ret
	}

	return o.JobResources
}

// GetJobResourcesOk returns a tuple with the JobResources field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetJobResourcesOk() (*TerraformJobResourcesResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobResources, true
}

// SetJobResources sets field value
func (o *TerraformResponse) SetJobResources(v TerraformJobResourcesResponse) {
	o.JobResources = v
}

// GetEnvironment returns the Environment field value
func (o *TerraformResponse) GetEnvironment() ReferenceObject {
	if o == nil {
		var ret ReferenceObject
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *TerraformResponse) GetEnvironmentOk() (*ReferenceObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *TerraformResponse) SetEnvironment(v ReferenceObject) {
	o.Environment = v
}

func (o TerraformResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TerraformResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["timeout_sec"] = o.TimeoutSec
	toSerialize["auto_approve"] = o.AutoApprove
	toSerialize["auto_deploy"] = o.AutoDeploy
	if o.TerraformFilesSource != nil {
		toSerialize["terraform_files_source"] = o.TerraformFilesSource
	}
	toSerialize["icon_uri"] = o.IconUri
	toSerialize["service_type"] = o.ServiceType
	toSerialize["terraform_variables_source"] = o.TerraformVariablesSource
	toSerialize["provider"] = o.Provider
	toSerialize["provider_version"] = o.ProviderVersion
	toSerialize["job_resources"] = o.JobResources
	toSerialize["environment"] = o.Environment

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TerraformResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"name",
		"timeout_sec",
		"auto_approve",
		"auto_deploy",
		"icon_uri",
		"service_type",
		"terraform_variables_source",
		"provider",
		"provider_version",
		"job_resources",
		"environment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTerraformResponse := _TerraformResponse{}

	err = json.Unmarshal(data, &varTerraformResponse)

	if err != nil {
		return err
	}

	*o = TerraformResponse(varTerraformResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "timeout_sec")
		delete(additionalProperties, "auto_approve")
		delete(additionalProperties, "auto_deploy")
		delete(additionalProperties, "terraform_files_source")
		delete(additionalProperties, "icon_uri")
		delete(additionalProperties, "service_type")
		delete(additionalProperties, "terraform_variables_source")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "provider_version")
		delete(additionalProperties, "job_resources")
		delete(additionalProperties, "environment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTerraformResponse struct {
	value *TerraformResponse
	isSet bool
}

func (v NullableTerraformResponse) Get() *TerraformResponse {
	return v.value
}

func (v *NullableTerraformResponse) Set(val *TerraformResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTerraformResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTerraformResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerraformResponse(val *TerraformResponse) *NullableTerraformResponse {
	return &NullableTerraformResponse{value: val, isSet: true}
}

func (v NullableTerraformResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerraformResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
