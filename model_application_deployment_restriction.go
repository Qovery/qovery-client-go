/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ApplicationDeploymentRestriction struct for ApplicationDeploymentRestriction
type ApplicationDeploymentRestriction struct {
	// Match mode will rebuild app only if specified items are updated. Exclude mode will not rebuild app if specified items are updated.
	Mode  string `json:"mode"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

// NewApplicationDeploymentRestriction instantiates a new ApplicationDeploymentRestriction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationDeploymentRestriction(mode string, type_ string, value string) *ApplicationDeploymentRestriction {
	this := ApplicationDeploymentRestriction{}
	this.Mode = mode
	this.Type = type_
	this.Value = value
	return &this
}

// NewApplicationDeploymentRestrictionWithDefaults instantiates a new ApplicationDeploymentRestriction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationDeploymentRestrictionWithDefaults() *ApplicationDeploymentRestriction {
	this := ApplicationDeploymentRestriction{}
	return &this
}

// GetMode returns the Mode field value
func (o *ApplicationDeploymentRestriction) GetMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *ApplicationDeploymentRestriction) GetModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *ApplicationDeploymentRestriction) SetMode(v string) {
	o.Mode = v
}

// GetType returns the Type field value
func (o *ApplicationDeploymentRestriction) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApplicationDeploymentRestriction) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApplicationDeploymentRestriction) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *ApplicationDeploymentRestriction) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ApplicationDeploymentRestriction) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ApplicationDeploymentRestriction) SetValue(v string) {
	o.Value = v
}

func (o ApplicationDeploymentRestriction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mode"] = o.Mode
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationDeploymentRestriction struct {
	value *ApplicationDeploymentRestriction
	isSet bool
}

func (v NullableApplicationDeploymentRestriction) Get() *ApplicationDeploymentRestriction {
	return v.value
}

func (v *NullableApplicationDeploymentRestriction) Set(val *ApplicationDeploymentRestriction) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationDeploymentRestriction) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationDeploymentRestriction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationDeploymentRestriction(val *ApplicationDeploymentRestriction) *NullableApplicationDeploymentRestriction {
	return &NullableApplicationDeploymentRestriction{value: val, isSet: true}
}

func (v NullableApplicationDeploymentRestriction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationDeploymentRestriction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
