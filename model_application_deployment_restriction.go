/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ApplicationDeploymentRestriction struct for ApplicationDeploymentRestriction
type ApplicationDeploymentRestriction struct {
	DeploymentRestrictions []Object `json:"deployment_restrictions,omitempty"`
}

// NewApplicationDeploymentRestriction instantiates a new ApplicationDeploymentRestriction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationDeploymentRestriction() *ApplicationDeploymentRestriction {
	this := ApplicationDeploymentRestriction{}
	return &this
}

// NewApplicationDeploymentRestrictionWithDefaults instantiates a new ApplicationDeploymentRestriction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationDeploymentRestrictionWithDefaults() *ApplicationDeploymentRestriction {
	this := ApplicationDeploymentRestriction{}
	return &this
}

// GetDeploymentRestrictions returns the DeploymentRestrictions field value if set, zero value otherwise.
func (o *ApplicationDeploymentRestriction) GetDeploymentRestrictions() []Object {
	if o == nil || o.DeploymentRestrictions == nil {
		var ret []Object
		return ret
	}
	return o.DeploymentRestrictions
}

// GetDeploymentRestrictionsOk returns a tuple with the DeploymentRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDeploymentRestriction) GetDeploymentRestrictionsOk() ([]Object, bool) {
	if o == nil || o.DeploymentRestrictions == nil {
		return nil, false
	}
	return o.DeploymentRestrictions, true
}

// HasDeploymentRestrictions returns a boolean if a field has been set.
func (o *ApplicationDeploymentRestriction) HasDeploymentRestrictions() bool {
	if o != nil && o.DeploymentRestrictions != nil {
		return true
	}

	return false
}

// SetDeploymentRestrictions gets a reference to the given []Object and assigns it to the DeploymentRestrictions field.
func (o *ApplicationDeploymentRestriction) SetDeploymentRestrictions(v []Object) {
	o.DeploymentRestrictions = v
}

func (o ApplicationDeploymentRestriction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentRestrictions != nil {
		toSerialize["deployment_restrictions"] = o.DeploymentRestrictions
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationDeploymentRestriction struct {
	value *ApplicationDeploymentRestriction
	isSet bool
}

func (v NullableApplicationDeploymentRestriction) Get() *ApplicationDeploymentRestriction {
	return v.value
}

func (v *NullableApplicationDeploymentRestriction) Set(val *ApplicationDeploymentRestriction) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationDeploymentRestriction) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationDeploymentRestriction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationDeploymentRestriction(val *ApplicationDeploymentRestriction) *NullableApplicationDeploymentRestriction {
	return &NullableApplicationDeploymentRestriction{value: val, isSet: true}
}

func (v NullableApplicationDeploymentRestriction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationDeploymentRestriction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
