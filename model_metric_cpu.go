/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the MetricCPU type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricCPU{}

// MetricCPU struct for MetricCPU
type MetricCPU struct {
	InstanceName string               `json:"instance_name"`
	Data         []MetricCPUDatapoint `json:"data"`
}

// NewMetricCPU instantiates a new MetricCPU object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricCPU(instanceName string, data []MetricCPUDatapoint) *MetricCPU {
	this := MetricCPU{}
	this.InstanceName = instanceName
	this.Data = data
	return &this
}

// NewMetricCPUWithDefaults instantiates a new MetricCPU object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricCPUWithDefaults() *MetricCPU {
	this := MetricCPU{}
	return &this
}

// GetInstanceName returns the InstanceName field value
func (o *MetricCPU) GetInstanceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceName
}

// GetInstanceNameOk returns a tuple with the InstanceName field value
// and a boolean to check if the value has been set.
func (o *MetricCPU) GetInstanceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceName, true
}

// SetInstanceName sets field value
func (o *MetricCPU) SetInstanceName(v string) {
	o.InstanceName = v
}

// GetData returns the Data field value
func (o *MetricCPU) GetData() []MetricCPUDatapoint {
	if o == nil {
		var ret []MetricCPUDatapoint
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *MetricCPU) GetDataOk() ([]MetricCPUDatapoint, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *MetricCPU) SetData(v []MetricCPUDatapoint) {
	o.Data = v
}

func (o MetricCPU) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricCPU) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["instance_name"] = o.InstanceName
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableMetricCPU struct {
	value *MetricCPU
	isSet bool
}

func (v NullableMetricCPU) Get() *MetricCPU {
	return v.value
}

func (v *NullableMetricCPU) Set(val *MetricCPU) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricCPU) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricCPU) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricCPU(val *MetricCPU) *NullableMetricCPU {
	return &NullableMetricCPU{value: val, isSet: true}
}

func (v NullableMetricCPU) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricCPU) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
