/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
	"reflect"
	"strings"
)

// checks if the SlackAlertReceiverEditRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlackAlertReceiverEditRequest{}

// SlackAlertReceiverEditRequest struct for SlackAlertReceiverEditRequest
type SlackAlertReceiverEditRequest struct {
	AlertReceiverEditRequest
	WebhookUrl           NullableString `json:"webhook_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SlackAlertReceiverEditRequest SlackAlertReceiverEditRequest

// NewSlackAlertReceiverEditRequest instantiates a new SlackAlertReceiverEditRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlackAlertReceiverEditRequest(name string, description string, type_ AlertReceiverType, sendResolved bool) *SlackAlertReceiverEditRequest {
	this := SlackAlertReceiverEditRequest{}
	this.Name = name
	this.Description = description
	this.Type = type_
	this.SendResolved = sendResolved
	return &this
}

// NewSlackAlertReceiverEditRequestWithDefaults instantiates a new SlackAlertReceiverEditRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlackAlertReceiverEditRequestWithDefaults() *SlackAlertReceiverEditRequest {
	this := SlackAlertReceiverEditRequest{}
	return &this
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackAlertReceiverEditRequest) GetWebhookUrl() string {
	if o == nil || IsNil(o.WebhookUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebhookUrl.Get()
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackAlertReceiverEditRequest) GetWebhookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebhookUrl.Get(), o.WebhookUrl.IsSet()
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *SlackAlertReceiverEditRequest) HasWebhookUrl() bool {
	if o != nil && o.WebhookUrl.IsSet() {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given NullableString and assigns it to the WebhookUrl field.
func (o *SlackAlertReceiverEditRequest) SetWebhookUrl(v string) {
	o.WebhookUrl.Set(&v)
}

// SetWebhookUrlNil sets the value for WebhookUrl to be an explicit nil
func (o *SlackAlertReceiverEditRequest) SetWebhookUrlNil() {
	o.WebhookUrl.Set(nil)
}

// UnsetWebhookUrl ensures that no value is present for WebhookUrl, not even an explicit nil
func (o *SlackAlertReceiverEditRequest) UnsetWebhookUrl() {
	o.WebhookUrl.Unset()
}

func (o SlackAlertReceiverEditRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlackAlertReceiverEditRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedAlertReceiverEditRequest, errAlertReceiverEditRequest := json.Marshal(o.AlertReceiverEditRequest)
	if errAlertReceiverEditRequest != nil {
		return map[string]interface{}{}, errAlertReceiverEditRequest
	}
	errAlertReceiverEditRequest = json.Unmarshal([]byte(serializedAlertReceiverEditRequest), &toSerialize)
	if errAlertReceiverEditRequest != nil {
		return map[string]interface{}{}, errAlertReceiverEditRequest
	}
	if o.WebhookUrl.IsSet() {
		toSerialize["webhook_url"] = o.WebhookUrl.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SlackAlertReceiverEditRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"description",
		"type",
		"send_resolved",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	type SlackAlertReceiverEditRequestWithoutEmbeddedStruct struct {
		WebhookUrl NullableString `json:"webhook_url,omitempty"`
	}

	varSlackAlertReceiverEditRequestWithoutEmbeddedStruct := SlackAlertReceiverEditRequestWithoutEmbeddedStruct{}

	err = json.Unmarshal(data, &varSlackAlertReceiverEditRequestWithoutEmbeddedStruct)
	if err == nil {
		varSlackAlertReceiverEditRequest := _SlackAlertReceiverEditRequest{}
		varSlackAlertReceiverEditRequest.WebhookUrl = varSlackAlertReceiverEditRequestWithoutEmbeddedStruct.WebhookUrl
		*o = SlackAlertReceiverEditRequest(varSlackAlertReceiverEditRequest)
	} else {
		return err
	}

	varSlackAlertReceiverEditRequest := _SlackAlertReceiverEditRequest{}

	err = json.Unmarshal(data, &varSlackAlertReceiverEditRequest)
	if err == nil {
		o.AlertReceiverEditRequest = varSlackAlertReceiverEditRequest.AlertReceiverEditRequest
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_url")

		// remove fields from embedded structs
		reflectAlertReceiverEditRequest := reflect.ValueOf(o.AlertReceiverEditRequest)
		for i := 0; i < reflectAlertReceiverEditRequest.Type().NumField(); i++ {
			t := reflectAlertReceiverEditRequest.Type().Field(i)

			if jsonTag := t.Tag.Get("json"); jsonTag != "" {
				fieldName := ""
				if commaIdx := strings.Index(jsonTag, ","); commaIdx > 0 {
					fieldName = jsonTag[:commaIdx]
				} else {
					fieldName = jsonTag
				}
				if fieldName != "AdditionalProperties" {
					delete(additionalProperties, fieldName)
				}
			}
		}

		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSlackAlertReceiverEditRequest struct {
	value *SlackAlertReceiverEditRequest
	isSet bool
}

func (v NullableSlackAlertReceiverEditRequest) Get() *SlackAlertReceiverEditRequest {
	return v.value
}

func (v *NullableSlackAlertReceiverEditRequest) Set(val *SlackAlertReceiverEditRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSlackAlertReceiverEditRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSlackAlertReceiverEditRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlackAlertReceiverEditRequest(val *SlackAlertReceiverEditRequest) *NullableSlackAlertReceiverEditRequest {
	return &NullableSlackAlertReceiverEditRequest{value: val, isSet: true}
}

func (v NullableSlackAlertReceiverEditRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlackAlertReceiverEditRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
