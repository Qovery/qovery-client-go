/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the DeployAllRequestContainersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployAllRequestContainersInner{}

// DeployAllRequestContainersInner struct for DeployAllRequestContainersInner
type DeployAllRequestContainersInner struct {
	// id of the container to be updated.
	Id string `json:"id"`
	// new tag for the container. Can be empty only if the service has been already deployed (in this case the service version won't be changed)
	ImageTag             *string `json:"image_tag,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DeployAllRequestContainersInner DeployAllRequestContainersInner

// NewDeployAllRequestContainersInner instantiates a new DeployAllRequestContainersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployAllRequestContainersInner(id string) *DeployAllRequestContainersInner {
	this := DeployAllRequestContainersInner{}
	this.Id = id
	return &this
}

// NewDeployAllRequestContainersInnerWithDefaults instantiates a new DeployAllRequestContainersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployAllRequestContainersInnerWithDefaults() *DeployAllRequestContainersInner {
	this := DeployAllRequestContainersInner{}
	return &this
}

// GetId returns the Id field value
func (o *DeployAllRequestContainersInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeployAllRequestContainersInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeployAllRequestContainersInner) SetId(v string) {
	o.Id = v
}

// GetImageTag returns the ImageTag field value if set, zero value otherwise.
func (o *DeployAllRequestContainersInner) GetImageTag() string {
	if o == nil || IsNil(o.ImageTag) {
		var ret string
		return ret
	}
	return *o.ImageTag
}

// GetImageTagOk returns a tuple with the ImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployAllRequestContainersInner) GetImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ImageTag) {
		return nil, false
	}
	return o.ImageTag, true
}

// HasImageTag returns a boolean if a field has been set.
func (o *DeployAllRequestContainersInner) HasImageTag() bool {
	if o != nil && !IsNil(o.ImageTag) {
		return true
	}

	return false
}

// SetImageTag gets a reference to the given string and assigns it to the ImageTag field.
func (o *DeployAllRequestContainersInner) SetImageTag(v string) {
	o.ImageTag = &v
}

func (o DeployAllRequestContainersInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployAllRequestContainersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.ImageTag) {
		toSerialize["image_tag"] = o.ImageTag
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DeployAllRequestContainersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeployAllRequestContainersInner := _DeployAllRequestContainersInner{}

	err = json.Unmarshal(data, &varDeployAllRequestContainersInner)

	if err != nil {
		return err
	}

	*o = DeployAllRequestContainersInner(varDeployAllRequestContainersInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "image_tag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeployAllRequestContainersInner struct {
	value *DeployAllRequestContainersInner
	isSet bool
}

func (v NullableDeployAllRequestContainersInner) Get() *DeployAllRequestContainersInner {
	return v.value
}

func (v *NullableDeployAllRequestContainersInner) Set(val *DeployAllRequestContainersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployAllRequestContainersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployAllRequestContainersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployAllRequestContainersInner(val *DeployAllRequestContainersInner) *NullableDeployAllRequestContainersInner {
	return &NullableDeployAllRequestContainersInner{value: val, isSet: true}
}

func (v NullableDeployAllRequestContainersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployAllRequestContainersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
