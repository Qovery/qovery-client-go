/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// OrganizationCustomRole struct for OrganizationCustomRole
type OrganizationCustomRole struct {
	Name               *string                                         `json:"name,omitempty"`
	Description        *string                                         `json:"description,omitempty"`
	ClusterPermissions []OrganizationCustomRoleClusterPermissionsInner `json:"cluster_permissions,omitempty"`
	ProjectPermissions []OrganizationCustomRoleProjectPermissionsInner `json:"project_permissions,omitempty"`
}

// NewOrganizationCustomRole instantiates a new OrganizationCustomRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationCustomRole() *OrganizationCustomRole {
	this := OrganizationCustomRole{}
	return &this
}

// NewOrganizationCustomRoleWithDefaults instantiates a new OrganizationCustomRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationCustomRoleWithDefaults() *OrganizationCustomRole {
	this := OrganizationCustomRole{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationCustomRole) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRole) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationCustomRole) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationCustomRole) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrganizationCustomRole) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRole) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrganizationCustomRole) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrganizationCustomRole) SetDescription(v string) {
	o.Description = &v
}

// GetClusterPermissions returns the ClusterPermissions field value if set, zero value otherwise.
func (o *OrganizationCustomRole) GetClusterPermissions() []OrganizationCustomRoleClusterPermissionsInner {
	if o == nil || o.ClusterPermissions == nil {
		var ret []OrganizationCustomRoleClusterPermissionsInner
		return ret
	}
	return o.ClusterPermissions
}

// GetClusterPermissionsOk returns a tuple with the ClusterPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRole) GetClusterPermissionsOk() ([]OrganizationCustomRoleClusterPermissionsInner, bool) {
	if o == nil || o.ClusterPermissions == nil {
		return nil, false
	}
	return o.ClusterPermissions, true
}

// HasClusterPermissions returns a boolean if a field has been set.
func (o *OrganizationCustomRole) HasClusterPermissions() bool {
	if o != nil && o.ClusterPermissions != nil {
		return true
	}

	return false
}

// SetClusterPermissions gets a reference to the given []OrganizationCustomRoleClusterPermissionsInner and assigns it to the ClusterPermissions field.
func (o *OrganizationCustomRole) SetClusterPermissions(v []OrganizationCustomRoleClusterPermissionsInner) {
	o.ClusterPermissions = v
}

// GetProjectPermissions returns the ProjectPermissions field value if set, zero value otherwise.
func (o *OrganizationCustomRole) GetProjectPermissions() []OrganizationCustomRoleProjectPermissionsInner {
	if o == nil || o.ProjectPermissions == nil {
		var ret []OrganizationCustomRoleProjectPermissionsInner
		return ret
	}
	return o.ProjectPermissions
}

// GetProjectPermissionsOk returns a tuple with the ProjectPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRole) GetProjectPermissionsOk() ([]OrganizationCustomRoleProjectPermissionsInner, bool) {
	if o == nil || o.ProjectPermissions == nil {
		return nil, false
	}
	return o.ProjectPermissions, true
}

// HasProjectPermissions returns a boolean if a field has been set.
func (o *OrganizationCustomRole) HasProjectPermissions() bool {
	if o != nil && o.ProjectPermissions != nil {
		return true
	}

	return false
}

// SetProjectPermissions gets a reference to the given []OrganizationCustomRoleProjectPermissionsInner and assigns it to the ProjectPermissions field.
func (o *OrganizationCustomRole) SetProjectPermissions(v []OrganizationCustomRoleProjectPermissionsInner) {
	o.ProjectPermissions = v
}

func (o OrganizationCustomRole) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ClusterPermissions != nil {
		toSerialize["cluster_permissions"] = o.ClusterPermissions
	}
	if o.ProjectPermissions != nil {
		toSerialize["project_permissions"] = o.ProjectPermissions
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationCustomRole struct {
	value *OrganizationCustomRole
	isSet bool
}

func (v NullableOrganizationCustomRole) Get() *OrganizationCustomRole {
	return v.value
}

func (v *NullableOrganizationCustomRole) Set(val *OrganizationCustomRole) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationCustomRole) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationCustomRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationCustomRole(val *OrganizationCustomRole) *NullableOrganizationCustomRole {
	return &NullableOrganizationCustomRole{value: val, isSet: true}
}

func (v NullableOrganizationCustomRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationCustomRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
