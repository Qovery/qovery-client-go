/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the OrganizationCustomRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationCustomRole{}

// OrganizationCustomRole struct for OrganizationCustomRole
type OrganizationCustomRole struct {
	Id                   *string                                         `json:"id,omitempty"`
	Name                 *string                                         `json:"name,omitempty"`
	Description          *string                                         `json:"description,omitempty"`
	ClusterPermissions   []OrganizationCustomRoleClusterPermissionsInner `json:"cluster_permissions,omitempty"`
	ProjectPermissions   []OrganizationCustomRoleProjectPermissionsInner `json:"project_permissions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationCustomRole OrganizationCustomRole

// NewOrganizationCustomRole instantiates a new OrganizationCustomRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationCustomRole() *OrganizationCustomRole {
	this := OrganizationCustomRole{}
	return &this
}

// NewOrganizationCustomRoleWithDefaults instantiates a new OrganizationCustomRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationCustomRoleWithDefaults() *OrganizationCustomRole {
	this := OrganizationCustomRole{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganizationCustomRole) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRole) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganizationCustomRole) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganizationCustomRole) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationCustomRole) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRole) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationCustomRole) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationCustomRole) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrganizationCustomRole) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRole) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrganizationCustomRole) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrganizationCustomRole) SetDescription(v string) {
	o.Description = &v
}

// GetClusterPermissions returns the ClusterPermissions field value if set, zero value otherwise.
func (o *OrganizationCustomRole) GetClusterPermissions() []OrganizationCustomRoleClusterPermissionsInner {
	if o == nil || IsNil(o.ClusterPermissions) {
		var ret []OrganizationCustomRoleClusterPermissionsInner
		return ret
	}
	return o.ClusterPermissions
}

// GetClusterPermissionsOk returns a tuple with the ClusterPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRole) GetClusterPermissionsOk() ([]OrganizationCustomRoleClusterPermissionsInner, bool) {
	if o == nil || IsNil(o.ClusterPermissions) {
		return nil, false
	}
	return o.ClusterPermissions, true
}

// HasClusterPermissions returns a boolean if a field has been set.
func (o *OrganizationCustomRole) HasClusterPermissions() bool {
	if o != nil && !IsNil(o.ClusterPermissions) {
		return true
	}

	return false
}

// SetClusterPermissions gets a reference to the given []OrganizationCustomRoleClusterPermissionsInner and assigns it to the ClusterPermissions field.
func (o *OrganizationCustomRole) SetClusterPermissions(v []OrganizationCustomRoleClusterPermissionsInner) {
	o.ClusterPermissions = v
}

// GetProjectPermissions returns the ProjectPermissions field value if set, zero value otherwise.
func (o *OrganizationCustomRole) GetProjectPermissions() []OrganizationCustomRoleProjectPermissionsInner {
	if o == nil || IsNil(o.ProjectPermissions) {
		var ret []OrganizationCustomRoleProjectPermissionsInner
		return ret
	}
	return o.ProjectPermissions
}

// GetProjectPermissionsOk returns a tuple with the ProjectPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRole) GetProjectPermissionsOk() ([]OrganizationCustomRoleProjectPermissionsInner, bool) {
	if o == nil || IsNil(o.ProjectPermissions) {
		return nil, false
	}
	return o.ProjectPermissions, true
}

// HasProjectPermissions returns a boolean if a field has been set.
func (o *OrganizationCustomRole) HasProjectPermissions() bool {
	if o != nil && !IsNil(o.ProjectPermissions) {
		return true
	}

	return false
}

// SetProjectPermissions gets a reference to the given []OrganizationCustomRoleProjectPermissionsInner and assigns it to the ProjectPermissions field.
func (o *OrganizationCustomRole) SetProjectPermissions(v []OrganizationCustomRoleProjectPermissionsInner) {
	o.ProjectPermissions = v
}

func (o OrganizationCustomRole) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationCustomRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ClusterPermissions) {
		toSerialize["cluster_permissions"] = o.ClusterPermissions
	}
	if !IsNil(o.ProjectPermissions) {
		toSerialize["project_permissions"] = o.ProjectPermissions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationCustomRole) UnmarshalJSON(data []byte) (err error) {
	varOrganizationCustomRole := _OrganizationCustomRole{}

	err = json.Unmarshal(data, &varOrganizationCustomRole)

	if err != nil {
		return err
	}

	*o = OrganizationCustomRole(varOrganizationCustomRole)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "cluster_permissions")
		delete(additionalProperties, "project_permissions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationCustomRole struct {
	value *OrganizationCustomRole
	isSet bool
}

func (v NullableOrganizationCustomRole) Get() *OrganizationCustomRole {
	return v.value
}

func (v *NullableOrganizationCustomRole) Set(val *OrganizationCustomRole) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationCustomRole) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationCustomRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationCustomRole(val *OrganizationCustomRole) *NullableOrganizationCustomRole {
	return &NullableOrganizationCustomRole{value: val, isSet: true}
}

func (v NullableOrganizationCustomRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationCustomRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
