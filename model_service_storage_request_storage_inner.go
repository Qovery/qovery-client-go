/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the ServiceStorageRequestStorageInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceStorageRequestStorageInner{}

// ServiceStorageRequestStorageInner struct for ServiceStorageRequestStorageInner
type ServiceStorageRequestStorageInner struct {
	Id   *string         `json:"id,omitempty"`
	Type StorageTypeEnum `json:"type"`
	// unit is GB Minimum size is 4 GB
	Size                 int32  `json:"size"`
	MountPoint           string `json:"mount_point"`
	AdditionalProperties map[string]interface{}
}

type _ServiceStorageRequestStorageInner ServiceStorageRequestStorageInner

// NewServiceStorageRequestStorageInner instantiates a new ServiceStorageRequestStorageInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceStorageRequestStorageInner(type_ StorageTypeEnum, size int32, mountPoint string) *ServiceStorageRequestStorageInner {
	this := ServiceStorageRequestStorageInner{}
	this.Type = type_
	this.Size = size
	this.MountPoint = mountPoint
	return &this
}

// NewServiceStorageRequestStorageInnerWithDefaults instantiates a new ServiceStorageRequestStorageInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceStorageRequestStorageInnerWithDefaults() *ServiceStorageRequestStorageInner {
	this := ServiceStorageRequestStorageInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceStorageRequestStorageInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStorageRequestStorageInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceStorageRequestStorageInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceStorageRequestStorageInner) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value
func (o *ServiceStorageRequestStorageInner) GetType() StorageTypeEnum {
	if o == nil {
		var ret StorageTypeEnum
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ServiceStorageRequestStorageInner) GetTypeOk() (*StorageTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ServiceStorageRequestStorageInner) SetType(v StorageTypeEnum) {
	o.Type = v
}

// GetSize returns the Size field value
func (o *ServiceStorageRequestStorageInner) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ServiceStorageRequestStorageInner) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ServiceStorageRequestStorageInner) SetSize(v int32) {
	o.Size = v
}

// GetMountPoint returns the MountPoint field value
func (o *ServiceStorageRequestStorageInner) GetMountPoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MountPoint
}

// GetMountPointOk returns a tuple with the MountPoint field value
// and a boolean to check if the value has been set.
func (o *ServiceStorageRequestStorageInner) GetMountPointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MountPoint, true
}

// SetMountPoint sets field value
func (o *ServiceStorageRequestStorageInner) SetMountPoint(v string) {
	o.MountPoint = v
}

func (o ServiceStorageRequestStorageInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceStorageRequestStorageInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["type"] = o.Type
	toSerialize["size"] = o.Size
	toSerialize["mount_point"] = o.MountPoint

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServiceStorageRequestStorageInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"size",
		"mount_point",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceStorageRequestStorageInner := _ServiceStorageRequestStorageInner{}

	err = json.Unmarshal(data, &varServiceStorageRequestStorageInner)

	if err != nil {
		return err
	}

	*o = ServiceStorageRequestStorageInner(varServiceStorageRequestStorageInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "type")
		delete(additionalProperties, "size")
		delete(additionalProperties, "mount_point")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceStorageRequestStorageInner struct {
	value *ServiceStorageRequestStorageInner
	isSet bool
}

func (v NullableServiceStorageRequestStorageInner) Get() *ServiceStorageRequestStorageInner {
	return v.value
}

func (v *NullableServiceStorageRequestStorageInner) Set(val *ServiceStorageRequestStorageInner) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceStorageRequestStorageInner) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceStorageRequestStorageInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceStorageRequestStorageInner(val *ServiceStorageRequestStorageInner) *NullableServiceStorageRequestStorageInner {
	return &NullableServiceStorageRequestStorageInner{value: val, isSet: true}
}

func (v NullableServiceStorageRequestStorageInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceStorageRequestStorageInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
