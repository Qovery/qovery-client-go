/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ServiceStorageRequestStorageInner struct for ServiceStorageRequestStorageInner
type ServiceStorageRequestStorageInner struct {
	Type StorageTypeEnum `json:"type"`
	// unit is GB Minimum size is 4 GB
	Size       int32  `json:"size"`
	MountPoint string `json:"mount_point"`
}

// NewServiceStorageRequestStorageInner instantiates a new ServiceStorageRequestStorageInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceStorageRequestStorageInner(type_ StorageTypeEnum, size int32, mountPoint string) *ServiceStorageRequestStorageInner {
	this := ServiceStorageRequestStorageInner{}
	this.Type = type_
	this.Size = size
	this.MountPoint = mountPoint
	return &this
}

// NewServiceStorageRequestStorageInnerWithDefaults instantiates a new ServiceStorageRequestStorageInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceStorageRequestStorageInnerWithDefaults() *ServiceStorageRequestStorageInner {
	this := ServiceStorageRequestStorageInner{}
	return &this
}

// GetType returns the Type field value
func (o *ServiceStorageRequestStorageInner) GetType() StorageTypeEnum {
	if o == nil {
		var ret StorageTypeEnum
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ServiceStorageRequestStorageInner) GetTypeOk() (*StorageTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ServiceStorageRequestStorageInner) SetType(v StorageTypeEnum) {
	o.Type = v
}

// GetSize returns the Size field value
func (o *ServiceStorageRequestStorageInner) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ServiceStorageRequestStorageInner) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ServiceStorageRequestStorageInner) SetSize(v int32) {
	o.Size = v
}

// GetMountPoint returns the MountPoint field value
func (o *ServiceStorageRequestStorageInner) GetMountPoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MountPoint
}

// GetMountPointOk returns a tuple with the MountPoint field value
// and a boolean to check if the value has been set.
func (o *ServiceStorageRequestStorageInner) GetMountPointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MountPoint, true
}

// SetMountPoint sets field value
func (o *ServiceStorageRequestStorageInner) SetMountPoint(v string) {
	o.MountPoint = v
}

func (o ServiceStorageRequestStorageInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["mount_point"] = o.MountPoint
	}
	return json.Marshal(toSerialize)
}

type NullableServiceStorageRequestStorageInner struct {
	value *ServiceStorageRequestStorageInner
	isSet bool
}

func (v NullableServiceStorageRequestStorageInner) Get() *ServiceStorageRequestStorageInner {
	return v.value
}

func (v *NullableServiceStorageRequestStorageInner) Set(val *ServiceStorageRequestStorageInner) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceStorageRequestStorageInner) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceStorageRequestStorageInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceStorageRequestStorageInner(val *ServiceStorageRequestStorageInner) *NullableServiceStorageRequestStorageInner {
	return &NullableServiceStorageRequestStorageInner{value: val, isSet: true}
}

func (v NullableServiceStorageRequestStorageInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceStorageRequestStorageInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
