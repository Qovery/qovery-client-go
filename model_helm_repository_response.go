/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// checks if the HelmRepositoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelmRepositoryResponse{}

// HelmRepositoryResponse struct for HelmRepositoryResponse
type HelmRepositoryResponse struct {
	Id          string                  `json:"id"`
	CreatedAt   time.Time               `json:"created_at"`
	UpdatedAt   *time.Time              `json:"updated_at,omitempty"`
	Name        *string                 `json:"name,omitempty"`
	Kind        *HelmRepositoryKindEnum `json:"kind,omitempty"`
	Description *string                 `json:"description,omitempty"`
	// URL of the helm repository
	Url *string `json:"url,omitempty"`
	// Bypass tls certificate verification when connecting to repository
	SkipTlsVerification *bool `json:"skip_tls_verification,omitempty"`
}

// NewHelmRepositoryResponse instantiates a new HelmRepositoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmRepositoryResponse(id string, createdAt time.Time) *HelmRepositoryResponse {
	this := HelmRepositoryResponse{}
	this.Id = id
	this.CreatedAt = createdAt
	return &this
}

// NewHelmRepositoryResponseWithDefaults instantiates a new HelmRepositoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmRepositoryResponseWithDefaults() *HelmRepositoryResponse {
	this := HelmRepositoryResponse{}
	return &this
}

// GetId returns the Id field value
func (o *HelmRepositoryResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *HelmRepositoryResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *HelmRepositoryResponse) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *HelmRepositoryResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *HelmRepositoryResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *HelmRepositoryResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *HelmRepositoryResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *HelmRepositoryResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *HelmRepositoryResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HelmRepositoryResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HelmRepositoryResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HelmRepositoryResponse) SetName(v string) {
	o.Name = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *HelmRepositoryResponse) GetKind() HelmRepositoryKindEnum {
	if o == nil || IsNil(o.Kind) {
		var ret HelmRepositoryKindEnum
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryResponse) GetKindOk() (*HelmRepositoryKindEnum, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *HelmRepositoryResponse) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given HelmRepositoryKindEnum and assigns it to the Kind field.
func (o *HelmRepositoryResponse) SetKind(v HelmRepositoryKindEnum) {
	o.Kind = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HelmRepositoryResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HelmRepositoryResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HelmRepositoryResponse) SetDescription(v string) {
	o.Description = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *HelmRepositoryResponse) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryResponse) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *HelmRepositoryResponse) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *HelmRepositoryResponse) SetUrl(v string) {
	o.Url = &v
}

// GetSkipTlsVerification returns the SkipTlsVerification field value if set, zero value otherwise.
func (o *HelmRepositoryResponse) GetSkipTlsVerification() bool {
	if o == nil || IsNil(o.SkipTlsVerification) {
		var ret bool
		return ret
	}
	return *o.SkipTlsVerification
}

// GetSkipTlsVerificationOk returns a tuple with the SkipTlsVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryResponse) GetSkipTlsVerificationOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipTlsVerification) {
		return nil, false
	}
	return o.SkipTlsVerification, true
}

// HasSkipTlsVerification returns a boolean if a field has been set.
func (o *HelmRepositoryResponse) HasSkipTlsVerification() bool {
	if o != nil && !IsNil(o.SkipTlsVerification) {
		return true
	}

	return false
}

// SetSkipTlsVerification gets a reference to the given bool and assigns it to the SkipTlsVerification field.
func (o *HelmRepositoryResponse) SetSkipTlsVerification(v bool) {
	o.SkipTlsVerification = &v
}

func (o HelmRepositoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelmRepositoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.SkipTlsVerification) {
		toSerialize["skip_tls_verification"] = o.SkipTlsVerification
	}
	return toSerialize, nil
}

type NullableHelmRepositoryResponse struct {
	value *HelmRepositoryResponse
	isSet bool
}

func (v NullableHelmRepositoryResponse) Get() *HelmRepositoryResponse {
	return v.value
}

func (v *NullableHelmRepositoryResponse) Set(val *HelmRepositoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmRepositoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmRepositoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmRepositoryResponse(val *HelmRepositoryResponse) *NullableHelmRepositoryResponse {
	return &NullableHelmRepositoryResponse{value: val, isSet: true}
}

func (v NullableHelmRepositoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmRepositoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
