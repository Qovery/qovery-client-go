/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// CloneApplicationRequest struct for CloneApplicationRequest
type CloneApplicationRequest struct {
	Name          string `json:"name"`
	EnvironmentId string `json:"environment_id"`
}

// NewCloneApplicationRequest instantiates a new CloneApplicationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneApplicationRequest(name string, environmentId string) *CloneApplicationRequest {
	this := CloneApplicationRequest{}
	this.Name = name
	this.EnvironmentId = environmentId
	return &this
}

// NewCloneApplicationRequestWithDefaults instantiates a new CloneApplicationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneApplicationRequestWithDefaults() *CloneApplicationRequest {
	this := CloneApplicationRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CloneApplicationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CloneApplicationRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CloneApplicationRequest) SetName(v string) {
	o.Name = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *CloneApplicationRequest) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *CloneApplicationRequest) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *CloneApplicationRequest) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

func (o CloneApplicationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	return json.Marshal(toSerialize)
}

type NullableCloneApplicationRequest struct {
	value *CloneApplicationRequest
	isSet bool
}

func (v NullableCloneApplicationRequest) Get() *CloneApplicationRequest {
	return v.value
}

func (v *NullableCloneApplicationRequest) Set(val *CloneApplicationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneApplicationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneApplicationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneApplicationRequest(val *CloneApplicationRequest) *NullableCloneApplicationRequest {
	return &NullableCloneApplicationRequest{value: val, isSet: true}
}

func (v NullableCloneApplicationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneApplicationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
