/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the MetricGeneric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricGeneric{}

// MetricGeneric struct for MetricGeneric
type MetricGeneric struct {
	InstanceName string                   `json:"instance_name"`
	Data         []MetricGenericDatapoint `json:"data"`
}

// NewMetricGeneric instantiates a new MetricGeneric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricGeneric(instanceName string, data []MetricGenericDatapoint) *MetricGeneric {
	this := MetricGeneric{}
	this.InstanceName = instanceName
	this.Data = data
	return &this
}

// NewMetricGenericWithDefaults instantiates a new MetricGeneric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricGenericWithDefaults() *MetricGeneric {
	this := MetricGeneric{}
	return &this
}

// GetInstanceName returns the InstanceName field value
func (o *MetricGeneric) GetInstanceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceName
}

// GetInstanceNameOk returns a tuple with the InstanceName field value
// and a boolean to check if the value has been set.
func (o *MetricGeneric) GetInstanceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceName, true
}

// SetInstanceName sets field value
func (o *MetricGeneric) SetInstanceName(v string) {
	o.InstanceName = v
}

// GetData returns the Data field value
func (o *MetricGeneric) GetData() []MetricGenericDatapoint {
	if o == nil {
		var ret []MetricGenericDatapoint
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *MetricGeneric) GetDataOk() ([]MetricGenericDatapoint, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *MetricGeneric) SetData(v []MetricGenericDatapoint) {
	o.Data = v
}

func (o MetricGeneric) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricGeneric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["instance_name"] = o.InstanceName
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableMetricGeneric struct {
	value *MetricGeneric
	isSet bool
}

func (v NullableMetricGeneric) Get() *MetricGeneric {
	return v.value
}

func (v *NullableMetricGeneric) Set(val *MetricGeneric) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricGeneric) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricGeneric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricGeneric(val *MetricGeneric) *NullableMetricGeneric {
	return &NullableMetricGeneric{value: val, isSet: true}
}

func (v NullableMetricGeneric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricGeneric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
