/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ClusterRequestFeatures struct for ClusterRequestFeatures
type ClusterRequestFeatures struct {
	Features []ClusterRequestFeaturesFeaturesInner `json:"features,omitempty"`
}

// NewClusterRequestFeatures instantiates a new ClusterRequestFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterRequestFeatures() *ClusterRequestFeatures {
	this := ClusterRequestFeatures{}
	return &this
}

// NewClusterRequestFeaturesWithDefaults instantiates a new ClusterRequestFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterRequestFeaturesWithDefaults() *ClusterRequestFeatures {
	this := ClusterRequestFeatures{}
	return &this
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *ClusterRequestFeatures) GetFeatures() []ClusterRequestFeaturesFeaturesInner {
	if o == nil || o.Features == nil {
		var ret []ClusterRequestFeaturesFeaturesInner
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterRequestFeatures) GetFeaturesOk() ([]ClusterRequestFeaturesFeaturesInner, bool) {
	if o == nil || o.Features == nil {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *ClusterRequestFeatures) HasFeatures() bool {
	if o != nil && o.Features != nil {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []ClusterRequestFeaturesFeaturesInner and assigns it to the Features field.
func (o *ClusterRequestFeatures) SetFeatures(v []ClusterRequestFeaturesFeaturesInner) {
	o.Features = v
}

func (o ClusterRequestFeatures) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	return json.Marshal(toSerialize)
}

type NullableClusterRequestFeatures struct {
	value *ClusterRequestFeatures
	isSet bool
}

func (v NullableClusterRequestFeatures) Get() *ClusterRequestFeatures {
	return v.value
}

func (v *NullableClusterRequestFeatures) Set(val *ClusterRequestFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterRequestFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterRequestFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterRequestFeatures(val *ClusterRequestFeatures) *NullableClusterRequestFeatures {
	return &NullableClusterRequestFeatures{value: val, isSet: true}
}

func (v NullableClusterRequestFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterRequestFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
