/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// ContainerRegistryAssociatedServiceType the model 'ContainerRegistryAssociatedServiceType'
type ContainerRegistryAssociatedServiceType string

// List of ContainerRegistryAssociatedServiceType
const (
	CONTAINERREGISTRYASSOCIATEDSERVICETYPE_CONTAINER ContainerRegistryAssociatedServiceType = "CONTAINER"
	CONTAINERREGISTRYASSOCIATEDSERVICETYPE_JOB       ContainerRegistryAssociatedServiceType = "JOB"
)

// All allowed values of ContainerRegistryAssociatedServiceType enum
var AllowedContainerRegistryAssociatedServiceTypeEnumValues = []ContainerRegistryAssociatedServiceType{
	"CONTAINER",
	"JOB",
}

func (v *ContainerRegistryAssociatedServiceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ContainerRegistryAssociatedServiceType(value)
	for _, existing := range AllowedContainerRegistryAssociatedServiceTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ContainerRegistryAssociatedServiceType", value)
}

// NewContainerRegistryAssociatedServiceTypeFromValue returns a pointer to a valid ContainerRegistryAssociatedServiceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewContainerRegistryAssociatedServiceTypeFromValue(v string) (*ContainerRegistryAssociatedServiceType, error) {
	ev := ContainerRegistryAssociatedServiceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ContainerRegistryAssociatedServiceType: valid values are %v", v, AllowedContainerRegistryAssociatedServiceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ContainerRegistryAssociatedServiceType) IsValid() bool {
	for _, existing := range AllowedContainerRegistryAssociatedServiceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ContainerRegistryAssociatedServiceType value
func (v ContainerRegistryAssociatedServiceType) Ptr() *ContainerRegistryAssociatedServiceType {
	return &v
}

type NullableContainerRegistryAssociatedServiceType struct {
	value *ContainerRegistryAssociatedServiceType
	isSet bool
}

func (v NullableContainerRegistryAssociatedServiceType) Get() *ContainerRegistryAssociatedServiceType {
	return v.value
}

func (v *NullableContainerRegistryAssociatedServiceType) Set(val *ContainerRegistryAssociatedServiceType) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerRegistryAssociatedServiceType) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerRegistryAssociatedServiceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerRegistryAssociatedServiceType(val *ContainerRegistryAssociatedServiceType) *NullableContainerRegistryAssociatedServiceType {
	return &NullableContainerRegistryAssociatedServiceType{value: val, isSet: true}
}

func (v NullableContainerRegistryAssociatedServiceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerRegistryAssociatedServiceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
