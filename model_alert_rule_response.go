/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the AlertRuleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRuleResponse{}

// AlertRuleResponse struct for AlertRuleResponse
type AlertRuleResponse struct {
	Id        string     `json:"id"`
	CreatedAt time.Time  `json:"created_at"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// Organization identifier
	OrganizationId string `json:"organization_id"`
	//  Cluster identifier
	ClusterId string `json:"cluster_id"`
	// Name of the alert rule
	Name string `json:"name"`
	// Description of what the alert monitors
	Description string `json:"description"`
	// PromQL expression to evaluate
	PromqlExpr string `json:"promql_expr"`
	// Duration the condition must be true before firing (ISO-8601 duration format)
	ForDuration string        `json:"for_duration"`
	Severity    AlertSeverity `json:"severity"`
	// Whether the alert rule is enabled
	Enabled bool `json:"enabled"`
	// List of alert receiver IDs to send notifications to
	AlertReceiverIds     []string                  `json:"alert_receiver_ids"`
	Presentation         AlertPresentationResponse `json:"presentation"`
	AdditionalProperties map[string]interface{}
}

type _AlertRuleResponse AlertRuleResponse

// NewAlertRuleResponse instantiates a new AlertRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRuleResponse(id string, createdAt time.Time, organizationId string, clusterId string, name string, description string, promqlExpr string, forDuration string, severity AlertSeverity, enabled bool, alertReceiverIds []string, presentation AlertPresentationResponse) *AlertRuleResponse {
	this := AlertRuleResponse{}
	this.Id = id
	this.CreatedAt = createdAt
	this.OrganizationId = organizationId
	this.ClusterId = clusterId
	this.Name = name
	this.Description = description
	this.PromqlExpr = promqlExpr
	this.ForDuration = forDuration
	this.Severity = severity
	this.Enabled = enabled
	this.AlertReceiverIds = alertReceiverIds
	this.Presentation = presentation
	return &this
}

// NewAlertRuleResponseWithDefaults instantiates a new AlertRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRuleResponseWithDefaults() *AlertRuleResponse {
	this := AlertRuleResponse{}
	return &this
}

// GetId returns the Id field value
func (o *AlertRuleResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AlertRuleResponse) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AlertRuleResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AlertRuleResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AlertRuleResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AlertRuleResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *AlertRuleResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetOrganizationId returns the OrganizationId field value
func (o *AlertRuleResponse) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *AlertRuleResponse) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetClusterId returns the ClusterId field value
func (o *AlertRuleResponse) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *AlertRuleResponse) SetClusterId(v string) {
	o.ClusterId = v
}

// GetName returns the Name field value
func (o *AlertRuleResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AlertRuleResponse) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *AlertRuleResponse) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AlertRuleResponse) SetDescription(v string) {
	o.Description = v
}

// GetPromqlExpr returns the PromqlExpr field value
func (o *AlertRuleResponse) GetPromqlExpr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PromqlExpr
}

// GetPromqlExprOk returns a tuple with the PromqlExpr field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetPromqlExprOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromqlExpr, true
}

// SetPromqlExpr sets field value
func (o *AlertRuleResponse) SetPromqlExpr(v string) {
	o.PromqlExpr = v
}

// GetForDuration returns the ForDuration field value
func (o *AlertRuleResponse) GetForDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ForDuration
}

// GetForDurationOk returns a tuple with the ForDuration field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetForDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForDuration, true
}

// SetForDuration sets field value
func (o *AlertRuleResponse) SetForDuration(v string) {
	o.ForDuration = v
}

// GetSeverity returns the Severity field value
func (o *AlertRuleResponse) GetSeverity() AlertSeverity {
	if o == nil {
		var ret AlertSeverity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetSeverityOk() (*AlertSeverity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *AlertRuleResponse) SetSeverity(v AlertSeverity) {
	o.Severity = v
}

// GetEnabled returns the Enabled field value
func (o *AlertRuleResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AlertRuleResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetAlertReceiverIds returns the AlertReceiverIds field value
func (o *AlertRuleResponse) GetAlertReceiverIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AlertReceiverIds
}

// GetAlertReceiverIdsOk returns a tuple with the AlertReceiverIds field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetAlertReceiverIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertReceiverIds, true
}

// SetAlertReceiverIds sets field value
func (o *AlertRuleResponse) SetAlertReceiverIds(v []string) {
	o.AlertReceiverIds = v
}

// GetPresentation returns the Presentation field value
func (o *AlertRuleResponse) GetPresentation() AlertPresentationResponse {
	if o == nil {
		var ret AlertPresentationResponse
		return ret
	}

	return o.Presentation
}

// GetPresentationOk returns a tuple with the Presentation field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResponse) GetPresentationOk() (*AlertPresentationResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Presentation, true
}

// SetPresentation sets field value
func (o *AlertRuleResponse) SetPresentation(v AlertPresentationResponse) {
	o.Presentation = v
}

func (o AlertRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRuleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["promql_expr"] = o.PromqlExpr
	toSerialize["for_duration"] = o.ForDuration
	toSerialize["severity"] = o.Severity
	toSerialize["enabled"] = o.Enabled
	toSerialize["alert_receiver_ids"] = o.AlertReceiverIds
	toSerialize["presentation"] = o.Presentation

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AlertRuleResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"organization_id",
		"cluster_id",
		"name",
		"description",
		"promql_expr",
		"for_duration",
		"severity",
		"enabled",
		"alert_receiver_ids",
		"presentation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertRuleResponse := _AlertRuleResponse{}

	err = json.Unmarshal(data, &varAlertRuleResponse)

	if err != nil {
		return err
	}

	*o = AlertRuleResponse(varAlertRuleResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "cluster_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "promql_expr")
		delete(additionalProperties, "for_duration")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "alert_receiver_ids")
		delete(additionalProperties, "presentation")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAlertRuleResponse struct {
	value *AlertRuleResponse
	isSet bool
}

func (v NullableAlertRuleResponse) Get() *AlertRuleResponse {
	return v.value
}

func (v *NullableAlertRuleResponse) Set(val *AlertRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRuleResponse(val *AlertRuleResponse) *NullableAlertRuleResponse {
	return &NullableAlertRuleResponse{value: val, isSet: true}
}

func (v NullableAlertRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
