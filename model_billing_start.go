/*
[BETA] Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.0.0
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// BillingStart struct for BillingStart
type BillingStart struct {
	BillingStartedOn *time.Time `json:"billing_started_on,omitempty"`
}

// NewBillingStart instantiates a new BillingStart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingStart() *BillingStart {
	this := BillingStart{}
	return &this
}

// NewBillingStartWithDefaults instantiates a new BillingStart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingStartWithDefaults() *BillingStart {
	this := BillingStart{}
	return &this
}

// GetBillingStartedOn returns the BillingStartedOn field value if set, zero value otherwise.
func (o *BillingStart) GetBillingStartedOn() time.Time {
	if o == nil || o.BillingStartedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.BillingStartedOn
}

// GetBillingStartedOnOk returns a tuple with the BillingStartedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingStart) GetBillingStartedOnOk() (*time.Time, bool) {
	if o == nil || o.BillingStartedOn == nil {
		return nil, false
	}
	return o.BillingStartedOn, true
}

// HasBillingStartedOn returns a boolean if a field has been set.
func (o *BillingStart) HasBillingStartedOn() bool {
	if o != nil && o.BillingStartedOn != nil {
		return true
	}

	return false
}

// SetBillingStartedOn gets a reference to the given time.Time and assigns it to the BillingStartedOn field.
func (o *BillingStart) SetBillingStartedOn(v time.Time) {
	o.BillingStartedOn = &v
}

func (o BillingStart) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BillingStartedOn != nil {
		toSerialize["billing_started_on"] = o.BillingStartedOn
	}
	return json.Marshal(toSerialize)
}

type NullableBillingStart struct {
	value *BillingStart
	isSet bool
}

func (v NullableBillingStart) Get() *BillingStart {
	return v.value
}

func (v *NullableBillingStart) Set(val *BillingStart) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingStart) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingStart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingStart(val *BillingStart) *NullableBillingStart {
	return &NullableBillingStart{value: val, isSet: true}
}

func (v NullableBillingStart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingStart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
