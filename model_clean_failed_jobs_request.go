/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the CleanFailedJobsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CleanFailedJobsRequest{}

// CleanFailedJobsRequest struct for CleanFailedJobsRequest
type CleanFailedJobsRequest struct {
	JobIds               []string `json:"job_ids,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CleanFailedJobsRequest CleanFailedJobsRequest

// NewCleanFailedJobsRequest instantiates a new CleanFailedJobsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCleanFailedJobsRequest() *CleanFailedJobsRequest {
	this := CleanFailedJobsRequest{}
	return &this
}

// NewCleanFailedJobsRequestWithDefaults instantiates a new CleanFailedJobsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCleanFailedJobsRequestWithDefaults() *CleanFailedJobsRequest {
	this := CleanFailedJobsRequest{}
	return &this
}

// GetJobIds returns the JobIds field value if set, zero value otherwise.
func (o *CleanFailedJobsRequest) GetJobIds() []string {
	if o == nil || IsNil(o.JobIds) {
		var ret []string
		return ret
	}
	return o.JobIds
}

// GetJobIdsOk returns a tuple with the JobIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CleanFailedJobsRequest) GetJobIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.JobIds) {
		return nil, false
	}
	return o.JobIds, true
}

// HasJobIds returns a boolean if a field has been set.
func (o *CleanFailedJobsRequest) HasJobIds() bool {
	if o != nil && !IsNil(o.JobIds) {
		return true
	}

	return false
}

// SetJobIds gets a reference to the given []string and assigns it to the JobIds field.
func (o *CleanFailedJobsRequest) SetJobIds(v []string) {
	o.JobIds = v
}

func (o CleanFailedJobsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CleanFailedJobsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobIds) {
		toSerialize["job_ids"] = o.JobIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CleanFailedJobsRequest) UnmarshalJSON(data []byte) (err error) {
	varCleanFailedJobsRequest := _CleanFailedJobsRequest{}

	err = json.Unmarshal(data, &varCleanFailedJobsRequest)

	if err != nil {
		return err
	}

	*o = CleanFailedJobsRequest(varCleanFailedJobsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "job_ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCleanFailedJobsRequest struct {
	value *CleanFailedJobsRequest
	isSet bool
}

func (v NullableCleanFailedJobsRequest) Get() *CleanFailedJobsRequest {
	return v.value
}

func (v *NullableCleanFailedJobsRequest) Set(val *CleanFailedJobsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCleanFailedJobsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCleanFailedJobsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCleanFailedJobsRequest(val *CleanFailedJobsRequest) *NullableCleanFailedJobsRequest {
	return &NullableCleanFailedJobsRequest{value: val, isSet: true}
}

func (v NullableCleanFailedJobsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCleanFailedJobsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
