/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// VariableOverrideRequest struct for VariableOverrideRequest
type VariableOverrideRequest struct {
	Value         string               `json:"value"`
	AliasScope    APIVariableScopeEnum `json:"alias_scope"`
	AliasParentId string               `json:"alias_parent_id"`
}

// NewVariableOverrideRequest instantiates a new VariableOverrideRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableOverrideRequest(value string, aliasScope APIVariableScopeEnum, aliasParentId string) *VariableOverrideRequest {
	this := VariableOverrideRequest{}
	this.Value = value
	this.AliasScope = aliasScope
	this.AliasParentId = aliasParentId
	return &this
}

// NewVariableOverrideRequestWithDefaults instantiates a new VariableOverrideRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableOverrideRequestWithDefaults() *VariableOverrideRequest {
	this := VariableOverrideRequest{}
	return &this
}

// GetValue returns the Value field value
func (o *VariableOverrideRequest) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VariableOverrideRequest) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VariableOverrideRequest) SetValue(v string) {
	o.Value = v
}

// GetAliasScope returns the AliasScope field value
func (o *VariableOverrideRequest) GetAliasScope() APIVariableScopeEnum {
	if o == nil {
		var ret APIVariableScopeEnum
		return ret
	}

	return o.AliasScope
}

// GetAliasScopeOk returns a tuple with the AliasScope field value
// and a boolean to check if the value has been set.
func (o *VariableOverrideRequest) GetAliasScopeOk() (*APIVariableScopeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AliasScope, true
}

// SetAliasScope sets field value
func (o *VariableOverrideRequest) SetAliasScope(v APIVariableScopeEnum) {
	o.AliasScope = v
}

// GetAliasParentId returns the AliasParentId field value
func (o *VariableOverrideRequest) GetAliasParentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AliasParentId
}

// GetAliasParentIdOk returns a tuple with the AliasParentId field value
// and a boolean to check if the value has been set.
func (o *VariableOverrideRequest) GetAliasParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AliasParentId, true
}

// SetAliasParentId sets field value
func (o *VariableOverrideRequest) SetAliasParentId(v string) {
	o.AliasParentId = v
}

func (o VariableOverrideRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["alias_scope"] = o.AliasScope
	}
	if true {
		toSerialize["alias_parent_id"] = o.AliasParentId
	}
	return json.Marshal(toSerialize)
}

type NullableVariableOverrideRequest struct {
	value *VariableOverrideRequest
	isSet bool
}

func (v NullableVariableOverrideRequest) Get() *VariableOverrideRequest {
	return v.value
}

func (v *NullableVariableOverrideRequest) Set(val *VariableOverrideRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableOverrideRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableOverrideRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableOverrideRequest(val *VariableOverrideRequest) *NullableVariableOverrideRequest {
	return &NullableVariableOverrideRequest{value: val, isSet: true}
}

func (v NullableVariableOverrideRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableOverrideRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
