/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the HelmAdvancedSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelmAdvancedSettings{}

// HelmAdvancedSettings struct for HelmAdvancedSettings
type HelmAdvancedSettings struct {
	// disable custom domain check when deploying a helm
	DeploymentCustomDomainCheckEnabled *bool  `json:"deployment.custom_domain_check_enabled,omitempty"`
	NetworkIngressProxyBodySizeMb      *int32 `json:"network.ingress.proxy_body_size_mb,omitempty"`
	// When using SSL offloading outside of cluster, you can enforce a redirect to HTTPS even when there is no TLS certificate available
	NetworkIngressForceSslRedirect *bool   `json:"network.ingress.force_ssl_redirect,omitempty"`
	NetworkIngressEnableCors       *bool   `json:"network.ingress.enable_cors,omitempty"`
	NetworkIngressCorsAllowOrigin  *string `json:"network.ingress.cors_allow_origin,omitempty"`
	NetworkIngressCorsAllowMethods *string `json:"network.ingress.cors_allow_methods,omitempty"`
	NetworkIngressCorsAllowHeaders *string `json:"network.ingress.cors_allow_headers,omitempty"`
	// header buffer size used while reading response header from upstream
	NetworkIngressProxyBufferSizeKb *int32 `json:"network.ingress.proxy_buffer_size_kb,omitempty"`
	// Limits the maximum time (in seconds) during which requests can be processed through one keepalive connection
	NetworkIngressKeepaliveTimeSeconds *int32 `json:"network.ingress.keepalive_time_seconds,omitempty"`
	// Sets a timeout (in seconds) during which an idle keepalive connection to an upstream server will stay open.
	NetworkIngressKeepaliveTimeoutSeconds *int32 `json:"network.ingress.keepalive_timeout_seconds,omitempty"`
	// Sets a timeout (in seconds) for transmitting a response to the client
	NetworkIngressSendTimeoutSeconds *int32 `json:"network.ingress.send_timeout_seconds,omitempty"`
	// Sets a timeout (in seconds) for establishing a connection to a proxied server
	NetworkIngressProxyConnectTimeoutSeconds *int32 `json:"network.ingress.proxy_connect_timeout_seconds,omitempty"`
	// Sets a timeout (in seconds) for transmitting a request to the proxied server
	NetworkIngressProxySendTimeoutSeconds *int32 `json:"network.ingress.proxy_send_timeout_seconds,omitempty"`
	// Sets a timeout (in seconds) for reading a response from the proxied server
	NetworkIngressProxyReadTimeoutSeconds *int32 `json:"network.ingress.proxy_read_timeout_seconds,omitempty"`
	// Allows to enable or disable nginx `proxy-buffering`
	NetworkIngressProxyBuffering *string `json:"network.ingress.proxy_buffering,omitempty"`
	// Allows to enable or disable nginx `proxy-request-buffering`
	NetworkIngressProxyRequestBuffering *string `json:"network.ingress.proxy_request_buffering,omitempty"`
	// Sets a timeout (in seconds) for transmitting a request to the grpc server
	NetworkIngressGrpcSendTimeoutSeconds *int32 `json:"network.ingress.grpc_send_timeout_seconds,omitempty"`
	// Sets a timeout (in seconds) for transmitting a request to the grpc server
	NetworkIngressGrpcReadTimeoutSeconds *int32 `json:"network.ingress.grpc_read_timeout_seconds,omitempty"`
	// list of source ranges to allow access to ingress proxy.  This property can be used to whitelist source IP ranges for ingress proxy. The value is a comma separated list of CIDRs, e.g. 10.0.0.0/24,172.10.0.1 To allow all source ranges, set 0.0.0.0/0.
	NetworkIngressWhitelistSourceRange *string `json:"network.ingress.whitelist_source_range,omitempty"`
	// list of source ranges to deny access to ingress proxy.  This property can be used to blacklist source IP ranges for ingress proxy. The value is a comma separated list of CIDRs, e.g. 10.0.0.0/24,172.10.0.1
	NetworkIngressDenylistSourceRange *string `json:"network.ingress.denylist_source_range,omitempty"`
	// Allows to define response headers
	NetworkIngressExtraHeaders *string `json:"network.ingress.extra_headers,omitempty"`
	// Set the name of an environment variable to use as a basic authentication (`login:crypted_password`) from `htpasswd` command. You can add multiples comma separated values.
	NetworkIngressBasicAuthEnvVar *string `json:"network.ingress.basic_auth_env_var,omitempty"`
	// Enable the load balancer to bind a user's session to a specific target. This ensures that all requests from the user during the session are sent to the same target
	NetworkIngressEnableStickySession *bool `json:"network.ingress.enable_sticky_session,omitempty"`
	AdditionalProperties              map[string]interface{}
}

type _HelmAdvancedSettings HelmAdvancedSettings

// NewHelmAdvancedSettings instantiates a new HelmAdvancedSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmAdvancedSettings() *HelmAdvancedSettings {
	this := HelmAdvancedSettings{}
	return &this
}

// NewHelmAdvancedSettingsWithDefaults instantiates a new HelmAdvancedSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmAdvancedSettingsWithDefaults() *HelmAdvancedSettings {
	this := HelmAdvancedSettings{}
	return &this
}

// GetDeploymentCustomDomainCheckEnabled returns the DeploymentCustomDomainCheckEnabled field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetDeploymentCustomDomainCheckEnabled() bool {
	if o == nil || IsNil(o.DeploymentCustomDomainCheckEnabled) {
		var ret bool
		return ret
	}
	return *o.DeploymentCustomDomainCheckEnabled
}

// GetDeploymentCustomDomainCheckEnabledOk returns a tuple with the DeploymentCustomDomainCheckEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetDeploymentCustomDomainCheckEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DeploymentCustomDomainCheckEnabled) {
		return nil, false
	}
	return o.DeploymentCustomDomainCheckEnabled, true
}

// HasDeploymentCustomDomainCheckEnabled returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasDeploymentCustomDomainCheckEnabled() bool {
	if o != nil && !IsNil(o.DeploymentCustomDomainCheckEnabled) {
		return true
	}

	return false
}

// SetDeploymentCustomDomainCheckEnabled gets a reference to the given bool and assigns it to the DeploymentCustomDomainCheckEnabled field.
func (o *HelmAdvancedSettings) SetDeploymentCustomDomainCheckEnabled(v bool) {
	o.DeploymentCustomDomainCheckEnabled = &v
}

// GetNetworkIngressProxyBodySizeMb returns the NetworkIngressProxyBodySizeMb field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyBodySizeMb() int32 {
	if o == nil || IsNil(o.NetworkIngressProxyBodySizeMb) {
		var ret int32
		return ret
	}
	return *o.NetworkIngressProxyBodySizeMb
}

// GetNetworkIngressProxyBodySizeMbOk returns a tuple with the NetworkIngressProxyBodySizeMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyBodySizeMbOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkIngressProxyBodySizeMb) {
		return nil, false
	}
	return o.NetworkIngressProxyBodySizeMb, true
}

// HasNetworkIngressProxyBodySizeMb returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressProxyBodySizeMb() bool {
	if o != nil && !IsNil(o.NetworkIngressProxyBodySizeMb) {
		return true
	}

	return false
}

// SetNetworkIngressProxyBodySizeMb gets a reference to the given int32 and assigns it to the NetworkIngressProxyBodySizeMb field.
func (o *HelmAdvancedSettings) SetNetworkIngressProxyBodySizeMb(v int32) {
	o.NetworkIngressProxyBodySizeMb = &v
}

// GetNetworkIngressForceSslRedirect returns the NetworkIngressForceSslRedirect field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressForceSslRedirect() bool {
	if o == nil || IsNil(o.NetworkIngressForceSslRedirect) {
		var ret bool
		return ret
	}
	return *o.NetworkIngressForceSslRedirect
}

// GetNetworkIngressForceSslRedirectOk returns a tuple with the NetworkIngressForceSslRedirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressForceSslRedirectOk() (*bool, bool) {
	if o == nil || IsNil(o.NetworkIngressForceSslRedirect) {
		return nil, false
	}
	return o.NetworkIngressForceSslRedirect, true
}

// HasNetworkIngressForceSslRedirect returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressForceSslRedirect() bool {
	if o != nil && !IsNil(o.NetworkIngressForceSslRedirect) {
		return true
	}

	return false
}

// SetNetworkIngressForceSslRedirect gets a reference to the given bool and assigns it to the NetworkIngressForceSslRedirect field.
func (o *HelmAdvancedSettings) SetNetworkIngressForceSslRedirect(v bool) {
	o.NetworkIngressForceSslRedirect = &v
}

// GetNetworkIngressEnableCors returns the NetworkIngressEnableCors field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressEnableCors() bool {
	if o == nil || IsNil(o.NetworkIngressEnableCors) {
		var ret bool
		return ret
	}
	return *o.NetworkIngressEnableCors
}

// GetNetworkIngressEnableCorsOk returns a tuple with the NetworkIngressEnableCors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressEnableCorsOk() (*bool, bool) {
	if o == nil || IsNil(o.NetworkIngressEnableCors) {
		return nil, false
	}
	return o.NetworkIngressEnableCors, true
}

// HasNetworkIngressEnableCors returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressEnableCors() bool {
	if o != nil && !IsNil(o.NetworkIngressEnableCors) {
		return true
	}

	return false
}

// SetNetworkIngressEnableCors gets a reference to the given bool and assigns it to the NetworkIngressEnableCors field.
func (o *HelmAdvancedSettings) SetNetworkIngressEnableCors(v bool) {
	o.NetworkIngressEnableCors = &v
}

// GetNetworkIngressCorsAllowOrigin returns the NetworkIngressCorsAllowOrigin field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressCorsAllowOrigin() string {
	if o == nil || IsNil(o.NetworkIngressCorsAllowOrigin) {
		var ret string
		return ret
	}
	return *o.NetworkIngressCorsAllowOrigin
}

// GetNetworkIngressCorsAllowOriginOk returns a tuple with the NetworkIngressCorsAllowOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressCorsAllowOriginOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkIngressCorsAllowOrigin) {
		return nil, false
	}
	return o.NetworkIngressCorsAllowOrigin, true
}

// HasNetworkIngressCorsAllowOrigin returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressCorsAllowOrigin() bool {
	if o != nil && !IsNil(o.NetworkIngressCorsAllowOrigin) {
		return true
	}

	return false
}

// SetNetworkIngressCorsAllowOrigin gets a reference to the given string and assigns it to the NetworkIngressCorsAllowOrigin field.
func (o *HelmAdvancedSettings) SetNetworkIngressCorsAllowOrigin(v string) {
	o.NetworkIngressCorsAllowOrigin = &v
}

// GetNetworkIngressCorsAllowMethods returns the NetworkIngressCorsAllowMethods field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressCorsAllowMethods() string {
	if o == nil || IsNil(o.NetworkIngressCorsAllowMethods) {
		var ret string
		return ret
	}
	return *o.NetworkIngressCorsAllowMethods
}

// GetNetworkIngressCorsAllowMethodsOk returns a tuple with the NetworkIngressCorsAllowMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressCorsAllowMethodsOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkIngressCorsAllowMethods) {
		return nil, false
	}
	return o.NetworkIngressCorsAllowMethods, true
}

// HasNetworkIngressCorsAllowMethods returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressCorsAllowMethods() bool {
	if o != nil && !IsNil(o.NetworkIngressCorsAllowMethods) {
		return true
	}

	return false
}

// SetNetworkIngressCorsAllowMethods gets a reference to the given string and assigns it to the NetworkIngressCorsAllowMethods field.
func (o *HelmAdvancedSettings) SetNetworkIngressCorsAllowMethods(v string) {
	o.NetworkIngressCorsAllowMethods = &v
}

// GetNetworkIngressCorsAllowHeaders returns the NetworkIngressCorsAllowHeaders field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressCorsAllowHeaders() string {
	if o == nil || IsNil(o.NetworkIngressCorsAllowHeaders) {
		var ret string
		return ret
	}
	return *o.NetworkIngressCorsAllowHeaders
}

// GetNetworkIngressCorsAllowHeadersOk returns a tuple with the NetworkIngressCorsAllowHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressCorsAllowHeadersOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkIngressCorsAllowHeaders) {
		return nil, false
	}
	return o.NetworkIngressCorsAllowHeaders, true
}

// HasNetworkIngressCorsAllowHeaders returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressCorsAllowHeaders() bool {
	if o != nil && !IsNil(o.NetworkIngressCorsAllowHeaders) {
		return true
	}

	return false
}

// SetNetworkIngressCorsAllowHeaders gets a reference to the given string and assigns it to the NetworkIngressCorsAllowHeaders field.
func (o *HelmAdvancedSettings) SetNetworkIngressCorsAllowHeaders(v string) {
	o.NetworkIngressCorsAllowHeaders = &v
}

// GetNetworkIngressProxyBufferSizeKb returns the NetworkIngressProxyBufferSizeKb field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyBufferSizeKb() int32 {
	if o == nil || IsNil(o.NetworkIngressProxyBufferSizeKb) {
		var ret int32
		return ret
	}
	return *o.NetworkIngressProxyBufferSizeKb
}

// GetNetworkIngressProxyBufferSizeKbOk returns a tuple with the NetworkIngressProxyBufferSizeKb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyBufferSizeKbOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkIngressProxyBufferSizeKb) {
		return nil, false
	}
	return o.NetworkIngressProxyBufferSizeKb, true
}

// HasNetworkIngressProxyBufferSizeKb returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressProxyBufferSizeKb() bool {
	if o != nil && !IsNil(o.NetworkIngressProxyBufferSizeKb) {
		return true
	}

	return false
}

// SetNetworkIngressProxyBufferSizeKb gets a reference to the given int32 and assigns it to the NetworkIngressProxyBufferSizeKb field.
func (o *HelmAdvancedSettings) SetNetworkIngressProxyBufferSizeKb(v int32) {
	o.NetworkIngressProxyBufferSizeKb = &v
}

// GetNetworkIngressKeepaliveTimeSeconds returns the NetworkIngressKeepaliveTimeSeconds field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressKeepaliveTimeSeconds() int32 {
	if o == nil || IsNil(o.NetworkIngressKeepaliveTimeSeconds) {
		var ret int32
		return ret
	}
	return *o.NetworkIngressKeepaliveTimeSeconds
}

// GetNetworkIngressKeepaliveTimeSecondsOk returns a tuple with the NetworkIngressKeepaliveTimeSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressKeepaliveTimeSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkIngressKeepaliveTimeSeconds) {
		return nil, false
	}
	return o.NetworkIngressKeepaliveTimeSeconds, true
}

// HasNetworkIngressKeepaliveTimeSeconds returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressKeepaliveTimeSeconds() bool {
	if o != nil && !IsNil(o.NetworkIngressKeepaliveTimeSeconds) {
		return true
	}

	return false
}

// SetNetworkIngressKeepaliveTimeSeconds gets a reference to the given int32 and assigns it to the NetworkIngressKeepaliveTimeSeconds field.
func (o *HelmAdvancedSettings) SetNetworkIngressKeepaliveTimeSeconds(v int32) {
	o.NetworkIngressKeepaliveTimeSeconds = &v
}

// GetNetworkIngressKeepaliveTimeoutSeconds returns the NetworkIngressKeepaliveTimeoutSeconds field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressKeepaliveTimeoutSeconds() int32 {
	if o == nil || IsNil(o.NetworkIngressKeepaliveTimeoutSeconds) {
		var ret int32
		return ret
	}
	return *o.NetworkIngressKeepaliveTimeoutSeconds
}

// GetNetworkIngressKeepaliveTimeoutSecondsOk returns a tuple with the NetworkIngressKeepaliveTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressKeepaliveTimeoutSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkIngressKeepaliveTimeoutSeconds) {
		return nil, false
	}
	return o.NetworkIngressKeepaliveTimeoutSeconds, true
}

// HasNetworkIngressKeepaliveTimeoutSeconds returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressKeepaliveTimeoutSeconds() bool {
	if o != nil && !IsNil(o.NetworkIngressKeepaliveTimeoutSeconds) {
		return true
	}

	return false
}

// SetNetworkIngressKeepaliveTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressKeepaliveTimeoutSeconds field.
func (o *HelmAdvancedSettings) SetNetworkIngressKeepaliveTimeoutSeconds(v int32) {
	o.NetworkIngressKeepaliveTimeoutSeconds = &v
}

// GetNetworkIngressSendTimeoutSeconds returns the NetworkIngressSendTimeoutSeconds field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressSendTimeoutSeconds() int32 {
	if o == nil || IsNil(o.NetworkIngressSendTimeoutSeconds) {
		var ret int32
		return ret
	}
	return *o.NetworkIngressSendTimeoutSeconds
}

// GetNetworkIngressSendTimeoutSecondsOk returns a tuple with the NetworkIngressSendTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressSendTimeoutSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkIngressSendTimeoutSeconds) {
		return nil, false
	}
	return o.NetworkIngressSendTimeoutSeconds, true
}

// HasNetworkIngressSendTimeoutSeconds returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressSendTimeoutSeconds() bool {
	if o != nil && !IsNil(o.NetworkIngressSendTimeoutSeconds) {
		return true
	}

	return false
}

// SetNetworkIngressSendTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressSendTimeoutSeconds field.
func (o *HelmAdvancedSettings) SetNetworkIngressSendTimeoutSeconds(v int32) {
	o.NetworkIngressSendTimeoutSeconds = &v
}

// GetNetworkIngressProxyConnectTimeoutSeconds returns the NetworkIngressProxyConnectTimeoutSeconds field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyConnectTimeoutSeconds() int32 {
	if o == nil || IsNil(o.NetworkIngressProxyConnectTimeoutSeconds) {
		var ret int32
		return ret
	}
	return *o.NetworkIngressProxyConnectTimeoutSeconds
}

// GetNetworkIngressProxyConnectTimeoutSecondsOk returns a tuple with the NetworkIngressProxyConnectTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyConnectTimeoutSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkIngressProxyConnectTimeoutSeconds) {
		return nil, false
	}
	return o.NetworkIngressProxyConnectTimeoutSeconds, true
}

// HasNetworkIngressProxyConnectTimeoutSeconds returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressProxyConnectTimeoutSeconds() bool {
	if o != nil && !IsNil(o.NetworkIngressProxyConnectTimeoutSeconds) {
		return true
	}

	return false
}

// SetNetworkIngressProxyConnectTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressProxyConnectTimeoutSeconds field.
func (o *HelmAdvancedSettings) SetNetworkIngressProxyConnectTimeoutSeconds(v int32) {
	o.NetworkIngressProxyConnectTimeoutSeconds = &v
}

// GetNetworkIngressProxySendTimeoutSeconds returns the NetworkIngressProxySendTimeoutSeconds field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressProxySendTimeoutSeconds() int32 {
	if o == nil || IsNil(o.NetworkIngressProxySendTimeoutSeconds) {
		var ret int32
		return ret
	}
	return *o.NetworkIngressProxySendTimeoutSeconds
}

// GetNetworkIngressProxySendTimeoutSecondsOk returns a tuple with the NetworkIngressProxySendTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressProxySendTimeoutSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkIngressProxySendTimeoutSeconds) {
		return nil, false
	}
	return o.NetworkIngressProxySendTimeoutSeconds, true
}

// HasNetworkIngressProxySendTimeoutSeconds returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressProxySendTimeoutSeconds() bool {
	if o != nil && !IsNil(o.NetworkIngressProxySendTimeoutSeconds) {
		return true
	}

	return false
}

// SetNetworkIngressProxySendTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressProxySendTimeoutSeconds field.
func (o *HelmAdvancedSettings) SetNetworkIngressProxySendTimeoutSeconds(v int32) {
	o.NetworkIngressProxySendTimeoutSeconds = &v
}

// GetNetworkIngressProxyReadTimeoutSeconds returns the NetworkIngressProxyReadTimeoutSeconds field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyReadTimeoutSeconds() int32 {
	if o == nil || IsNil(o.NetworkIngressProxyReadTimeoutSeconds) {
		var ret int32
		return ret
	}
	return *o.NetworkIngressProxyReadTimeoutSeconds
}

// GetNetworkIngressProxyReadTimeoutSecondsOk returns a tuple with the NetworkIngressProxyReadTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyReadTimeoutSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkIngressProxyReadTimeoutSeconds) {
		return nil, false
	}
	return o.NetworkIngressProxyReadTimeoutSeconds, true
}

// HasNetworkIngressProxyReadTimeoutSeconds returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressProxyReadTimeoutSeconds() bool {
	if o != nil && !IsNil(o.NetworkIngressProxyReadTimeoutSeconds) {
		return true
	}

	return false
}

// SetNetworkIngressProxyReadTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressProxyReadTimeoutSeconds field.
func (o *HelmAdvancedSettings) SetNetworkIngressProxyReadTimeoutSeconds(v int32) {
	o.NetworkIngressProxyReadTimeoutSeconds = &v
}

// GetNetworkIngressProxyBuffering returns the NetworkIngressProxyBuffering field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyBuffering() string {
	if o == nil || IsNil(o.NetworkIngressProxyBuffering) {
		var ret string
		return ret
	}
	return *o.NetworkIngressProxyBuffering
}

// GetNetworkIngressProxyBufferingOk returns a tuple with the NetworkIngressProxyBuffering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyBufferingOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkIngressProxyBuffering) {
		return nil, false
	}
	return o.NetworkIngressProxyBuffering, true
}

// HasNetworkIngressProxyBuffering returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressProxyBuffering() bool {
	if o != nil && !IsNil(o.NetworkIngressProxyBuffering) {
		return true
	}

	return false
}

// SetNetworkIngressProxyBuffering gets a reference to the given string and assigns it to the NetworkIngressProxyBuffering field.
func (o *HelmAdvancedSettings) SetNetworkIngressProxyBuffering(v string) {
	o.NetworkIngressProxyBuffering = &v
}

// GetNetworkIngressProxyRequestBuffering returns the NetworkIngressProxyRequestBuffering field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyRequestBuffering() string {
	if o == nil || IsNil(o.NetworkIngressProxyRequestBuffering) {
		var ret string
		return ret
	}
	return *o.NetworkIngressProxyRequestBuffering
}

// GetNetworkIngressProxyRequestBufferingOk returns a tuple with the NetworkIngressProxyRequestBuffering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressProxyRequestBufferingOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkIngressProxyRequestBuffering) {
		return nil, false
	}
	return o.NetworkIngressProxyRequestBuffering, true
}

// HasNetworkIngressProxyRequestBuffering returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressProxyRequestBuffering() bool {
	if o != nil && !IsNil(o.NetworkIngressProxyRequestBuffering) {
		return true
	}

	return false
}

// SetNetworkIngressProxyRequestBuffering gets a reference to the given string and assigns it to the NetworkIngressProxyRequestBuffering field.
func (o *HelmAdvancedSettings) SetNetworkIngressProxyRequestBuffering(v string) {
	o.NetworkIngressProxyRequestBuffering = &v
}

// GetNetworkIngressGrpcSendTimeoutSeconds returns the NetworkIngressGrpcSendTimeoutSeconds field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressGrpcSendTimeoutSeconds() int32 {
	if o == nil || IsNil(o.NetworkIngressGrpcSendTimeoutSeconds) {
		var ret int32
		return ret
	}
	return *o.NetworkIngressGrpcSendTimeoutSeconds
}

// GetNetworkIngressGrpcSendTimeoutSecondsOk returns a tuple with the NetworkIngressGrpcSendTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressGrpcSendTimeoutSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkIngressGrpcSendTimeoutSeconds) {
		return nil, false
	}
	return o.NetworkIngressGrpcSendTimeoutSeconds, true
}

// HasNetworkIngressGrpcSendTimeoutSeconds returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressGrpcSendTimeoutSeconds() bool {
	if o != nil && !IsNil(o.NetworkIngressGrpcSendTimeoutSeconds) {
		return true
	}

	return false
}

// SetNetworkIngressGrpcSendTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressGrpcSendTimeoutSeconds field.
func (o *HelmAdvancedSettings) SetNetworkIngressGrpcSendTimeoutSeconds(v int32) {
	o.NetworkIngressGrpcSendTimeoutSeconds = &v
}

// GetNetworkIngressGrpcReadTimeoutSeconds returns the NetworkIngressGrpcReadTimeoutSeconds field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressGrpcReadTimeoutSeconds() int32 {
	if o == nil || IsNil(o.NetworkIngressGrpcReadTimeoutSeconds) {
		var ret int32
		return ret
	}
	return *o.NetworkIngressGrpcReadTimeoutSeconds
}

// GetNetworkIngressGrpcReadTimeoutSecondsOk returns a tuple with the NetworkIngressGrpcReadTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressGrpcReadTimeoutSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkIngressGrpcReadTimeoutSeconds) {
		return nil, false
	}
	return o.NetworkIngressGrpcReadTimeoutSeconds, true
}

// HasNetworkIngressGrpcReadTimeoutSeconds returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressGrpcReadTimeoutSeconds() bool {
	if o != nil && !IsNil(o.NetworkIngressGrpcReadTimeoutSeconds) {
		return true
	}

	return false
}

// SetNetworkIngressGrpcReadTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressGrpcReadTimeoutSeconds field.
func (o *HelmAdvancedSettings) SetNetworkIngressGrpcReadTimeoutSeconds(v int32) {
	o.NetworkIngressGrpcReadTimeoutSeconds = &v
}

// GetNetworkIngressWhitelistSourceRange returns the NetworkIngressWhitelistSourceRange field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressWhitelistSourceRange() string {
	if o == nil || IsNil(o.NetworkIngressWhitelistSourceRange) {
		var ret string
		return ret
	}
	return *o.NetworkIngressWhitelistSourceRange
}

// GetNetworkIngressWhitelistSourceRangeOk returns a tuple with the NetworkIngressWhitelistSourceRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressWhitelistSourceRangeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkIngressWhitelistSourceRange) {
		return nil, false
	}
	return o.NetworkIngressWhitelistSourceRange, true
}

// HasNetworkIngressWhitelistSourceRange returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressWhitelistSourceRange() bool {
	if o != nil && !IsNil(o.NetworkIngressWhitelistSourceRange) {
		return true
	}

	return false
}

// SetNetworkIngressWhitelistSourceRange gets a reference to the given string and assigns it to the NetworkIngressWhitelistSourceRange field.
func (o *HelmAdvancedSettings) SetNetworkIngressWhitelistSourceRange(v string) {
	o.NetworkIngressWhitelistSourceRange = &v
}

// GetNetworkIngressDenylistSourceRange returns the NetworkIngressDenylistSourceRange field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressDenylistSourceRange() string {
	if o == nil || IsNil(o.NetworkIngressDenylistSourceRange) {
		var ret string
		return ret
	}
	return *o.NetworkIngressDenylistSourceRange
}

// GetNetworkIngressDenylistSourceRangeOk returns a tuple with the NetworkIngressDenylistSourceRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressDenylistSourceRangeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkIngressDenylistSourceRange) {
		return nil, false
	}
	return o.NetworkIngressDenylistSourceRange, true
}

// HasNetworkIngressDenylistSourceRange returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressDenylistSourceRange() bool {
	if o != nil && !IsNil(o.NetworkIngressDenylistSourceRange) {
		return true
	}

	return false
}

// SetNetworkIngressDenylistSourceRange gets a reference to the given string and assigns it to the NetworkIngressDenylistSourceRange field.
func (o *HelmAdvancedSettings) SetNetworkIngressDenylistSourceRange(v string) {
	o.NetworkIngressDenylistSourceRange = &v
}

// GetNetworkIngressExtraHeaders returns the NetworkIngressExtraHeaders field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressExtraHeaders() string {
	if o == nil || IsNil(o.NetworkIngressExtraHeaders) {
		var ret string
		return ret
	}
	return *o.NetworkIngressExtraHeaders
}

// GetNetworkIngressExtraHeadersOk returns a tuple with the NetworkIngressExtraHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressExtraHeadersOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkIngressExtraHeaders) {
		return nil, false
	}
	return o.NetworkIngressExtraHeaders, true
}

// HasNetworkIngressExtraHeaders returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressExtraHeaders() bool {
	if o != nil && !IsNil(o.NetworkIngressExtraHeaders) {
		return true
	}

	return false
}

// SetNetworkIngressExtraHeaders gets a reference to the given string and assigns it to the NetworkIngressExtraHeaders field.
func (o *HelmAdvancedSettings) SetNetworkIngressExtraHeaders(v string) {
	o.NetworkIngressExtraHeaders = &v
}

// GetNetworkIngressBasicAuthEnvVar returns the NetworkIngressBasicAuthEnvVar field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressBasicAuthEnvVar() string {
	if o == nil || IsNil(o.NetworkIngressBasicAuthEnvVar) {
		var ret string
		return ret
	}
	return *o.NetworkIngressBasicAuthEnvVar
}

// GetNetworkIngressBasicAuthEnvVarOk returns a tuple with the NetworkIngressBasicAuthEnvVar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressBasicAuthEnvVarOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkIngressBasicAuthEnvVar) {
		return nil, false
	}
	return o.NetworkIngressBasicAuthEnvVar, true
}

// HasNetworkIngressBasicAuthEnvVar returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressBasicAuthEnvVar() bool {
	if o != nil && !IsNil(o.NetworkIngressBasicAuthEnvVar) {
		return true
	}

	return false
}

// SetNetworkIngressBasicAuthEnvVar gets a reference to the given string and assigns it to the NetworkIngressBasicAuthEnvVar field.
func (o *HelmAdvancedSettings) SetNetworkIngressBasicAuthEnvVar(v string) {
	o.NetworkIngressBasicAuthEnvVar = &v
}

// GetNetworkIngressEnableStickySession returns the NetworkIngressEnableStickySession field value if set, zero value otherwise.
func (o *HelmAdvancedSettings) GetNetworkIngressEnableStickySession() bool {
	if o == nil || IsNil(o.NetworkIngressEnableStickySession) {
		var ret bool
		return ret
	}
	return *o.NetworkIngressEnableStickySession
}

// GetNetworkIngressEnableStickySessionOk returns a tuple with the NetworkIngressEnableStickySession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAdvancedSettings) GetNetworkIngressEnableStickySessionOk() (*bool, bool) {
	if o == nil || IsNil(o.NetworkIngressEnableStickySession) {
		return nil, false
	}
	return o.NetworkIngressEnableStickySession, true
}

// HasNetworkIngressEnableStickySession returns a boolean if a field has been set.
func (o *HelmAdvancedSettings) HasNetworkIngressEnableStickySession() bool {
	if o != nil && !IsNil(o.NetworkIngressEnableStickySession) {
		return true
	}

	return false
}

// SetNetworkIngressEnableStickySession gets a reference to the given bool and assigns it to the NetworkIngressEnableStickySession field.
func (o *HelmAdvancedSettings) SetNetworkIngressEnableStickySession(v bool) {
	o.NetworkIngressEnableStickySession = &v
}

func (o HelmAdvancedSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelmAdvancedSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeploymentCustomDomainCheckEnabled) {
		toSerialize["deployment.custom_domain_check_enabled"] = o.DeploymentCustomDomainCheckEnabled
	}
	if !IsNil(o.NetworkIngressProxyBodySizeMb) {
		toSerialize["network.ingress.proxy_body_size_mb"] = o.NetworkIngressProxyBodySizeMb
	}
	if !IsNil(o.NetworkIngressForceSslRedirect) {
		toSerialize["network.ingress.force_ssl_redirect"] = o.NetworkIngressForceSslRedirect
	}
	if !IsNil(o.NetworkIngressEnableCors) {
		toSerialize["network.ingress.enable_cors"] = o.NetworkIngressEnableCors
	}
	if !IsNil(o.NetworkIngressCorsAllowOrigin) {
		toSerialize["network.ingress.cors_allow_origin"] = o.NetworkIngressCorsAllowOrigin
	}
	if !IsNil(o.NetworkIngressCorsAllowMethods) {
		toSerialize["network.ingress.cors_allow_methods"] = o.NetworkIngressCorsAllowMethods
	}
	if !IsNil(o.NetworkIngressCorsAllowHeaders) {
		toSerialize["network.ingress.cors_allow_headers"] = o.NetworkIngressCorsAllowHeaders
	}
	if !IsNil(o.NetworkIngressProxyBufferSizeKb) {
		toSerialize["network.ingress.proxy_buffer_size_kb"] = o.NetworkIngressProxyBufferSizeKb
	}
	if !IsNil(o.NetworkIngressKeepaliveTimeSeconds) {
		toSerialize["network.ingress.keepalive_time_seconds"] = o.NetworkIngressKeepaliveTimeSeconds
	}
	if !IsNil(o.NetworkIngressKeepaliveTimeoutSeconds) {
		toSerialize["network.ingress.keepalive_timeout_seconds"] = o.NetworkIngressKeepaliveTimeoutSeconds
	}
	if !IsNil(o.NetworkIngressSendTimeoutSeconds) {
		toSerialize["network.ingress.send_timeout_seconds"] = o.NetworkIngressSendTimeoutSeconds
	}
	if !IsNil(o.NetworkIngressProxyConnectTimeoutSeconds) {
		toSerialize["network.ingress.proxy_connect_timeout_seconds"] = o.NetworkIngressProxyConnectTimeoutSeconds
	}
	if !IsNil(o.NetworkIngressProxySendTimeoutSeconds) {
		toSerialize["network.ingress.proxy_send_timeout_seconds"] = o.NetworkIngressProxySendTimeoutSeconds
	}
	if !IsNil(o.NetworkIngressProxyReadTimeoutSeconds) {
		toSerialize["network.ingress.proxy_read_timeout_seconds"] = o.NetworkIngressProxyReadTimeoutSeconds
	}
	if !IsNil(o.NetworkIngressProxyBuffering) {
		toSerialize["network.ingress.proxy_buffering"] = o.NetworkIngressProxyBuffering
	}
	if !IsNil(o.NetworkIngressProxyRequestBuffering) {
		toSerialize["network.ingress.proxy_request_buffering"] = o.NetworkIngressProxyRequestBuffering
	}
	if !IsNil(o.NetworkIngressGrpcSendTimeoutSeconds) {
		toSerialize["network.ingress.grpc_send_timeout_seconds"] = o.NetworkIngressGrpcSendTimeoutSeconds
	}
	if !IsNil(o.NetworkIngressGrpcReadTimeoutSeconds) {
		toSerialize["network.ingress.grpc_read_timeout_seconds"] = o.NetworkIngressGrpcReadTimeoutSeconds
	}
	if !IsNil(o.NetworkIngressWhitelistSourceRange) {
		toSerialize["network.ingress.whitelist_source_range"] = o.NetworkIngressWhitelistSourceRange
	}
	if !IsNil(o.NetworkIngressDenylistSourceRange) {
		toSerialize["network.ingress.denylist_source_range"] = o.NetworkIngressDenylistSourceRange
	}
	if !IsNil(o.NetworkIngressExtraHeaders) {
		toSerialize["network.ingress.extra_headers"] = o.NetworkIngressExtraHeaders
	}
	if !IsNil(o.NetworkIngressBasicAuthEnvVar) {
		toSerialize["network.ingress.basic_auth_env_var"] = o.NetworkIngressBasicAuthEnvVar
	}
	if !IsNil(o.NetworkIngressEnableStickySession) {
		toSerialize["network.ingress.enable_sticky_session"] = o.NetworkIngressEnableStickySession
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HelmAdvancedSettings) UnmarshalJSON(data []byte) (err error) {
	varHelmAdvancedSettings := _HelmAdvancedSettings{}

	err = json.Unmarshal(data, &varHelmAdvancedSettings)

	if err != nil {
		return err
	}

	*o = HelmAdvancedSettings(varHelmAdvancedSettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "deployment.custom_domain_check_enabled")
		delete(additionalProperties, "network.ingress.proxy_body_size_mb")
		delete(additionalProperties, "network.ingress.force_ssl_redirect")
		delete(additionalProperties, "network.ingress.enable_cors")
		delete(additionalProperties, "network.ingress.cors_allow_origin")
		delete(additionalProperties, "network.ingress.cors_allow_methods")
		delete(additionalProperties, "network.ingress.cors_allow_headers")
		delete(additionalProperties, "network.ingress.proxy_buffer_size_kb")
		delete(additionalProperties, "network.ingress.keepalive_time_seconds")
		delete(additionalProperties, "network.ingress.keepalive_timeout_seconds")
		delete(additionalProperties, "network.ingress.send_timeout_seconds")
		delete(additionalProperties, "network.ingress.proxy_connect_timeout_seconds")
		delete(additionalProperties, "network.ingress.proxy_send_timeout_seconds")
		delete(additionalProperties, "network.ingress.proxy_read_timeout_seconds")
		delete(additionalProperties, "network.ingress.proxy_buffering")
		delete(additionalProperties, "network.ingress.proxy_request_buffering")
		delete(additionalProperties, "network.ingress.grpc_send_timeout_seconds")
		delete(additionalProperties, "network.ingress.grpc_read_timeout_seconds")
		delete(additionalProperties, "network.ingress.whitelist_source_range")
		delete(additionalProperties, "network.ingress.denylist_source_range")
		delete(additionalProperties, "network.ingress.extra_headers")
		delete(additionalProperties, "network.ingress.basic_auth_env_var")
		delete(additionalProperties, "network.ingress.enable_sticky_session")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHelmAdvancedSettings struct {
	value *HelmAdvancedSettings
	isSet bool
}

func (v NullableHelmAdvancedSettings) Get() *HelmAdvancedSettings {
	return v.value
}

func (v *NullableHelmAdvancedSettings) Set(val *HelmAdvancedSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmAdvancedSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmAdvancedSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmAdvancedSettings(val *HelmAdvancedSettings) *NullableHelmAdvancedSettings {
	return &NullableHelmAdvancedSettings{value: val, isSet: true}
}

func (v NullableHelmAdvancedSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmAdvancedSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
