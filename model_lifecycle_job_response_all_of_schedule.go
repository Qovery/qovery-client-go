/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the LifecycleJobResponseAllOfSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LifecycleJobResponseAllOfSchedule{}

// LifecycleJobResponseAllOfSchedule struct for LifecycleJobResponseAllOfSchedule
type LifecycleJobResponseAllOfSchedule struct {
	OnStart              *JobRequestAllOfScheduleOnStart `json:"on_start,omitempty"`
	OnStop               *JobRequestAllOfScheduleOnStart `json:"on_stop,omitempty"`
	OnDelete             *JobRequestAllOfScheduleOnStart `json:"on_delete,omitempty"`
	LifecycleType        *JobLifecycleTypeEnum           `json:"lifecycle_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LifecycleJobResponseAllOfSchedule LifecycleJobResponseAllOfSchedule

// NewLifecycleJobResponseAllOfSchedule instantiates a new LifecycleJobResponseAllOfSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLifecycleJobResponseAllOfSchedule() *LifecycleJobResponseAllOfSchedule {
	this := LifecycleJobResponseAllOfSchedule{}
	return &this
}

// NewLifecycleJobResponseAllOfScheduleWithDefaults instantiates a new LifecycleJobResponseAllOfSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLifecycleJobResponseAllOfScheduleWithDefaults() *LifecycleJobResponseAllOfSchedule {
	this := LifecycleJobResponseAllOfSchedule{}
	return &this
}

// GetOnStart returns the OnStart field value if set, zero value otherwise.
func (o *LifecycleJobResponseAllOfSchedule) GetOnStart() JobRequestAllOfScheduleOnStart {
	if o == nil || IsNil(o.OnStart) {
		var ret JobRequestAllOfScheduleOnStart
		return ret
	}
	return *o.OnStart
}

// GetOnStartOk returns a tuple with the OnStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LifecycleJobResponseAllOfSchedule) GetOnStartOk() (*JobRequestAllOfScheduleOnStart, bool) {
	if o == nil || IsNil(o.OnStart) {
		return nil, false
	}
	return o.OnStart, true
}

// HasOnStart returns a boolean if a field has been set.
func (o *LifecycleJobResponseAllOfSchedule) HasOnStart() bool {
	if o != nil && !IsNil(o.OnStart) {
		return true
	}

	return false
}

// SetOnStart gets a reference to the given JobRequestAllOfScheduleOnStart and assigns it to the OnStart field.
func (o *LifecycleJobResponseAllOfSchedule) SetOnStart(v JobRequestAllOfScheduleOnStart) {
	o.OnStart = &v
}

// GetOnStop returns the OnStop field value if set, zero value otherwise.
func (o *LifecycleJobResponseAllOfSchedule) GetOnStop() JobRequestAllOfScheduleOnStart {
	if o == nil || IsNil(o.OnStop) {
		var ret JobRequestAllOfScheduleOnStart
		return ret
	}
	return *o.OnStop
}

// GetOnStopOk returns a tuple with the OnStop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LifecycleJobResponseAllOfSchedule) GetOnStopOk() (*JobRequestAllOfScheduleOnStart, bool) {
	if o == nil || IsNil(o.OnStop) {
		return nil, false
	}
	return o.OnStop, true
}

// HasOnStop returns a boolean if a field has been set.
func (o *LifecycleJobResponseAllOfSchedule) HasOnStop() bool {
	if o != nil && !IsNil(o.OnStop) {
		return true
	}

	return false
}

// SetOnStop gets a reference to the given JobRequestAllOfScheduleOnStart and assigns it to the OnStop field.
func (o *LifecycleJobResponseAllOfSchedule) SetOnStop(v JobRequestAllOfScheduleOnStart) {
	o.OnStop = &v
}

// GetOnDelete returns the OnDelete field value if set, zero value otherwise.
func (o *LifecycleJobResponseAllOfSchedule) GetOnDelete() JobRequestAllOfScheduleOnStart {
	if o == nil || IsNil(o.OnDelete) {
		var ret JobRequestAllOfScheduleOnStart
		return ret
	}
	return *o.OnDelete
}

// GetOnDeleteOk returns a tuple with the OnDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LifecycleJobResponseAllOfSchedule) GetOnDeleteOk() (*JobRequestAllOfScheduleOnStart, bool) {
	if o == nil || IsNil(o.OnDelete) {
		return nil, false
	}
	return o.OnDelete, true
}

// HasOnDelete returns a boolean if a field has been set.
func (o *LifecycleJobResponseAllOfSchedule) HasOnDelete() bool {
	if o != nil && !IsNil(o.OnDelete) {
		return true
	}

	return false
}

// SetOnDelete gets a reference to the given JobRequestAllOfScheduleOnStart and assigns it to the OnDelete field.
func (o *LifecycleJobResponseAllOfSchedule) SetOnDelete(v JobRequestAllOfScheduleOnStart) {
	o.OnDelete = &v
}

// GetLifecycleType returns the LifecycleType field value if set, zero value otherwise.
func (o *LifecycleJobResponseAllOfSchedule) GetLifecycleType() JobLifecycleTypeEnum {
	if o == nil || IsNil(o.LifecycleType) {
		var ret JobLifecycleTypeEnum
		return ret
	}
	return *o.LifecycleType
}

// GetLifecycleTypeOk returns a tuple with the LifecycleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LifecycleJobResponseAllOfSchedule) GetLifecycleTypeOk() (*JobLifecycleTypeEnum, bool) {
	if o == nil || IsNil(o.LifecycleType) {
		return nil, false
	}
	return o.LifecycleType, true
}

// HasLifecycleType returns a boolean if a field has been set.
func (o *LifecycleJobResponseAllOfSchedule) HasLifecycleType() bool {
	if o != nil && !IsNil(o.LifecycleType) {
		return true
	}

	return false
}

// SetLifecycleType gets a reference to the given JobLifecycleTypeEnum and assigns it to the LifecycleType field.
func (o *LifecycleJobResponseAllOfSchedule) SetLifecycleType(v JobLifecycleTypeEnum) {
	o.LifecycleType = &v
}

func (o LifecycleJobResponseAllOfSchedule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LifecycleJobResponseAllOfSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OnStart) {
		toSerialize["on_start"] = o.OnStart
	}
	if !IsNil(o.OnStop) {
		toSerialize["on_stop"] = o.OnStop
	}
	if !IsNil(o.OnDelete) {
		toSerialize["on_delete"] = o.OnDelete
	}
	if !IsNil(o.LifecycleType) {
		toSerialize["lifecycle_type"] = o.LifecycleType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LifecycleJobResponseAllOfSchedule) UnmarshalJSON(data []byte) (err error) {
	varLifecycleJobResponseAllOfSchedule := _LifecycleJobResponseAllOfSchedule{}

	err = json.Unmarshal(data, &varLifecycleJobResponseAllOfSchedule)

	if err != nil {
		return err
	}

	*o = LifecycleJobResponseAllOfSchedule(varLifecycleJobResponseAllOfSchedule)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "on_start")
		delete(additionalProperties, "on_stop")
		delete(additionalProperties, "on_delete")
		delete(additionalProperties, "lifecycle_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLifecycleJobResponseAllOfSchedule struct {
	value *LifecycleJobResponseAllOfSchedule
	isSet bool
}

func (v NullableLifecycleJobResponseAllOfSchedule) Get() *LifecycleJobResponseAllOfSchedule {
	return v.value
}

func (v *NullableLifecycleJobResponseAllOfSchedule) Set(val *LifecycleJobResponseAllOfSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableLifecycleJobResponseAllOfSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableLifecycleJobResponseAllOfSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLifecycleJobResponseAllOfSchedule(val *LifecycleJobResponseAllOfSchedule) *NullableLifecycleJobResponseAllOfSchedule {
	return &NullableLifecycleJobResponseAllOfSchedule{value: val, isSet: true}
}

func (v NullableLifecycleJobResponseAllOfSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLifecycleJobResponseAllOfSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
