/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// ThresholdMetricStatusEnum the model 'ThresholdMetricStatusEnum'
type ThresholdMetricStatusEnum string

// List of ThresholdMetricStatusEnum
const (
	THRESHOLDMETRICSTATUSENUM_OK      ThresholdMetricStatusEnum = "OK"
	THRESHOLDMETRICSTATUSENUM_WARNING ThresholdMetricStatusEnum = "Warning"
	THRESHOLDMETRICSTATUSENUM_ALERT   ThresholdMetricStatusEnum = "Alert"
)

// All allowed values of ThresholdMetricStatusEnum enum
var AllowedThresholdMetricStatusEnumEnumValues = []ThresholdMetricStatusEnum{
	"OK",
	"Warning",
	"Alert",
}

func (v *ThresholdMetricStatusEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ThresholdMetricStatusEnum(value)
	for _, existing := range AllowedThresholdMetricStatusEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ThresholdMetricStatusEnum", value)
}

// NewThresholdMetricStatusEnumFromValue returns a pointer to a valid ThresholdMetricStatusEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewThresholdMetricStatusEnumFromValue(v string) (*ThresholdMetricStatusEnum, error) {
	ev := ThresholdMetricStatusEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ThresholdMetricStatusEnum: valid values are %v", v, AllowedThresholdMetricStatusEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ThresholdMetricStatusEnum) IsValid() bool {
	for _, existing := range AllowedThresholdMetricStatusEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ThresholdMetricStatusEnum value
func (v ThresholdMetricStatusEnum) Ptr() *ThresholdMetricStatusEnum {
	return &v
}

type NullableThresholdMetricStatusEnum struct {
	value *ThresholdMetricStatusEnum
	isSet bool
}

func (v NullableThresholdMetricStatusEnum) Get() *ThresholdMetricStatusEnum {
	return v.value
}

func (v *NullableThresholdMetricStatusEnum) Set(val *ThresholdMetricStatusEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableThresholdMetricStatusEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableThresholdMetricStatusEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThresholdMetricStatusEnum(val *ThresholdMetricStatusEnum) *NullableThresholdMetricStatusEnum {
	return &NullableThresholdMetricStatusEnum{value: val, isSet: true}
}

func (v NullableThresholdMetricStatusEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThresholdMetricStatusEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
