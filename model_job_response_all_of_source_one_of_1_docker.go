/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the JobResponseAllOfSourceOneOf1Docker type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobResponseAllOfSourceOneOf1Docker{}

// JobResponseAllOfSourceOneOf1Docker struct for JobResponseAllOfSourceOneOf1Docker
type JobResponseAllOfSourceOneOf1Docker struct {
	// The path of the associated Dockerfile. Only if you are using build_mode = DOCKER
	DockerfilePath NullableString            `json:"dockerfile_path,omitempty"`
	GitRepository  *ApplicationGitRepository `json:"git_repository,omitempty"`
}

// NewJobResponseAllOfSourceOneOf1Docker instantiates a new JobResponseAllOfSourceOneOf1Docker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobResponseAllOfSourceOneOf1Docker() *JobResponseAllOfSourceOneOf1Docker {
	this := JobResponseAllOfSourceOneOf1Docker{}
	return &this
}

// NewJobResponseAllOfSourceOneOf1DockerWithDefaults instantiates a new JobResponseAllOfSourceOneOf1Docker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobResponseAllOfSourceOneOf1DockerWithDefaults() *JobResponseAllOfSourceOneOf1Docker {
	this := JobResponseAllOfSourceOneOf1Docker{}
	return &this
}

// GetDockerfilePath returns the DockerfilePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseAllOfSourceOneOf1Docker) GetDockerfilePath() string {
	if o == nil || IsNil(o.DockerfilePath.Get()) {
		var ret string
		return ret
	}
	return *o.DockerfilePath.Get()
}

// GetDockerfilePathOk returns a tuple with the DockerfilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseAllOfSourceOneOf1Docker) GetDockerfilePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DockerfilePath.Get(), o.DockerfilePath.IsSet()
}

// HasDockerfilePath returns a boolean if a field has been set.
func (o *JobResponseAllOfSourceOneOf1Docker) HasDockerfilePath() bool {
	if o != nil && o.DockerfilePath.IsSet() {
		return true
	}

	return false
}

// SetDockerfilePath gets a reference to the given NullableString and assigns it to the DockerfilePath field.
func (o *JobResponseAllOfSourceOneOf1Docker) SetDockerfilePath(v string) {
	o.DockerfilePath.Set(&v)
}

// SetDockerfilePathNil sets the value for DockerfilePath to be an explicit nil
func (o *JobResponseAllOfSourceOneOf1Docker) SetDockerfilePathNil() {
	o.DockerfilePath.Set(nil)
}

// UnsetDockerfilePath ensures that no value is present for DockerfilePath, not even an explicit nil
func (o *JobResponseAllOfSourceOneOf1Docker) UnsetDockerfilePath() {
	o.DockerfilePath.Unset()
}

// GetGitRepository returns the GitRepository field value if set, zero value otherwise.
func (o *JobResponseAllOfSourceOneOf1Docker) GetGitRepository() ApplicationGitRepository {
	if o == nil || IsNil(o.GitRepository) {
		var ret ApplicationGitRepository
		return ret
	}
	return *o.GitRepository
}

// GetGitRepositoryOk returns a tuple with the GitRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobResponseAllOfSourceOneOf1Docker) GetGitRepositoryOk() (*ApplicationGitRepository, bool) {
	if o == nil || IsNil(o.GitRepository) {
		return nil, false
	}
	return o.GitRepository, true
}

// HasGitRepository returns a boolean if a field has been set.
func (o *JobResponseAllOfSourceOneOf1Docker) HasGitRepository() bool {
	if o != nil && !IsNil(o.GitRepository) {
		return true
	}

	return false
}

// SetGitRepository gets a reference to the given ApplicationGitRepository and assigns it to the GitRepository field.
func (o *JobResponseAllOfSourceOneOf1Docker) SetGitRepository(v ApplicationGitRepository) {
	o.GitRepository = &v
}

func (o JobResponseAllOfSourceOneOf1Docker) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobResponseAllOfSourceOneOf1Docker) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DockerfilePath.IsSet() {
		toSerialize["dockerfile_path"] = o.DockerfilePath.Get()
	}
	if !IsNil(o.GitRepository) {
		toSerialize["git_repository"] = o.GitRepository
	}
	return toSerialize, nil
}

type NullableJobResponseAllOfSourceOneOf1Docker struct {
	value *JobResponseAllOfSourceOneOf1Docker
	isSet bool
}

func (v NullableJobResponseAllOfSourceOneOf1Docker) Get() *JobResponseAllOfSourceOneOf1Docker {
	return v.value
}

func (v *NullableJobResponseAllOfSourceOneOf1Docker) Set(val *JobResponseAllOfSourceOneOf1Docker) {
	v.value = val
	v.isSet = true
}

func (v NullableJobResponseAllOfSourceOneOf1Docker) IsSet() bool {
	return v.isSet
}

func (v *NullableJobResponseAllOfSourceOneOf1Docker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobResponseAllOfSourceOneOf1Docker(val *JobResponseAllOfSourceOneOf1Docker) *NullableJobResponseAllOfSourceOneOf1Docker {
	return &NullableJobResponseAllOfSourceOneOf1Docker{value: val, isSet: true}
}

func (v NullableJobResponseAllOfSourceOneOf1Docker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobResponseAllOfSourceOneOf1Docker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
