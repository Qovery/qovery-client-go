/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ServiceStepMetric struct for ServiceStepMetric
type ServiceStepMetric struct {
	StepName *ServiceStepMetricNameEnum `json:"step_name,omitempty"`
	Status   *StepMetricStatusEnum      `json:"status,omitempty"`
	// The duration of the step in seconds.
	DurationSec *int32 `json:"duration_sec,omitempty"`
}

// NewServiceStepMetric instantiates a new ServiceStepMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceStepMetric() *ServiceStepMetric {
	this := ServiceStepMetric{}
	return &this
}

// NewServiceStepMetricWithDefaults instantiates a new ServiceStepMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceStepMetricWithDefaults() *ServiceStepMetric {
	this := ServiceStepMetric{}
	return &this
}

// GetStepName returns the StepName field value if set, zero value otherwise.
func (o *ServiceStepMetric) GetStepName() ServiceStepMetricNameEnum {
	if o == nil || o.StepName == nil {
		var ret ServiceStepMetricNameEnum
		return ret
	}
	return *o.StepName
}

// GetStepNameOk returns a tuple with the StepName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStepMetric) GetStepNameOk() (*ServiceStepMetricNameEnum, bool) {
	if o == nil || o.StepName == nil {
		return nil, false
	}
	return o.StepName, true
}

// HasStepName returns a boolean if a field has been set.
func (o *ServiceStepMetric) HasStepName() bool {
	if o != nil && o.StepName != nil {
		return true
	}

	return false
}

// SetStepName gets a reference to the given ServiceStepMetricNameEnum and assigns it to the StepName field.
func (o *ServiceStepMetric) SetStepName(v ServiceStepMetricNameEnum) {
	o.StepName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServiceStepMetric) GetStatus() StepMetricStatusEnum {
	if o == nil || o.Status == nil {
		var ret StepMetricStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStepMetric) GetStatusOk() (*StepMetricStatusEnum, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServiceStepMetric) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given StepMetricStatusEnum and assigns it to the Status field.
func (o *ServiceStepMetric) SetStatus(v StepMetricStatusEnum) {
	o.Status = &v
}

// GetDurationSec returns the DurationSec field value if set, zero value otherwise.
func (o *ServiceStepMetric) GetDurationSec() int32 {
	if o == nil || o.DurationSec == nil {
		var ret int32
		return ret
	}
	return *o.DurationSec
}

// GetDurationSecOk returns a tuple with the DurationSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStepMetric) GetDurationSecOk() (*int32, bool) {
	if o == nil || o.DurationSec == nil {
		return nil, false
	}
	return o.DurationSec, true
}

// HasDurationSec returns a boolean if a field has been set.
func (o *ServiceStepMetric) HasDurationSec() bool {
	if o != nil && o.DurationSec != nil {
		return true
	}

	return false
}

// SetDurationSec gets a reference to the given int32 and assigns it to the DurationSec field.
func (o *ServiceStepMetric) SetDurationSec(v int32) {
	o.DurationSec = &v
}

func (o ServiceStepMetric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StepName != nil {
		toSerialize["step_name"] = o.StepName
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.DurationSec != nil {
		toSerialize["duration_sec"] = o.DurationSec
	}
	return json.Marshal(toSerialize)
}

type NullableServiceStepMetric struct {
	value *ServiceStepMetric
	isSet bool
}

func (v NullableServiceStepMetric) Get() *ServiceStepMetric {
	return v.value
}

func (v *NullableServiceStepMetric) Set(val *ServiceStepMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceStepMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceStepMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceStepMetric(val *ServiceStepMetric) *NullableServiceStepMetric {
	return &NullableServiceStepMetric{value: val, isSet: true}
}

func (v NullableServiceStepMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceStepMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
