/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// OrganizationApiTokenAllOf struct for OrganizationApiTokenAllOf
type OrganizationApiTokenAllOf struct {
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	RoleName    *string `json:"roleName,omitempty"`
	RoleId      *string `json:"roleId,omitempty"`
}

// NewOrganizationApiTokenAllOf instantiates a new OrganizationApiTokenAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationApiTokenAllOf() *OrganizationApiTokenAllOf {
	this := OrganizationApiTokenAllOf{}
	return &this
}

// NewOrganizationApiTokenAllOfWithDefaults instantiates a new OrganizationApiTokenAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationApiTokenAllOfWithDefaults() *OrganizationApiTokenAllOf {
	this := OrganizationApiTokenAllOf{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationApiTokenAllOf) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationApiTokenAllOf) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationApiTokenAllOf) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationApiTokenAllOf) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrganizationApiTokenAllOf) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationApiTokenAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrganizationApiTokenAllOf) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrganizationApiTokenAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *OrganizationApiTokenAllOf) GetRoleName() string {
	if o == nil || o.RoleName == nil {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationApiTokenAllOf) GetRoleNameOk() (*string, bool) {
	if o == nil || o.RoleName == nil {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *OrganizationApiTokenAllOf) HasRoleName() bool {
	if o != nil && o.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *OrganizationApiTokenAllOf) SetRoleName(v string) {
	o.RoleName = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *OrganizationApiTokenAllOf) GetRoleId() string {
	if o == nil || o.RoleId == nil {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationApiTokenAllOf) GetRoleIdOk() (*string, bool) {
	if o == nil || o.RoleId == nil {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *OrganizationApiTokenAllOf) HasRoleId() bool {
	if o != nil && o.RoleId != nil {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *OrganizationApiTokenAllOf) SetRoleId(v string) {
	o.RoleId = &v
}

func (o OrganizationApiTokenAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.RoleName != nil {
		toSerialize["roleName"] = o.RoleName
	}
	if o.RoleId != nil {
		toSerialize["roleId"] = o.RoleId
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationApiTokenAllOf struct {
	value *OrganizationApiTokenAllOf
	isSet bool
}

func (v NullableOrganizationApiTokenAllOf) Get() *OrganizationApiTokenAllOf {
	return v.value
}

func (v *NullableOrganizationApiTokenAllOf) Set(val *OrganizationApiTokenAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationApiTokenAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationApiTokenAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationApiTokenAllOf(val *OrganizationApiTokenAllOf) *NullableOrganizationApiTokenAllOf {
	return &NullableOrganizationApiTokenAllOf{value: val, isSet: true}
}

func (v NullableOrganizationApiTokenAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationApiTokenAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
