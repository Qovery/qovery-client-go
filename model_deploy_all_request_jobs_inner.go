/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the DeployAllRequestJobsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployAllRequestJobsInner{}

// DeployAllRequestJobsInner struct for DeployAllRequestJobsInner
type DeployAllRequestJobsInner struct {
	// id of the job to be updated.
	Id *string `json:"id,omitempty"`
	// new tag for the job image. Use only if job is an image source. Can be empty only if the service has been already deployed (in this case the service version won't be changed)
	ImageTag *string `json:"image_tag,omitempty"`
	// Commit ID to deploy. Use only if job is a repository source. Can be empty only if the service has been already deployed (in this case the service version won't be changed)
	GitCommitId *string `json:"git_commit_id,omitempty"`
}

// NewDeployAllRequestJobsInner instantiates a new DeployAllRequestJobsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployAllRequestJobsInner() *DeployAllRequestJobsInner {
	this := DeployAllRequestJobsInner{}
	return &this
}

// NewDeployAllRequestJobsInnerWithDefaults instantiates a new DeployAllRequestJobsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployAllRequestJobsInnerWithDefaults() *DeployAllRequestJobsInner {
	this := DeployAllRequestJobsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DeployAllRequestJobsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployAllRequestJobsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DeployAllRequestJobsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DeployAllRequestJobsInner) SetId(v string) {
	o.Id = &v
}

// GetImageTag returns the ImageTag field value if set, zero value otherwise.
func (o *DeployAllRequestJobsInner) GetImageTag() string {
	if o == nil || IsNil(o.ImageTag) {
		var ret string
		return ret
	}
	return *o.ImageTag
}

// GetImageTagOk returns a tuple with the ImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployAllRequestJobsInner) GetImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ImageTag) {
		return nil, false
	}
	return o.ImageTag, true
}

// HasImageTag returns a boolean if a field has been set.
func (o *DeployAllRequestJobsInner) HasImageTag() bool {
	if o != nil && !IsNil(o.ImageTag) {
		return true
	}

	return false
}

// SetImageTag gets a reference to the given string and assigns it to the ImageTag field.
func (o *DeployAllRequestJobsInner) SetImageTag(v string) {
	o.ImageTag = &v
}

// GetGitCommitId returns the GitCommitId field value if set, zero value otherwise.
func (o *DeployAllRequestJobsInner) GetGitCommitId() string {
	if o == nil || IsNil(o.GitCommitId) {
		var ret string
		return ret
	}
	return *o.GitCommitId
}

// GetGitCommitIdOk returns a tuple with the GitCommitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployAllRequestJobsInner) GetGitCommitIdOk() (*string, bool) {
	if o == nil || IsNil(o.GitCommitId) {
		return nil, false
	}
	return o.GitCommitId, true
}

// HasGitCommitId returns a boolean if a field has been set.
func (o *DeployAllRequestJobsInner) HasGitCommitId() bool {
	if o != nil && !IsNil(o.GitCommitId) {
		return true
	}

	return false
}

// SetGitCommitId gets a reference to the given string and assigns it to the GitCommitId field.
func (o *DeployAllRequestJobsInner) SetGitCommitId(v string) {
	o.GitCommitId = &v
}

func (o DeployAllRequestJobsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployAllRequestJobsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ImageTag) {
		toSerialize["image_tag"] = o.ImageTag
	}
	if !IsNil(o.GitCommitId) {
		toSerialize["git_commit_id"] = o.GitCommitId
	}
	return toSerialize, nil
}

type NullableDeployAllRequestJobsInner struct {
	value *DeployAllRequestJobsInner
	isSet bool
}

func (v NullableDeployAllRequestJobsInner) Get() *DeployAllRequestJobsInner {
	return v.value
}

func (v *NullableDeployAllRequestJobsInner) Set(val *DeployAllRequestJobsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployAllRequestJobsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployAllRequestJobsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployAllRequestJobsInner(val *DeployAllRequestJobsInner) *NullableDeployAllRequestJobsInner {
	return &NullableDeployAllRequestJobsInner{value: val, isSet: true}
}

func (v NullableDeployAllRequestJobsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployAllRequestJobsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
