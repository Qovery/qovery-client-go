/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the GitTokenAssociatedServiceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GitTokenAssociatedServiceResponse{}

// GitTokenAssociatedServiceResponse struct for GitTokenAssociatedServiceResponse
type GitTokenAssociatedServiceResponse struct {
	ProjectId       string                        `json:"project_id"`
	ProjectName     string                        `json:"project_name"`
	EnvironmentId   string                        `json:"environment_id"`
	EnvironmentName string                        `json:"environment_name"`
	ServiceId       string                        `json:"service_id"`
	ServiceName     string                        `json:"service_name"`
	ServiceType     GitTokenAssociatedServiceType `json:"service_type"`
}

// NewGitTokenAssociatedServiceResponse instantiates a new GitTokenAssociatedServiceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGitTokenAssociatedServiceResponse(projectId string, projectName string, environmentId string, environmentName string, serviceId string, serviceName string, serviceType GitTokenAssociatedServiceType) *GitTokenAssociatedServiceResponse {
	this := GitTokenAssociatedServiceResponse{}
	this.ProjectId = projectId
	this.ProjectName = projectName
	this.EnvironmentId = environmentId
	this.EnvironmentName = environmentName
	this.ServiceId = serviceId
	this.ServiceName = serviceName
	this.ServiceType = serviceType
	return &this
}

// NewGitTokenAssociatedServiceResponseWithDefaults instantiates a new GitTokenAssociatedServiceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitTokenAssociatedServiceResponseWithDefaults() *GitTokenAssociatedServiceResponse {
	this := GitTokenAssociatedServiceResponse{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *GitTokenAssociatedServiceResponse) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *GitTokenAssociatedServiceResponse) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *GitTokenAssociatedServiceResponse) SetProjectId(v string) {
	o.ProjectId = v
}

// GetProjectName returns the ProjectName field value
func (o *GitTokenAssociatedServiceResponse) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *GitTokenAssociatedServiceResponse) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *GitTokenAssociatedServiceResponse) SetProjectName(v string) {
	o.ProjectName = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *GitTokenAssociatedServiceResponse) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *GitTokenAssociatedServiceResponse) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *GitTokenAssociatedServiceResponse) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetEnvironmentName returns the EnvironmentName field value
func (o *GitTokenAssociatedServiceResponse) GetEnvironmentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentName
}

// GetEnvironmentNameOk returns a tuple with the EnvironmentName field value
// and a boolean to check if the value has been set.
func (o *GitTokenAssociatedServiceResponse) GetEnvironmentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentName, true
}

// SetEnvironmentName sets field value
func (o *GitTokenAssociatedServiceResponse) SetEnvironmentName(v string) {
	o.EnvironmentName = v
}

// GetServiceId returns the ServiceId field value
func (o *GitTokenAssociatedServiceResponse) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *GitTokenAssociatedServiceResponse) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *GitTokenAssociatedServiceResponse) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceName returns the ServiceName field value
func (o *GitTokenAssociatedServiceResponse) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *GitTokenAssociatedServiceResponse) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *GitTokenAssociatedServiceResponse) SetServiceName(v string) {
	o.ServiceName = v
}

// GetServiceType returns the ServiceType field value
func (o *GitTokenAssociatedServiceResponse) GetServiceType() GitTokenAssociatedServiceType {
	if o == nil {
		var ret GitTokenAssociatedServiceType
		return ret
	}

	return o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value
// and a boolean to check if the value has been set.
func (o *GitTokenAssociatedServiceResponse) GetServiceTypeOk() (*GitTokenAssociatedServiceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceType, true
}

// SetServiceType sets field value
func (o *GitTokenAssociatedServiceResponse) SetServiceType(v GitTokenAssociatedServiceType) {
	o.ServiceType = v
}

func (o GitTokenAssociatedServiceResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GitTokenAssociatedServiceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["project_id"] = o.ProjectId
	toSerialize["project_name"] = o.ProjectName
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["environment_name"] = o.EnvironmentName
	toSerialize["service_id"] = o.ServiceId
	toSerialize["service_name"] = o.ServiceName
	toSerialize["service_type"] = o.ServiceType
	return toSerialize, nil
}

type NullableGitTokenAssociatedServiceResponse struct {
	value *GitTokenAssociatedServiceResponse
	isSet bool
}

func (v NullableGitTokenAssociatedServiceResponse) Get() *GitTokenAssociatedServiceResponse {
	return v.value
}

func (v *NullableGitTokenAssociatedServiceResponse) Set(val *GitTokenAssociatedServiceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGitTokenAssociatedServiceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGitTokenAssociatedServiceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitTokenAssociatedServiceResponse(val *GitTokenAssociatedServiceResponse) *NullableGitTokenAssociatedServiceResponse {
	return &NullableGitTokenAssociatedServiceResponse{value: val, isSet: true}
}

func (v NullableGitTokenAssociatedServiceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitTokenAssociatedServiceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
