/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the ClusterStatusGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterStatusGet{}

// ClusterStatusGet struct for ClusterStatusGet
type ClusterStatusGet struct {
	ClusterId            *string           `json:"cluster_id,omitempty"`
	Status               *ClusterStateEnum `json:"status,omitempty"`
	IsDeployed           *bool             `json:"is_deployed,omitempty"`
	LastExecutionId      *string           `json:"last_execution_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClusterStatusGet ClusterStatusGet

// NewClusterStatusGet instantiates a new ClusterStatusGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterStatusGet() *ClusterStatusGet {
	this := ClusterStatusGet{}
	return &this
}

// NewClusterStatusGetWithDefaults instantiates a new ClusterStatusGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterStatusGetWithDefaults() *ClusterStatusGet {
	this := ClusterStatusGet{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *ClusterStatusGet) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusGet) GetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *ClusterStatusGet) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *ClusterStatusGet) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClusterStatusGet) GetStatus() ClusterStateEnum {
	if o == nil || IsNil(o.Status) {
		var ret ClusterStateEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusGet) GetStatusOk() (*ClusterStateEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterStatusGet) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ClusterStateEnum and assigns it to the Status field.
func (o *ClusterStatusGet) SetStatus(v ClusterStateEnum) {
	o.Status = &v
}

// GetIsDeployed returns the IsDeployed field value if set, zero value otherwise.
func (o *ClusterStatusGet) GetIsDeployed() bool {
	if o == nil || IsNil(o.IsDeployed) {
		var ret bool
		return ret
	}
	return *o.IsDeployed
}

// GetIsDeployedOk returns a tuple with the IsDeployed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusGet) GetIsDeployedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeployed) {
		return nil, false
	}
	return o.IsDeployed, true
}

// HasIsDeployed returns a boolean if a field has been set.
func (o *ClusterStatusGet) HasIsDeployed() bool {
	if o != nil && !IsNil(o.IsDeployed) {
		return true
	}

	return false
}

// SetIsDeployed gets a reference to the given bool and assigns it to the IsDeployed field.
func (o *ClusterStatusGet) SetIsDeployed(v bool) {
	o.IsDeployed = &v
}

// GetLastExecutionId returns the LastExecutionId field value if set, zero value otherwise.
func (o *ClusterStatusGet) GetLastExecutionId() string {
	if o == nil || IsNil(o.LastExecutionId) {
		var ret string
		return ret
	}
	return *o.LastExecutionId
}

// GetLastExecutionIdOk returns a tuple with the LastExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusGet) GetLastExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastExecutionId) {
		return nil, false
	}
	return o.LastExecutionId, true
}

// HasLastExecutionId returns a boolean if a field has been set.
func (o *ClusterStatusGet) HasLastExecutionId() bool {
	if o != nil && !IsNil(o.LastExecutionId) {
		return true
	}

	return false
}

// SetLastExecutionId gets a reference to the given string and assigns it to the LastExecutionId field.
func (o *ClusterStatusGet) SetLastExecutionId(v string) {
	o.LastExecutionId = &v
}

func (o ClusterStatusGet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterStatusGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.IsDeployed) {
		toSerialize["is_deployed"] = o.IsDeployed
	}
	if !IsNil(o.LastExecutionId) {
		toSerialize["last_execution_id"] = o.LastExecutionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterStatusGet) UnmarshalJSON(data []byte) (err error) {
	varClusterStatusGet := _ClusterStatusGet{}

	err = json.Unmarshal(data, &varClusterStatusGet)

	if err != nil {
		return err
	}

	*o = ClusterStatusGet(varClusterStatusGet)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cluster_id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "is_deployed")
		delete(additionalProperties, "last_execution_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterStatusGet struct {
	value *ClusterStatusGet
	isSet bool
}

func (v NullableClusterStatusGet) Get() *ClusterStatusGet {
	return v.value
}

func (v *NullableClusterStatusGet) Set(val *ClusterStatusGet) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterStatusGet) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterStatusGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterStatusGet(val *ClusterStatusGet) *NullableClusterStatusGet {
	return &NullableClusterStatusGet{value: val, isSet: true}
}

func (v NullableClusterStatusGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterStatusGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
