/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the ClusterInfrastructureChartsParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterInfrastructureChartsParameters{}

// ClusterInfrastructureChartsParameters struct for ClusterInfrastructureChartsParameters
type ClusterInfrastructureChartsParameters struct {
	NginxParameters       *ClusterInfrastructureNginxChartParameters       `json:"nginx_parameters,omitempty"`
	CertManagerParameters *ClusterInfrastructureCertManagerChartParameters `json:"cert_manager_parameters,omitempty"`
	MetalLbParameters     *ClusterInfrastructureMetalLbChartParameters     `json:"metalLb_parameters,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _ClusterInfrastructureChartsParameters ClusterInfrastructureChartsParameters

// NewClusterInfrastructureChartsParameters instantiates a new ClusterInfrastructureChartsParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterInfrastructureChartsParameters() *ClusterInfrastructureChartsParameters {
	this := ClusterInfrastructureChartsParameters{}
	return &this
}

// NewClusterInfrastructureChartsParametersWithDefaults instantiates a new ClusterInfrastructureChartsParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterInfrastructureChartsParametersWithDefaults() *ClusterInfrastructureChartsParameters {
	this := ClusterInfrastructureChartsParameters{}
	return &this
}

// GetNginxParameters returns the NginxParameters field value if set, zero value otherwise.
func (o *ClusterInfrastructureChartsParameters) GetNginxParameters() ClusterInfrastructureNginxChartParameters {
	if o == nil || IsNil(o.NginxParameters) {
		var ret ClusterInfrastructureNginxChartParameters
		return ret
	}
	return *o.NginxParameters
}

// GetNginxParametersOk returns a tuple with the NginxParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInfrastructureChartsParameters) GetNginxParametersOk() (*ClusterInfrastructureNginxChartParameters, bool) {
	if o == nil || IsNil(o.NginxParameters) {
		return nil, false
	}
	return o.NginxParameters, true
}

// HasNginxParameters returns a boolean if a field has been set.
func (o *ClusterInfrastructureChartsParameters) HasNginxParameters() bool {
	if o != nil && !IsNil(o.NginxParameters) {
		return true
	}

	return false
}

// SetNginxParameters gets a reference to the given ClusterInfrastructureNginxChartParameters and assigns it to the NginxParameters field.
func (o *ClusterInfrastructureChartsParameters) SetNginxParameters(v ClusterInfrastructureNginxChartParameters) {
	o.NginxParameters = &v
}

// GetCertManagerParameters returns the CertManagerParameters field value if set, zero value otherwise.
func (o *ClusterInfrastructureChartsParameters) GetCertManagerParameters() ClusterInfrastructureCertManagerChartParameters {
	if o == nil || IsNil(o.CertManagerParameters) {
		var ret ClusterInfrastructureCertManagerChartParameters
		return ret
	}
	return *o.CertManagerParameters
}

// GetCertManagerParametersOk returns a tuple with the CertManagerParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInfrastructureChartsParameters) GetCertManagerParametersOk() (*ClusterInfrastructureCertManagerChartParameters, bool) {
	if o == nil || IsNil(o.CertManagerParameters) {
		return nil, false
	}
	return o.CertManagerParameters, true
}

// HasCertManagerParameters returns a boolean if a field has been set.
func (o *ClusterInfrastructureChartsParameters) HasCertManagerParameters() bool {
	if o != nil && !IsNil(o.CertManagerParameters) {
		return true
	}

	return false
}

// SetCertManagerParameters gets a reference to the given ClusterInfrastructureCertManagerChartParameters and assigns it to the CertManagerParameters field.
func (o *ClusterInfrastructureChartsParameters) SetCertManagerParameters(v ClusterInfrastructureCertManagerChartParameters) {
	o.CertManagerParameters = &v
}

// GetMetalLbParameters returns the MetalLbParameters field value if set, zero value otherwise.
func (o *ClusterInfrastructureChartsParameters) GetMetalLbParameters() ClusterInfrastructureMetalLbChartParameters {
	if o == nil || IsNil(o.MetalLbParameters) {
		var ret ClusterInfrastructureMetalLbChartParameters
		return ret
	}
	return *o.MetalLbParameters
}

// GetMetalLbParametersOk returns a tuple with the MetalLbParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInfrastructureChartsParameters) GetMetalLbParametersOk() (*ClusterInfrastructureMetalLbChartParameters, bool) {
	if o == nil || IsNil(o.MetalLbParameters) {
		return nil, false
	}
	return o.MetalLbParameters, true
}

// HasMetalLbParameters returns a boolean if a field has been set.
func (o *ClusterInfrastructureChartsParameters) HasMetalLbParameters() bool {
	if o != nil && !IsNil(o.MetalLbParameters) {
		return true
	}

	return false
}

// SetMetalLbParameters gets a reference to the given ClusterInfrastructureMetalLbChartParameters and assigns it to the MetalLbParameters field.
func (o *ClusterInfrastructureChartsParameters) SetMetalLbParameters(v ClusterInfrastructureMetalLbChartParameters) {
	o.MetalLbParameters = &v
}

func (o ClusterInfrastructureChartsParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterInfrastructureChartsParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NginxParameters) {
		toSerialize["nginx_parameters"] = o.NginxParameters
	}
	if !IsNil(o.CertManagerParameters) {
		toSerialize["cert_manager_parameters"] = o.CertManagerParameters
	}
	if !IsNil(o.MetalLbParameters) {
		toSerialize["metalLb_parameters"] = o.MetalLbParameters
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterInfrastructureChartsParameters) UnmarshalJSON(data []byte) (err error) {
	varClusterInfrastructureChartsParameters := _ClusterInfrastructureChartsParameters{}

	err = json.Unmarshal(data, &varClusterInfrastructureChartsParameters)

	if err != nil {
		return err
	}

	*o = ClusterInfrastructureChartsParameters(varClusterInfrastructureChartsParameters)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "nginx_parameters")
		delete(additionalProperties, "cert_manager_parameters")
		delete(additionalProperties, "metalLb_parameters")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterInfrastructureChartsParameters struct {
	value *ClusterInfrastructureChartsParameters
	isSet bool
}

func (v NullableClusterInfrastructureChartsParameters) Get() *ClusterInfrastructureChartsParameters {
	return v.value
}

func (v *NullableClusterInfrastructureChartsParameters) Set(val *ClusterInfrastructureChartsParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterInfrastructureChartsParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterInfrastructureChartsParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterInfrastructureChartsParameters(val *ClusterInfrastructureChartsParameters) *NullableClusterInfrastructureChartsParameters {
	return &NullableClusterInfrastructureChartsParameters{value: val, isSet: true}
}

func (v NullableClusterInfrastructureChartsParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterInfrastructureChartsParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
