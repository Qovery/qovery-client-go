/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the ServicePort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicePort{}

// ServicePort struct for ServicePort
type ServicePort struct {
	Id   string  `json:"id"`
	Name *string `json:"name,omitempty"`
	// The listening port of your service.
	InternalPort int32 `json:"internal_port"`
	// The exposed port for your service. This is optional. If not set a default port will be used.
	ExternalPort *int32 `json:"external_port,omitempty"`
	// Expose the port to the world
	PubliclyAccessible bool `json:"publicly_accessible"`
	// is the default port to use for domain
	IsDefault *bool            `json:"is_default,omitempty"`
	Protocol  PortProtocolEnum `json:"protocol"`
}

// NewServicePort instantiates a new ServicePort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePort(id string, internalPort int32, publiclyAccessible bool, protocol PortProtocolEnum) *ServicePort {
	this := ServicePort{}
	this.Id = id
	this.InternalPort = internalPort
	this.PubliclyAccessible = publiclyAccessible
	this.Protocol = protocol
	return &this
}

// NewServicePortWithDefaults instantiates a new ServicePort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePortWithDefaults() *ServicePort {
	this := ServicePort{}
	var protocol PortProtocolEnum = PORTPROTOCOLENUM_HTTP
	this.Protocol = protocol
	return &this
}

// GetId returns the Id field value
func (o *ServicePort) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServicePort) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ServicePort) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServicePort) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePort) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServicePort) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServicePort) SetName(v string) {
	o.Name = &v
}

// GetInternalPort returns the InternalPort field value
func (o *ServicePort) GetInternalPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InternalPort
}

// GetInternalPortOk returns a tuple with the InternalPort field value
// and a boolean to check if the value has been set.
func (o *ServicePort) GetInternalPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InternalPort, true
}

// SetInternalPort sets field value
func (o *ServicePort) SetInternalPort(v int32) {
	o.InternalPort = v
}

// GetExternalPort returns the ExternalPort field value if set, zero value otherwise.
func (o *ServicePort) GetExternalPort() int32 {
	if o == nil || IsNil(o.ExternalPort) {
		var ret int32
		return ret
	}
	return *o.ExternalPort
}

// GetExternalPortOk returns a tuple with the ExternalPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePort) GetExternalPortOk() (*int32, bool) {
	if o == nil || IsNil(o.ExternalPort) {
		return nil, false
	}
	return o.ExternalPort, true
}

// HasExternalPort returns a boolean if a field has been set.
func (o *ServicePort) HasExternalPort() bool {
	if o != nil && !IsNil(o.ExternalPort) {
		return true
	}

	return false
}

// SetExternalPort gets a reference to the given int32 and assigns it to the ExternalPort field.
func (o *ServicePort) SetExternalPort(v int32) {
	o.ExternalPort = &v
}

// GetPubliclyAccessible returns the PubliclyAccessible field value
func (o *ServicePort) GetPubliclyAccessible() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PubliclyAccessible
}

// GetPubliclyAccessibleOk returns a tuple with the PubliclyAccessible field value
// and a boolean to check if the value has been set.
func (o *ServicePort) GetPubliclyAccessibleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PubliclyAccessible, true
}

// SetPubliclyAccessible sets field value
func (o *ServicePort) SetPubliclyAccessible(v bool) {
	o.PubliclyAccessible = v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *ServicePort) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePort) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *ServicePort) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *ServicePort) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetProtocol returns the Protocol field value
func (o *ServicePort) GetProtocol() PortProtocolEnum {
	if o == nil {
		var ret PortProtocolEnum
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *ServicePort) GetProtocolOk() (*PortProtocolEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *ServicePort) SetProtocol(v PortProtocolEnum) {
	o.Protocol = v
}

func (o ServicePort) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicePort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["internal_port"] = o.InternalPort
	if !IsNil(o.ExternalPort) {
		toSerialize["external_port"] = o.ExternalPort
	}
	toSerialize["publicly_accessible"] = o.PubliclyAccessible
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	toSerialize["protocol"] = o.Protocol
	return toSerialize, nil
}

type NullableServicePort struct {
	value *ServicePort
	isSet bool
}

func (v NullableServicePort) Get() *ServicePort {
	return v.value
}

func (v *NullableServicePort) Set(val *ServicePort) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePort) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePort(val *ServicePort) *NullableServicePort {
	return &NullableServicePort{value: val, isSet: true}
}

func (v NullableServicePort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
