/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the HelmRequestAllOfValuesOverrideFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelmRequestAllOfValuesOverrideFile{}

// HelmRequestAllOfValuesOverrideFile struct for HelmRequestAllOfValuesOverrideFile
type HelmRequestAllOfValuesOverrideFile struct {
	Raw           NullableHelmRequestAllOfValuesOverrideFileRaw `json:"raw,omitempty"`
	GitRepository *HelmValuesGitRepositoryRequest               `json:"git_repository,omitempty"`
}

// NewHelmRequestAllOfValuesOverrideFile instantiates a new HelmRequestAllOfValuesOverrideFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmRequestAllOfValuesOverrideFile() *HelmRequestAllOfValuesOverrideFile {
	this := HelmRequestAllOfValuesOverrideFile{}
	return &this
}

// NewHelmRequestAllOfValuesOverrideFileWithDefaults instantiates a new HelmRequestAllOfValuesOverrideFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmRequestAllOfValuesOverrideFileWithDefaults() *HelmRequestAllOfValuesOverrideFile {
	this := HelmRequestAllOfValuesOverrideFile{}
	return &this
}

// GetRaw returns the Raw field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HelmRequestAllOfValuesOverrideFile) GetRaw() HelmRequestAllOfValuesOverrideFileRaw {
	if o == nil || IsNil(o.Raw.Get()) {
		var ret HelmRequestAllOfValuesOverrideFileRaw
		return ret
	}
	return *o.Raw.Get()
}

// GetRawOk returns a tuple with the Raw field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HelmRequestAllOfValuesOverrideFile) GetRawOk() (*HelmRequestAllOfValuesOverrideFileRaw, bool) {
	if o == nil {
		return nil, false
	}
	return o.Raw.Get(), o.Raw.IsSet()
}

// HasRaw returns a boolean if a field has been set.
func (o *HelmRequestAllOfValuesOverrideFile) HasRaw() bool {
	if o != nil && o.Raw.IsSet() {
		return true
	}

	return false
}

// SetRaw gets a reference to the given NullableHelmRequestAllOfValuesOverrideFileRaw and assigns it to the Raw field.
func (o *HelmRequestAllOfValuesOverrideFile) SetRaw(v HelmRequestAllOfValuesOverrideFileRaw) {
	o.Raw.Set(&v)
}

// SetRawNil sets the value for Raw to be an explicit nil
func (o *HelmRequestAllOfValuesOverrideFile) SetRawNil() {
	o.Raw.Set(nil)
}

// UnsetRaw ensures that no value is present for Raw, not even an explicit nil
func (o *HelmRequestAllOfValuesOverrideFile) UnsetRaw() {
	o.Raw.Unset()
}

// GetGitRepository returns the GitRepository field value if set, zero value otherwise.
func (o *HelmRequestAllOfValuesOverrideFile) GetGitRepository() HelmValuesGitRepositoryRequest {
	if o == nil || IsNil(o.GitRepository) {
		var ret HelmValuesGitRepositoryRequest
		return ret
	}
	return *o.GitRepository
}

// GetGitRepositoryOk returns a tuple with the GitRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRequestAllOfValuesOverrideFile) GetGitRepositoryOk() (*HelmValuesGitRepositoryRequest, bool) {
	if o == nil || IsNil(o.GitRepository) {
		return nil, false
	}
	return o.GitRepository, true
}

// HasGitRepository returns a boolean if a field has been set.
func (o *HelmRequestAllOfValuesOverrideFile) HasGitRepository() bool {
	if o != nil && !IsNil(o.GitRepository) {
		return true
	}

	return false
}

// SetGitRepository gets a reference to the given HelmValuesGitRepositoryRequest and assigns it to the GitRepository field.
func (o *HelmRequestAllOfValuesOverrideFile) SetGitRepository(v HelmValuesGitRepositoryRequest) {
	o.GitRepository = &v
}

func (o HelmRequestAllOfValuesOverrideFile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelmRequestAllOfValuesOverrideFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Raw.IsSet() {
		toSerialize["raw"] = o.Raw.Get()
	}
	if !IsNil(o.GitRepository) {
		toSerialize["git_repository"] = o.GitRepository
	}
	return toSerialize, nil
}

type NullableHelmRequestAllOfValuesOverrideFile struct {
	value *HelmRequestAllOfValuesOverrideFile
	isSet bool
}

func (v NullableHelmRequestAllOfValuesOverrideFile) Get() *HelmRequestAllOfValuesOverrideFile {
	return v.value
}

func (v *NullableHelmRequestAllOfValuesOverrideFile) Set(val *HelmRequestAllOfValuesOverrideFile) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmRequestAllOfValuesOverrideFile) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmRequestAllOfValuesOverrideFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmRequestAllOfValuesOverrideFile(val *HelmRequestAllOfValuesOverrideFile) *NullableHelmRequestAllOfValuesOverrideFile {
	return &NullableHelmRequestAllOfValuesOverrideFile{value: val, isSet: true}
}

func (v NullableHelmRequestAllOfValuesOverrideFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmRequestAllOfValuesOverrideFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
