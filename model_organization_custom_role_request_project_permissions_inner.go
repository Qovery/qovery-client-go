/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// OrganizationCustomRoleRequestProjectPermissionsInner struct for OrganizationCustomRoleRequestProjectPermissionsInner
type OrganizationCustomRoleRequestProjectPermissionsInner struct {
	ProjectId *string `json:"project_id,omitempty"`
	// If `is_admin` is `true`, the user is: - automatically `MANAGER` for each environment type - allowed to manage project deployment rules - able to delete the project Note that `permissions` can then be ignored for this project
	IsAdmin *bool `json:"is_admin,omitempty"`
	// Mandatory if `is_admin` is `false`   Should contain an entry for every environment type: - `DEVELOPMENT` - `PREVIEW` - `STAGING` - `PRODUCTION`
	Permissions []OrganizationCustomRoleRequestProjectPermissionsInnerPermissionsInner `json:"permissions,omitempty"`
}

// NewOrganizationCustomRoleRequestProjectPermissionsInner instantiates a new OrganizationCustomRoleRequestProjectPermissionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationCustomRoleRequestProjectPermissionsInner() *OrganizationCustomRoleRequestProjectPermissionsInner {
	this := OrganizationCustomRoleRequestProjectPermissionsInner{}
	var isAdmin bool = false
	this.IsAdmin = &isAdmin
	return &this
}

// NewOrganizationCustomRoleRequestProjectPermissionsInnerWithDefaults instantiates a new OrganizationCustomRoleRequestProjectPermissionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationCustomRoleRequestProjectPermissionsInnerWithDefaults() *OrganizationCustomRoleRequestProjectPermissionsInner {
	this := OrganizationCustomRoleRequestProjectPermissionsInner{}
	var isAdmin bool = false
	this.IsAdmin = &isAdmin
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) GetIsAdmin() bool {
	if o == nil || o.IsAdmin == nil {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) GetIsAdminOk() (*bool, bool) {
	if o == nil || o.IsAdmin == nil {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) HasIsAdmin() bool {
	if o != nil && o.IsAdmin != nil {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) GetPermissions() []OrganizationCustomRoleRequestProjectPermissionsInnerPermissionsInner {
	if o == nil || o.Permissions == nil {
		var ret []OrganizationCustomRoleRequestProjectPermissionsInnerPermissionsInner
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) GetPermissionsOk() ([]OrganizationCustomRoleRequestProjectPermissionsInnerPermissionsInner, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []OrganizationCustomRoleRequestProjectPermissionsInnerPermissionsInner and assigns it to the Permissions field.
func (o *OrganizationCustomRoleRequestProjectPermissionsInner) SetPermissions(v []OrganizationCustomRoleRequestProjectPermissionsInnerPermissionsInner) {
	o.Permissions = v
}

func (o OrganizationCustomRoleRequestProjectPermissionsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProjectId != nil {
		toSerialize["project_id"] = o.ProjectId
	}
	if o.IsAdmin != nil {
		toSerialize["is_admin"] = o.IsAdmin
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationCustomRoleRequestProjectPermissionsInner struct {
	value *OrganizationCustomRoleRequestProjectPermissionsInner
	isSet bool
}

func (v NullableOrganizationCustomRoleRequestProjectPermissionsInner) Get() *OrganizationCustomRoleRequestProjectPermissionsInner {
	return v.value
}

func (v *NullableOrganizationCustomRoleRequestProjectPermissionsInner) Set(val *OrganizationCustomRoleRequestProjectPermissionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationCustomRoleRequestProjectPermissionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationCustomRoleRequestProjectPermissionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationCustomRoleRequestProjectPermissionsInner(val *OrganizationCustomRoleRequestProjectPermissionsInner) *NullableOrganizationCustomRoleRequestProjectPermissionsInner {
	return &NullableOrganizationCustomRoleRequestProjectPermissionsInner{value: val, isSet: true}
}

func (v NullableOrganizationCustomRoleRequestProjectPermissionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationCustomRoleRequestProjectPermissionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
