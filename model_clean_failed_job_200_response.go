/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the CleanFailedJob200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CleanFailedJob200Response{}

// CleanFailedJob200Response struct for CleanFailedJob200Response
type CleanFailedJob200Response struct {
	CleanKubernetesJobs  []string `json:"clean_kubernetes_jobs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CleanFailedJob200Response CleanFailedJob200Response

// NewCleanFailedJob200Response instantiates a new CleanFailedJob200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCleanFailedJob200Response() *CleanFailedJob200Response {
	this := CleanFailedJob200Response{}
	return &this
}

// NewCleanFailedJob200ResponseWithDefaults instantiates a new CleanFailedJob200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCleanFailedJob200ResponseWithDefaults() *CleanFailedJob200Response {
	this := CleanFailedJob200Response{}
	return &this
}

// GetCleanKubernetesJobs returns the CleanKubernetesJobs field value if set, zero value otherwise.
func (o *CleanFailedJob200Response) GetCleanKubernetesJobs() []string {
	if o == nil || IsNil(o.CleanKubernetesJobs) {
		var ret []string
		return ret
	}
	return o.CleanKubernetesJobs
}

// GetCleanKubernetesJobsOk returns a tuple with the CleanKubernetesJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CleanFailedJob200Response) GetCleanKubernetesJobsOk() ([]string, bool) {
	if o == nil || IsNil(o.CleanKubernetesJobs) {
		return nil, false
	}
	return o.CleanKubernetesJobs, true
}

// HasCleanKubernetesJobs returns a boolean if a field has been set.
func (o *CleanFailedJob200Response) HasCleanKubernetesJobs() bool {
	if o != nil && !IsNil(o.CleanKubernetesJobs) {
		return true
	}

	return false
}

// SetCleanKubernetesJobs gets a reference to the given []string and assigns it to the CleanKubernetesJobs field.
func (o *CleanFailedJob200Response) SetCleanKubernetesJobs(v []string) {
	o.CleanKubernetesJobs = v
}

func (o CleanFailedJob200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CleanFailedJob200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CleanKubernetesJobs) {
		toSerialize["clean_kubernetes_jobs"] = o.CleanKubernetesJobs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CleanFailedJob200Response) UnmarshalJSON(data []byte) (err error) {
	varCleanFailedJob200Response := _CleanFailedJob200Response{}

	err = json.Unmarshal(data, &varCleanFailedJob200Response)

	if err != nil {
		return err
	}

	*o = CleanFailedJob200Response(varCleanFailedJob200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clean_kubernetes_jobs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCleanFailedJob200Response struct {
	value *CleanFailedJob200Response
	isSet bool
}

func (v NullableCleanFailedJob200Response) Get() *CleanFailedJob200Response {
	return v.value
}

func (v *NullableCleanFailedJob200Response) Set(val *CleanFailedJob200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCleanFailedJob200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCleanFailedJob200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCleanFailedJob200Response(val *CleanFailedJob200Response) *NullableCleanFailedJob200Response {
	return &NullableCleanFailedJob200Response{value: val, isSet: true}
}

func (v NullableCleanFailedJob200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCleanFailedJob200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
