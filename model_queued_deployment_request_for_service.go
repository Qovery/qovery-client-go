/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the QueuedDeploymentRequestForService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueuedDeploymentRequestForService{}

// QueuedDeploymentRequestForService struct for QueuedDeploymentRequestForService
type QueuedDeploymentRequestForService struct {
	Identifier           QueuedDeploymentRequestForServiceIdentifier   `json:"identifier"`
	AuditingData         QueuedDeploymentRequestForServiceAuditingData `json:"auditing_data"`
	StatusDetails        StatusDetails                                 `json:"status_details"`
	IconUri              string                                        `json:"icon_uri"`
	AdditionalProperties map[string]interface{}
}

type _QueuedDeploymentRequestForService QueuedDeploymentRequestForService

// NewQueuedDeploymentRequestForService instantiates a new QueuedDeploymentRequestForService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueuedDeploymentRequestForService(identifier QueuedDeploymentRequestForServiceIdentifier, auditingData QueuedDeploymentRequestForServiceAuditingData, statusDetails StatusDetails, iconUri string) *QueuedDeploymentRequestForService {
	this := QueuedDeploymentRequestForService{}
	this.Identifier = identifier
	this.AuditingData = auditingData
	this.StatusDetails = statusDetails
	this.IconUri = iconUri
	return &this
}

// NewQueuedDeploymentRequestForServiceWithDefaults instantiates a new QueuedDeploymentRequestForService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueuedDeploymentRequestForServiceWithDefaults() *QueuedDeploymentRequestForService {
	this := QueuedDeploymentRequestForService{}
	return &this
}

// GetIdentifier returns the Identifier field value
func (o *QueuedDeploymentRequestForService) GetIdentifier() QueuedDeploymentRequestForServiceIdentifier {
	if o == nil {
		var ret QueuedDeploymentRequestForServiceIdentifier
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *QueuedDeploymentRequestForService) GetIdentifierOk() (*QueuedDeploymentRequestForServiceIdentifier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *QueuedDeploymentRequestForService) SetIdentifier(v QueuedDeploymentRequestForServiceIdentifier) {
	o.Identifier = v
}

// GetAuditingData returns the AuditingData field value
func (o *QueuedDeploymentRequestForService) GetAuditingData() QueuedDeploymentRequestForServiceAuditingData {
	if o == nil {
		var ret QueuedDeploymentRequestForServiceAuditingData
		return ret
	}

	return o.AuditingData
}

// GetAuditingDataOk returns a tuple with the AuditingData field value
// and a boolean to check if the value has been set.
func (o *QueuedDeploymentRequestForService) GetAuditingDataOk() (*QueuedDeploymentRequestForServiceAuditingData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuditingData, true
}

// SetAuditingData sets field value
func (o *QueuedDeploymentRequestForService) SetAuditingData(v QueuedDeploymentRequestForServiceAuditingData) {
	o.AuditingData = v
}

// GetStatusDetails returns the StatusDetails field value
func (o *QueuedDeploymentRequestForService) GetStatusDetails() StatusDetails {
	if o == nil {
		var ret StatusDetails
		return ret
	}

	return o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value
// and a boolean to check if the value has been set.
func (o *QueuedDeploymentRequestForService) GetStatusDetailsOk() (*StatusDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusDetails, true
}

// SetStatusDetails sets field value
func (o *QueuedDeploymentRequestForService) SetStatusDetails(v StatusDetails) {
	o.StatusDetails = v
}

// GetIconUri returns the IconUri field value
func (o *QueuedDeploymentRequestForService) GetIconUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IconUri
}

// GetIconUriOk returns a tuple with the IconUri field value
// and a boolean to check if the value has been set.
func (o *QueuedDeploymentRequestForService) GetIconUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IconUri, true
}

// SetIconUri sets field value
func (o *QueuedDeploymentRequestForService) SetIconUri(v string) {
	o.IconUri = v
}

func (o QueuedDeploymentRequestForService) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueuedDeploymentRequestForService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identifier"] = o.Identifier
	toSerialize["auditing_data"] = o.AuditingData
	toSerialize["status_details"] = o.StatusDetails
	toSerialize["icon_uri"] = o.IconUri

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QueuedDeploymentRequestForService) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
		"auditing_data",
		"status_details",
		"icon_uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueuedDeploymentRequestForService := _QueuedDeploymentRequestForService{}

	err = json.Unmarshal(data, &varQueuedDeploymentRequestForService)

	if err != nil {
		return err
	}

	*o = QueuedDeploymentRequestForService(varQueuedDeploymentRequestForService)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "identifier")
		delete(additionalProperties, "auditing_data")
		delete(additionalProperties, "status_details")
		delete(additionalProperties, "icon_uri")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQueuedDeploymentRequestForService struct {
	value *QueuedDeploymentRequestForService
	isSet bool
}

func (v NullableQueuedDeploymentRequestForService) Get() *QueuedDeploymentRequestForService {
	return v.value
}

func (v *NullableQueuedDeploymentRequestForService) Set(val *QueuedDeploymentRequestForService) {
	v.value = val
	v.isSet = true
}

func (v NullableQueuedDeploymentRequestForService) IsSet() bool {
	return v.isSet
}

func (v *NullableQueuedDeploymentRequestForService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueuedDeploymentRequestForService(val *QueuedDeploymentRequestForService) *NullableQueuedDeploymentRequestForService {
	return &NullableQueuedDeploymentRequestForService{value: val, isSet: true}
}

func (v NullableQueuedDeploymentRequestForService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueuedDeploymentRequestForService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
