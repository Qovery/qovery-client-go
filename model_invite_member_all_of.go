/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// InviteMemberAllOf struct for InviteMemberAllOf
type InviteMemberAllOf struct {
	Email            string               `json:"email"`
	Role             InviteMemberRoleEnum `json:"role"`
	InvitationLink   string               `json:"invitation_link"`
	InvitationStatus InviteStatusEnum     `json:"invitation_status"`
	OrganizationName *string              `json:"organization_name,omitempty"`
	Inviter          string               `json:"inviter"`
	LogoUrl          *string              `json:"logo_url,omitempty"`
	RoleId           *string              `json:"role_id,omitempty"`
	RoleName         *string              `json:"role_name,omitempty"`
}

// NewInviteMemberAllOf instantiates a new InviteMemberAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteMemberAllOf(email string, role InviteMemberRoleEnum, invitationLink string, invitationStatus InviteStatusEnum, inviter string) *InviteMemberAllOf {
	this := InviteMemberAllOf{}
	this.Email = email
	this.Role = role
	this.InvitationLink = invitationLink
	this.InvitationStatus = invitationStatus
	this.Inviter = inviter
	return &this
}

// NewInviteMemberAllOfWithDefaults instantiates a new InviteMemberAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteMemberAllOfWithDefaults() *InviteMemberAllOf {
	this := InviteMemberAllOf{}
	return &this
}

// GetEmail returns the Email field value
func (o *InviteMemberAllOf) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *InviteMemberAllOf) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *InviteMemberAllOf) SetEmail(v string) {
	o.Email = v
}

// GetRole returns the Role field value
func (o *InviteMemberAllOf) GetRole() InviteMemberRoleEnum {
	if o == nil {
		var ret InviteMemberRoleEnum
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *InviteMemberAllOf) GetRoleOk() (*InviteMemberRoleEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *InviteMemberAllOf) SetRole(v InviteMemberRoleEnum) {
	o.Role = v
}

// GetInvitationLink returns the InvitationLink field value
func (o *InviteMemberAllOf) GetInvitationLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvitationLink
}

// GetInvitationLinkOk returns a tuple with the InvitationLink field value
// and a boolean to check if the value has been set.
func (o *InviteMemberAllOf) GetInvitationLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvitationLink, true
}

// SetInvitationLink sets field value
func (o *InviteMemberAllOf) SetInvitationLink(v string) {
	o.InvitationLink = v
}

// GetInvitationStatus returns the InvitationStatus field value
func (o *InviteMemberAllOf) GetInvitationStatus() InviteStatusEnum {
	if o == nil {
		var ret InviteStatusEnum
		return ret
	}

	return o.InvitationStatus
}

// GetInvitationStatusOk returns a tuple with the InvitationStatus field value
// and a boolean to check if the value has been set.
func (o *InviteMemberAllOf) GetInvitationStatusOk() (*InviteStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvitationStatus, true
}

// SetInvitationStatus sets field value
func (o *InviteMemberAllOf) SetInvitationStatus(v InviteStatusEnum) {
	o.InvitationStatus = v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *InviteMemberAllOf) GetOrganizationName() string {
	if o == nil || o.OrganizationName == nil {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteMemberAllOf) GetOrganizationNameOk() (*string, bool) {
	if o == nil || o.OrganizationName == nil {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *InviteMemberAllOf) HasOrganizationName() bool {
	if o != nil && o.OrganizationName != nil {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *InviteMemberAllOf) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetInviter returns the Inviter field value
func (o *InviteMemberAllOf) GetInviter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Inviter
}

// GetInviterOk returns a tuple with the Inviter field value
// and a boolean to check if the value has been set.
func (o *InviteMemberAllOf) GetInviterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inviter, true
}

// SetInviter sets field value
func (o *InviteMemberAllOf) SetInviter(v string) {
	o.Inviter = v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *InviteMemberAllOf) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteMemberAllOf) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *InviteMemberAllOf) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *InviteMemberAllOf) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *InviteMemberAllOf) GetRoleId() string {
	if o == nil || o.RoleId == nil {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteMemberAllOf) GetRoleIdOk() (*string, bool) {
	if o == nil || o.RoleId == nil {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *InviteMemberAllOf) HasRoleId() bool {
	if o != nil && o.RoleId != nil {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *InviteMemberAllOf) SetRoleId(v string) {
	o.RoleId = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *InviteMemberAllOf) GetRoleName() string {
	if o == nil || o.RoleName == nil {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteMemberAllOf) GetRoleNameOk() (*string, bool) {
	if o == nil || o.RoleName == nil {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *InviteMemberAllOf) HasRoleName() bool {
	if o != nil && o.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *InviteMemberAllOf) SetRoleName(v string) {
	o.RoleName = &v
}

func (o InviteMemberAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["invitation_link"] = o.InvitationLink
	}
	if true {
		toSerialize["invitation_status"] = o.InvitationStatus
	}
	if o.OrganizationName != nil {
		toSerialize["organization_name"] = o.OrganizationName
	}
	if true {
		toSerialize["inviter"] = o.Inviter
	}
	if o.LogoUrl != nil {
		toSerialize["logo_url"] = o.LogoUrl
	}
	if o.RoleId != nil {
		toSerialize["role_id"] = o.RoleId
	}
	if o.RoleName != nil {
		toSerialize["role_name"] = o.RoleName
	}
	return json.Marshal(toSerialize)
}

type NullableInviteMemberAllOf struct {
	value *InviteMemberAllOf
	isSet bool
}

func (v NullableInviteMemberAllOf) Get() *InviteMemberAllOf {
	return v.value
}

func (v *NullableInviteMemberAllOf) Set(val *InviteMemberAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteMemberAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteMemberAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteMemberAllOf(val *InviteMemberAllOf) *NullableInviteMemberAllOf {
	return &NullableInviteMemberAllOf{value: val, isSet: true}
}

func (v NullableInviteMemberAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteMemberAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
