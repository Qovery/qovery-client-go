/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the HelmRepositoryRequestConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelmRepositoryRequestConfig{}

// HelmRepositoryRequestConfig struct for HelmRepositoryRequestConfig
type HelmRepositoryRequestConfig struct {
	// Required if the repository is private
	Username *string `json:"username,omitempty"`
	// Required if the repository is private
	Password *string `json:"password,omitempty"`
	// Required if kind is `ECR` or `PUBLIC_ECR`
	AccessKeyId *string `json:"access_key_id,omitempty"`
	// Required if kind is `ECR` or `PUBLIC_ECR`
	SecretAccessKey *string `json:"secret_access_key,omitempty"`
	// Required if kind is `ECR` or `SCALEWAY_CR`
	Region *string `json:"region,omitempty"`
	// Required if kind is `SCALEWAY_CR`
	ScalewayAccessKey *string `json:"scaleway_access_key,omitempty"`
	// Required if kind is `SCALEWAY_CR`
	ScalewaySecretKey *string `json:"scaleway_secret_key,omitempty"`
	// Required if kind is `SCALEWAY_CR`
	ScalewayProjectId *string `json:"scaleway_project_id,omitempty"`
	// Required if kind is `AZURE_CR`.
	AzureTenantId *string `json:"azure_tenant_id,omitempty"`
	// Required if kind is `AZURE_CR`.
	AzureSubscriptionId  *string `json:"azure_subscription_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HelmRepositoryRequestConfig HelmRepositoryRequestConfig

// NewHelmRepositoryRequestConfig instantiates a new HelmRepositoryRequestConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmRepositoryRequestConfig() *HelmRepositoryRequestConfig {
	this := HelmRepositoryRequestConfig{}
	return &this
}

// NewHelmRepositoryRequestConfigWithDefaults instantiates a new HelmRepositoryRequestConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmRepositoryRequestConfigWithDefaults() *HelmRepositoryRequestConfig {
	this := HelmRepositoryRequestConfig{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *HelmRepositoryRequestConfig) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryRequestConfig) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *HelmRepositoryRequestConfig) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *HelmRepositoryRequestConfig) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *HelmRepositoryRequestConfig) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryRequestConfig) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *HelmRepositoryRequestConfig) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *HelmRepositoryRequestConfig) SetPassword(v string) {
	o.Password = &v
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *HelmRepositoryRequestConfig) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId) {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryRequestConfig) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeyId) {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *HelmRepositoryRequestConfig) HasAccessKeyId() bool {
	if o != nil && !IsNil(o.AccessKeyId) {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *HelmRepositoryRequestConfig) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *HelmRepositoryRequestConfig) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryRequestConfig) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretAccessKey) {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *HelmRepositoryRequestConfig) HasSecretAccessKey() bool {
	if o != nil && !IsNil(o.SecretAccessKey) {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *HelmRepositoryRequestConfig) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *HelmRepositoryRequestConfig) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryRequestConfig) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *HelmRepositoryRequestConfig) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *HelmRepositoryRequestConfig) SetRegion(v string) {
	o.Region = &v
}

// GetScalewayAccessKey returns the ScalewayAccessKey field value if set, zero value otherwise.
func (o *HelmRepositoryRequestConfig) GetScalewayAccessKey() string {
	if o == nil || IsNil(o.ScalewayAccessKey) {
		var ret string
		return ret
	}
	return *o.ScalewayAccessKey
}

// GetScalewayAccessKeyOk returns a tuple with the ScalewayAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryRequestConfig) GetScalewayAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ScalewayAccessKey) {
		return nil, false
	}
	return o.ScalewayAccessKey, true
}

// HasScalewayAccessKey returns a boolean if a field has been set.
func (o *HelmRepositoryRequestConfig) HasScalewayAccessKey() bool {
	if o != nil && !IsNil(o.ScalewayAccessKey) {
		return true
	}

	return false
}

// SetScalewayAccessKey gets a reference to the given string and assigns it to the ScalewayAccessKey field.
func (o *HelmRepositoryRequestConfig) SetScalewayAccessKey(v string) {
	o.ScalewayAccessKey = &v
}

// GetScalewaySecretKey returns the ScalewaySecretKey field value if set, zero value otherwise.
func (o *HelmRepositoryRequestConfig) GetScalewaySecretKey() string {
	if o == nil || IsNil(o.ScalewaySecretKey) {
		var ret string
		return ret
	}
	return *o.ScalewaySecretKey
}

// GetScalewaySecretKeyOk returns a tuple with the ScalewaySecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryRequestConfig) GetScalewaySecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ScalewaySecretKey) {
		return nil, false
	}
	return o.ScalewaySecretKey, true
}

// HasScalewaySecretKey returns a boolean if a field has been set.
func (o *HelmRepositoryRequestConfig) HasScalewaySecretKey() bool {
	if o != nil && !IsNil(o.ScalewaySecretKey) {
		return true
	}

	return false
}

// SetScalewaySecretKey gets a reference to the given string and assigns it to the ScalewaySecretKey field.
func (o *HelmRepositoryRequestConfig) SetScalewaySecretKey(v string) {
	o.ScalewaySecretKey = &v
}

// GetScalewayProjectId returns the ScalewayProjectId field value if set, zero value otherwise.
func (o *HelmRepositoryRequestConfig) GetScalewayProjectId() string {
	if o == nil || IsNil(o.ScalewayProjectId) {
		var ret string
		return ret
	}
	return *o.ScalewayProjectId
}

// GetScalewayProjectIdOk returns a tuple with the ScalewayProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryRequestConfig) GetScalewayProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScalewayProjectId) {
		return nil, false
	}
	return o.ScalewayProjectId, true
}

// HasScalewayProjectId returns a boolean if a field has been set.
func (o *HelmRepositoryRequestConfig) HasScalewayProjectId() bool {
	if o != nil && !IsNil(o.ScalewayProjectId) {
		return true
	}

	return false
}

// SetScalewayProjectId gets a reference to the given string and assigns it to the ScalewayProjectId field.
func (o *HelmRepositoryRequestConfig) SetScalewayProjectId(v string) {
	o.ScalewayProjectId = &v
}

// GetAzureTenantId returns the AzureTenantId field value if set, zero value otherwise.
func (o *HelmRepositoryRequestConfig) GetAzureTenantId() string {
	if o == nil || IsNil(o.AzureTenantId) {
		var ret string
		return ret
	}
	return *o.AzureTenantId
}

// GetAzureTenantIdOk returns a tuple with the AzureTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryRequestConfig) GetAzureTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureTenantId) {
		return nil, false
	}
	return o.AzureTenantId, true
}

// HasAzureTenantId returns a boolean if a field has been set.
func (o *HelmRepositoryRequestConfig) HasAzureTenantId() bool {
	if o != nil && !IsNil(o.AzureTenantId) {
		return true
	}

	return false
}

// SetAzureTenantId gets a reference to the given string and assigns it to the AzureTenantId field.
func (o *HelmRepositoryRequestConfig) SetAzureTenantId(v string) {
	o.AzureTenantId = &v
}

// GetAzureSubscriptionId returns the AzureSubscriptionId field value if set, zero value otherwise.
func (o *HelmRepositoryRequestConfig) GetAzureSubscriptionId() string {
	if o == nil || IsNil(o.AzureSubscriptionId) {
		var ret string
		return ret
	}
	return *o.AzureSubscriptionId
}

// GetAzureSubscriptionIdOk returns a tuple with the AzureSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmRepositoryRequestConfig) GetAzureSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureSubscriptionId) {
		return nil, false
	}
	return o.AzureSubscriptionId, true
}

// HasAzureSubscriptionId returns a boolean if a field has been set.
func (o *HelmRepositoryRequestConfig) HasAzureSubscriptionId() bool {
	if o != nil && !IsNil(o.AzureSubscriptionId) {
		return true
	}

	return false
}

// SetAzureSubscriptionId gets a reference to the given string and assigns it to the AzureSubscriptionId field.
func (o *HelmRepositoryRequestConfig) SetAzureSubscriptionId(v string) {
	o.AzureSubscriptionId = &v
}

func (o HelmRepositoryRequestConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelmRepositoryRequestConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.AccessKeyId) {
		toSerialize["access_key_id"] = o.AccessKeyId
	}
	if !IsNil(o.SecretAccessKey) {
		toSerialize["secret_access_key"] = o.SecretAccessKey
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.ScalewayAccessKey) {
		toSerialize["scaleway_access_key"] = o.ScalewayAccessKey
	}
	if !IsNil(o.ScalewaySecretKey) {
		toSerialize["scaleway_secret_key"] = o.ScalewaySecretKey
	}
	if !IsNil(o.ScalewayProjectId) {
		toSerialize["scaleway_project_id"] = o.ScalewayProjectId
	}
	if !IsNil(o.AzureTenantId) {
		toSerialize["azure_tenant_id"] = o.AzureTenantId
	}
	if !IsNil(o.AzureSubscriptionId) {
		toSerialize["azure_subscription_id"] = o.AzureSubscriptionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HelmRepositoryRequestConfig) UnmarshalJSON(data []byte) (err error) {
	varHelmRepositoryRequestConfig := _HelmRepositoryRequestConfig{}

	err = json.Unmarshal(data, &varHelmRepositoryRequestConfig)

	if err != nil {
		return err
	}

	*o = HelmRepositoryRequestConfig(varHelmRepositoryRequestConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		delete(additionalProperties, "access_key_id")
		delete(additionalProperties, "secret_access_key")
		delete(additionalProperties, "region")
		delete(additionalProperties, "scaleway_access_key")
		delete(additionalProperties, "scaleway_secret_key")
		delete(additionalProperties, "scaleway_project_id")
		delete(additionalProperties, "azure_tenant_id")
		delete(additionalProperties, "azure_subscription_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHelmRepositoryRequestConfig struct {
	value *HelmRepositoryRequestConfig
	isSet bool
}

func (v NullableHelmRepositoryRequestConfig) Get() *HelmRepositoryRequestConfig {
	return v.value
}

func (v *NullableHelmRepositoryRequestConfig) Set(val *HelmRepositoryRequestConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmRepositoryRequestConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmRepositoryRequestConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmRepositoryRequestConfig(val *HelmRepositoryRequestConfig) *NullableHelmRepositoryRequestConfig {
	return &NullableHelmRepositoryRequestConfig{value: val, isSet: true}
}

func (v NullableHelmRepositoryRequestConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmRepositoryRequestConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
