/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the QueuedDeploymentRequestWithStages type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueuedDeploymentRequestWithStages{}

// QueuedDeploymentRequestWithStages struct for QueuedDeploymentRequestWithStages
type QueuedDeploymentRequestWithStages struct {
	Identifier           QueuedDeploymentRequestWithStagesIdentifier    `json:"identifier"`
	AuditingData         QueuedDeploymentRequestWithStagesAuditingData  `json:"auditing_data"`
	TriggerAction        DeploymentHistoryTriggerAction                 `json:"trigger_action"`
	Stages               []QueuedDeploymentRequestWithStagesStagesInner `json:"stages"`
	AdditionalProperties map[string]interface{}
}

type _QueuedDeploymentRequestWithStages QueuedDeploymentRequestWithStages

// NewQueuedDeploymentRequestWithStages instantiates a new QueuedDeploymentRequestWithStages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueuedDeploymentRequestWithStages(identifier QueuedDeploymentRequestWithStagesIdentifier, auditingData QueuedDeploymentRequestWithStagesAuditingData, triggerAction DeploymentHistoryTriggerAction, stages []QueuedDeploymentRequestWithStagesStagesInner) *QueuedDeploymentRequestWithStages {
	this := QueuedDeploymentRequestWithStages{}
	this.Identifier = identifier
	this.AuditingData = auditingData
	this.TriggerAction = triggerAction
	this.Stages = stages
	return &this
}

// NewQueuedDeploymentRequestWithStagesWithDefaults instantiates a new QueuedDeploymentRequestWithStages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueuedDeploymentRequestWithStagesWithDefaults() *QueuedDeploymentRequestWithStages {
	this := QueuedDeploymentRequestWithStages{}
	return &this
}

// GetIdentifier returns the Identifier field value
func (o *QueuedDeploymentRequestWithStages) GetIdentifier() QueuedDeploymentRequestWithStagesIdentifier {
	if o == nil {
		var ret QueuedDeploymentRequestWithStagesIdentifier
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *QueuedDeploymentRequestWithStages) GetIdentifierOk() (*QueuedDeploymentRequestWithStagesIdentifier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *QueuedDeploymentRequestWithStages) SetIdentifier(v QueuedDeploymentRequestWithStagesIdentifier) {
	o.Identifier = v
}

// GetAuditingData returns the AuditingData field value
func (o *QueuedDeploymentRequestWithStages) GetAuditingData() QueuedDeploymentRequestWithStagesAuditingData {
	if o == nil {
		var ret QueuedDeploymentRequestWithStagesAuditingData
		return ret
	}

	return o.AuditingData
}

// GetAuditingDataOk returns a tuple with the AuditingData field value
// and a boolean to check if the value has been set.
func (o *QueuedDeploymentRequestWithStages) GetAuditingDataOk() (*QueuedDeploymentRequestWithStagesAuditingData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuditingData, true
}

// SetAuditingData sets field value
func (o *QueuedDeploymentRequestWithStages) SetAuditingData(v QueuedDeploymentRequestWithStagesAuditingData) {
	o.AuditingData = v
}

// GetTriggerAction returns the TriggerAction field value
func (o *QueuedDeploymentRequestWithStages) GetTriggerAction() DeploymentHistoryTriggerAction {
	if o == nil {
		var ret DeploymentHistoryTriggerAction
		return ret
	}

	return o.TriggerAction
}

// GetTriggerActionOk returns a tuple with the TriggerAction field value
// and a boolean to check if the value has been set.
func (o *QueuedDeploymentRequestWithStages) GetTriggerActionOk() (*DeploymentHistoryTriggerAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TriggerAction, true
}

// SetTriggerAction sets field value
func (o *QueuedDeploymentRequestWithStages) SetTriggerAction(v DeploymentHistoryTriggerAction) {
	o.TriggerAction = v
}

// GetStages returns the Stages field value
func (o *QueuedDeploymentRequestWithStages) GetStages() []QueuedDeploymentRequestWithStagesStagesInner {
	if o == nil {
		var ret []QueuedDeploymentRequestWithStagesStagesInner
		return ret
	}

	return o.Stages
}

// GetStagesOk returns a tuple with the Stages field value
// and a boolean to check if the value has been set.
func (o *QueuedDeploymentRequestWithStages) GetStagesOk() ([]QueuedDeploymentRequestWithStagesStagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stages, true
}

// SetStages sets field value
func (o *QueuedDeploymentRequestWithStages) SetStages(v []QueuedDeploymentRequestWithStagesStagesInner) {
	o.Stages = v
}

func (o QueuedDeploymentRequestWithStages) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueuedDeploymentRequestWithStages) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identifier"] = o.Identifier
	toSerialize["auditing_data"] = o.AuditingData
	toSerialize["trigger_action"] = o.TriggerAction
	toSerialize["stages"] = o.Stages

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QueuedDeploymentRequestWithStages) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
		"auditing_data",
		"trigger_action",
		"stages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueuedDeploymentRequestWithStages := _QueuedDeploymentRequestWithStages{}

	err = json.Unmarshal(data, &varQueuedDeploymentRequestWithStages)

	if err != nil {
		return err
	}

	*o = QueuedDeploymentRequestWithStages(varQueuedDeploymentRequestWithStages)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "identifier")
		delete(additionalProperties, "auditing_data")
		delete(additionalProperties, "trigger_action")
		delete(additionalProperties, "stages")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQueuedDeploymentRequestWithStages struct {
	value *QueuedDeploymentRequestWithStages
	isSet bool
}

func (v NullableQueuedDeploymentRequestWithStages) Get() *QueuedDeploymentRequestWithStages {
	return v.value
}

func (v *NullableQueuedDeploymentRequestWithStages) Set(val *QueuedDeploymentRequestWithStages) {
	v.value = val
	v.isSet = true
}

func (v NullableQueuedDeploymentRequestWithStages) IsSet() bool {
	return v.isSet
}

func (v *NullableQueuedDeploymentRequestWithStages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueuedDeploymentRequestWithStages(val *QueuedDeploymentRequestWithStages) *NullableQueuedDeploymentRequestWithStages {
	return &NullableQueuedDeploymentRequestWithStages{value: val, isSet: true}
}

func (v NullableQueuedDeploymentRequestWithStages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueuedDeploymentRequestWithStages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
