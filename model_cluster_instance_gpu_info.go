/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the ClusterInstanceGpuInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterInstanceGpuInfo{}

// ClusterInstanceGpuInfo struct for ClusterInstanceGpuInfo
type ClusterInstanceGpuInfo struct {
	// The number of GPUs included in the instance.
	Count *int32 `json:"count,omitempty"`
	// The model name of the GPU.
	Name *string `json:"name,omitempty"`
	// The manufacturer of the GPUs in the instance.
	Manufacturer *string `json:"manufacturer,omitempty"`
	// The total GPU memory available.
	MemoryInMib          *string `json:"memory_in_mib,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClusterInstanceGpuInfo ClusterInstanceGpuInfo

// NewClusterInstanceGpuInfo instantiates a new ClusterInstanceGpuInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterInstanceGpuInfo() *ClusterInstanceGpuInfo {
	this := ClusterInstanceGpuInfo{}
	return &this
}

// NewClusterInstanceGpuInfoWithDefaults instantiates a new ClusterInstanceGpuInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterInstanceGpuInfoWithDefaults() *ClusterInstanceGpuInfo {
	this := ClusterInstanceGpuInfo{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ClusterInstanceGpuInfo) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstanceGpuInfo) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ClusterInstanceGpuInfo) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ClusterInstanceGpuInfo) SetCount(v int32) {
	o.Count = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterInstanceGpuInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstanceGpuInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterInstanceGpuInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterInstanceGpuInfo) SetName(v string) {
	o.Name = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *ClusterInstanceGpuInfo) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstanceGpuInfo) GetManufacturerOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *ClusterInstanceGpuInfo) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *ClusterInstanceGpuInfo) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetMemoryInMib returns the MemoryInMib field value if set, zero value otherwise.
func (o *ClusterInstanceGpuInfo) GetMemoryInMib() string {
	if o == nil || IsNil(o.MemoryInMib) {
		var ret string
		return ret
	}
	return *o.MemoryInMib
}

// GetMemoryInMibOk returns a tuple with the MemoryInMib field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstanceGpuInfo) GetMemoryInMibOk() (*string, bool) {
	if o == nil || IsNil(o.MemoryInMib) {
		return nil, false
	}
	return o.MemoryInMib, true
}

// HasMemoryInMib returns a boolean if a field has been set.
func (o *ClusterInstanceGpuInfo) HasMemoryInMib() bool {
	if o != nil && !IsNil(o.MemoryInMib) {
		return true
	}

	return false
}

// SetMemoryInMib gets a reference to the given string and assigns it to the MemoryInMib field.
func (o *ClusterInstanceGpuInfo) SetMemoryInMib(v string) {
	o.MemoryInMib = &v
}

func (o ClusterInstanceGpuInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterInstanceGpuInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.MemoryInMib) {
		toSerialize["memory_in_mib"] = o.MemoryInMib
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterInstanceGpuInfo) UnmarshalJSON(data []byte) (err error) {
	varClusterInstanceGpuInfo := _ClusterInstanceGpuInfo{}

	err = json.Unmarshal(data, &varClusterInstanceGpuInfo)

	if err != nil {
		return err
	}

	*o = ClusterInstanceGpuInfo(varClusterInstanceGpuInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "count")
		delete(additionalProperties, "name")
		delete(additionalProperties, "manufacturer")
		delete(additionalProperties, "memory_in_mib")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterInstanceGpuInfo struct {
	value *ClusterInstanceGpuInfo
	isSet bool
}

func (v NullableClusterInstanceGpuInfo) Get() *ClusterInstanceGpuInfo {
	return v.value
}

func (v *NullableClusterInstanceGpuInfo) Set(val *ClusterInstanceGpuInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterInstanceGpuInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterInstanceGpuInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterInstanceGpuInfo(val *ClusterInstanceGpuInfo) *NullableClusterInstanceGpuInfo {
	return &NullableClusterInstanceGpuInfo{value: val, isSet: true}
}

func (v NullableClusterInstanceGpuInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterInstanceGpuInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
