/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// CloudProvider struct for CloudProvider
type CloudProvider struct {
	ShortName *string         `json:"short_name,omitempty"`
	Name      *string         `json:"name,omitempty"`
	LogoUrl   *string         `json:"logo_url,omitempty"`
	Regions   []ClusterRegion `json:"regions,omitempty"`
}

// NewCloudProvider instantiates a new CloudProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudProvider() *CloudProvider {
	this := CloudProvider{}
	return &this
}

// NewCloudProviderWithDefaults instantiates a new CloudProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudProviderWithDefaults() *CloudProvider {
	this := CloudProvider{}
	return &this
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *CloudProvider) GetShortName() string {
	if o == nil || o.ShortName == nil {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudProvider) GetShortNameOk() (*string, bool) {
	if o == nil || o.ShortName == nil {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *CloudProvider) HasShortName() bool {
	if o != nil && o.ShortName != nil {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *CloudProvider) SetShortName(v string) {
	o.ShortName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CloudProvider) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudProvider) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CloudProvider) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CloudProvider) SetName(v string) {
	o.Name = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *CloudProvider) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudProvider) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *CloudProvider) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *CloudProvider) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *CloudProvider) GetRegions() []ClusterRegion {
	if o == nil || o.Regions == nil {
		var ret []ClusterRegion
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudProvider) GetRegionsOk() ([]ClusterRegion, bool) {
	if o == nil || o.Regions == nil {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *CloudProvider) HasRegions() bool {
	if o != nil && o.Regions != nil {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []ClusterRegion and assigns it to the Regions field.
func (o *CloudProvider) SetRegions(v []ClusterRegion) {
	o.Regions = v
}

func (o CloudProvider) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ShortName != nil {
		toSerialize["short_name"] = o.ShortName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.LogoUrl != nil {
		toSerialize["logo_url"] = o.LogoUrl
	}
	if o.Regions != nil {
		toSerialize["regions"] = o.Regions
	}
	return json.Marshal(toSerialize)
}

type NullableCloudProvider struct {
	value *CloudProvider
	isSet bool
}

func (v NullableCloudProvider) Get() *CloudProvider {
	return v.value
}

func (v *NullableCloudProvider) Set(val *CloudProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudProvider(val *CloudProvider) *NullableCloudProvider {
	return &NullableCloudProvider{value: val, isSet: true}
}

func (v NullableCloudProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
