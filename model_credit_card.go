/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CreditCard type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditCard{}

// CreditCard struct for CreditCard
type CreditCard struct {
	Id                   string    `json:"id"`
	CreatedAt            time.Time `json:"created_at"`
	ExpiryMonth          int32     `json:"expiry_month"`
	ExpiryYear           int32     `json:"expiry_year"`
	LastDigit            string    `json:"last_digit"`
	IsExpired            bool      `json:"is_expired"`
	Brand                string    `json:"brand"`
	AdditionalProperties map[string]interface{}
}

type _CreditCard CreditCard

// NewCreditCard instantiates a new CreditCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditCard(id string, createdAt time.Time, expiryMonth int32, expiryYear int32, lastDigit string, isExpired bool, brand string) *CreditCard {
	this := CreditCard{}
	this.Id = id
	this.CreatedAt = createdAt
	this.ExpiryMonth = expiryMonth
	this.ExpiryYear = expiryYear
	this.LastDigit = lastDigit
	this.IsExpired = isExpired
	this.Brand = brand
	return &this
}

// NewCreditCardWithDefaults instantiates a new CreditCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditCardWithDefaults() *CreditCard {
	this := CreditCard{}
	return &this
}

// GetId returns the Id field value
func (o *CreditCard) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreditCard) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreditCard) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreditCard) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreditCard) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreditCard) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetExpiryMonth returns the ExpiryMonth field value
func (o *CreditCard) GetExpiryMonth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpiryMonth
}

// GetExpiryMonthOk returns a tuple with the ExpiryMonth field value
// and a boolean to check if the value has been set.
func (o *CreditCard) GetExpiryMonthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiryMonth, true
}

// SetExpiryMonth sets field value
func (o *CreditCard) SetExpiryMonth(v int32) {
	o.ExpiryMonth = v
}

// GetExpiryYear returns the ExpiryYear field value
func (o *CreditCard) GetExpiryYear() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpiryYear
}

// GetExpiryYearOk returns a tuple with the ExpiryYear field value
// and a boolean to check if the value has been set.
func (o *CreditCard) GetExpiryYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiryYear, true
}

// SetExpiryYear sets field value
func (o *CreditCard) SetExpiryYear(v int32) {
	o.ExpiryYear = v
}

// GetLastDigit returns the LastDigit field value
func (o *CreditCard) GetLastDigit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastDigit
}

// GetLastDigitOk returns a tuple with the LastDigit field value
// and a boolean to check if the value has been set.
func (o *CreditCard) GetLastDigitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastDigit, true
}

// SetLastDigit sets field value
func (o *CreditCard) SetLastDigit(v string) {
	o.LastDigit = v
}

// GetIsExpired returns the IsExpired field value
func (o *CreditCard) GetIsExpired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsExpired
}

// GetIsExpiredOk returns a tuple with the IsExpired field value
// and a boolean to check if the value has been set.
func (o *CreditCard) GetIsExpiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsExpired, true
}

// SetIsExpired sets field value
func (o *CreditCard) SetIsExpired(v bool) {
	o.IsExpired = v
}

// GetBrand returns the Brand field value
func (o *CreditCard) GetBrand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Brand
}

// GetBrandOk returns a tuple with the Brand field value
// and a boolean to check if the value has been set.
func (o *CreditCard) GetBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Brand, true
}

// SetBrand sets field value
func (o *CreditCard) SetBrand(v string) {
	o.Brand = v
}

func (o CreditCard) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditCard) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["expiry_month"] = o.ExpiryMonth
	toSerialize["expiry_year"] = o.ExpiryYear
	toSerialize["last_digit"] = o.LastDigit
	toSerialize["is_expired"] = o.IsExpired
	toSerialize["brand"] = o.Brand

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreditCard) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"expiry_month",
		"expiry_year",
		"last_digit",
		"is_expired",
		"brand",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreditCard := _CreditCard{}

	err = json.Unmarshal(data, &varCreditCard)

	if err != nil {
		return err
	}

	*o = CreditCard(varCreditCard)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "expiry_month")
		delete(additionalProperties, "expiry_year")
		delete(additionalProperties, "last_digit")
		delete(additionalProperties, "is_expired")
		delete(additionalProperties, "brand")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreditCard struct {
	value *CreditCard
	isSet bool
}

func (v NullableCreditCard) Get() *CreditCard {
	return v.value
}

func (v *NullableCreditCard) Set(val *CreditCard) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditCard) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditCard(val *CreditCard) *NullableCreditCard {
	return &NullableCreditCard{value: val, isSet: true}
}

func (v NullableCreditCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
