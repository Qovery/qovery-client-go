/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// EnvironmentLog struct for EnvironmentLog
type EnvironmentLog struct {
	Id        string                  `json:"id"`
	CreatedAt time.Time               `json:"created_at"`
	Scope     *EnvironmentLogScope    `json:"scope,omitempty"`
	State     *GlobalDeploymentStatus `json:"state,omitempty"`
	// Log message
	Message NullableString `json:"message"`
	// Only for errors. Helps Qovery team to investigate.
	ExecutionId *string `json:"execution_id,omitempty"`
	Hint        *string `json:"hint,omitempty"`
}

// NewEnvironmentLog instantiates a new EnvironmentLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentLog(id string, createdAt time.Time, message NullableString) *EnvironmentLog {
	this := EnvironmentLog{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Message = message
	return &this
}

// NewEnvironmentLogWithDefaults instantiates a new EnvironmentLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentLogWithDefaults() *EnvironmentLog {
	this := EnvironmentLog{}
	return &this
}

// GetId returns the Id field value
func (o *EnvironmentLog) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EnvironmentLog) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EnvironmentLog) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *EnvironmentLog) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *EnvironmentLog) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *EnvironmentLog) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *EnvironmentLog) GetScope() EnvironmentLogScope {
	if o == nil || o.Scope == nil {
		var ret EnvironmentLogScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLog) GetScopeOk() (*EnvironmentLogScope, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *EnvironmentLog) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given EnvironmentLogScope and assigns it to the Scope field.
func (o *EnvironmentLog) SetScope(v EnvironmentLogScope) {
	o.Scope = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *EnvironmentLog) GetState() GlobalDeploymentStatus {
	if o == nil || o.State == nil {
		var ret GlobalDeploymentStatus
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLog) GetStateOk() (*GlobalDeploymentStatus, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *EnvironmentLog) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given GlobalDeploymentStatus and assigns it to the State field.
func (o *EnvironmentLog) SetState(v GlobalDeploymentStatus) {
	o.State = &v
}

// GetMessage returns the Message field value
// If the value is explicit nil, the zero value for string will be returned
func (o *EnvironmentLog) GetMessage() string {
	if o == nil || o.Message.Get() == nil {
		var ret string
		return ret
	}

	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvironmentLog) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// SetMessage sets field value
func (o *EnvironmentLog) SetMessage(v string) {
	o.Message.Set(&v)
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *EnvironmentLog) GetExecutionId() string {
	if o == nil || o.ExecutionId == nil {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLog) GetExecutionIdOk() (*string, bool) {
	if o == nil || o.ExecutionId == nil {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *EnvironmentLog) HasExecutionId() bool {
	if o != nil && o.ExecutionId != nil {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *EnvironmentLog) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetHint returns the Hint field value if set, zero value otherwise.
func (o *EnvironmentLog) GetHint() string {
	if o == nil || o.Hint == nil {
		var ret string
		return ret
	}
	return *o.Hint
}

// GetHintOk returns a tuple with the Hint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLog) GetHintOk() (*string, bool) {
	if o == nil || o.Hint == nil {
		return nil, false
	}
	return o.Hint, true
}

// HasHint returns a boolean if a field has been set.
func (o *EnvironmentLog) HasHint() bool {
	if o != nil && o.Hint != nil {
		return true
	}

	return false
}

// SetHint gets a reference to the given string and assigns it to the Hint field.
func (o *EnvironmentLog) SetHint(v string) {
	o.Hint = &v
}

func (o EnvironmentLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["message"] = o.Message.Get()
	}
	if o.ExecutionId != nil {
		toSerialize["execution_id"] = o.ExecutionId
	}
	if o.Hint != nil {
		toSerialize["hint"] = o.Hint
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentLog struct {
	value *EnvironmentLog
	isSet bool
}

func (v NullableEnvironmentLog) Get() *EnvironmentLog {
	return v.value
}

func (v *NullableEnvironmentLog) Set(val *EnvironmentLog) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentLog) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentLog(val *EnvironmentLog) *NullableEnvironmentLog {
	return &NullableEnvironmentLog{value: val, isSet: true}
}

func (v NullableEnvironmentLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
