/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// MetricStorageDatapoint struct for MetricStorageDatapoint
type MetricStorageDatapoint struct {
	CreatedAt time.Time `json:"created_at"`
	// Unit is in GB.
	RequestedInGb *int32 `json:"requested_in_gb,omitempty"`
	// Unit is in GB.
	ConsumedInGb      *float32 `json:"consumed_in_gb,omitempty"`
	ConsumedInPercent float32  `json:"consumed_in_percent"`
}

// NewMetricStorageDatapoint instantiates a new MetricStorageDatapoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricStorageDatapoint(createdAt time.Time, consumedInPercent float32) *MetricStorageDatapoint {
	this := MetricStorageDatapoint{}
	this.CreatedAt = createdAt
	this.ConsumedInPercent = consumedInPercent
	return &this
}

// NewMetricStorageDatapointWithDefaults instantiates a new MetricStorageDatapoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricStorageDatapointWithDefaults() *MetricStorageDatapoint {
	this := MetricStorageDatapoint{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *MetricStorageDatapoint) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *MetricStorageDatapoint) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *MetricStorageDatapoint) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetRequestedInGb returns the RequestedInGb field value if set, zero value otherwise.
func (o *MetricStorageDatapoint) GetRequestedInGb() int32 {
	if o == nil || o.RequestedInGb == nil {
		var ret int32
		return ret
	}
	return *o.RequestedInGb
}

// GetRequestedInGbOk returns a tuple with the RequestedInGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStorageDatapoint) GetRequestedInGbOk() (*int32, bool) {
	if o == nil || o.RequestedInGb == nil {
		return nil, false
	}
	return o.RequestedInGb, true
}

// HasRequestedInGb returns a boolean if a field has been set.
func (o *MetricStorageDatapoint) HasRequestedInGb() bool {
	if o != nil && o.RequestedInGb != nil {
		return true
	}

	return false
}

// SetRequestedInGb gets a reference to the given int32 and assigns it to the RequestedInGb field.
func (o *MetricStorageDatapoint) SetRequestedInGb(v int32) {
	o.RequestedInGb = &v
}

// GetConsumedInGb returns the ConsumedInGb field value if set, zero value otherwise.
func (o *MetricStorageDatapoint) GetConsumedInGb() float32 {
	if o == nil || o.ConsumedInGb == nil {
		var ret float32
		return ret
	}
	return *o.ConsumedInGb
}

// GetConsumedInGbOk returns a tuple with the ConsumedInGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStorageDatapoint) GetConsumedInGbOk() (*float32, bool) {
	if o == nil || o.ConsumedInGb == nil {
		return nil, false
	}
	return o.ConsumedInGb, true
}

// HasConsumedInGb returns a boolean if a field has been set.
func (o *MetricStorageDatapoint) HasConsumedInGb() bool {
	if o != nil && o.ConsumedInGb != nil {
		return true
	}

	return false
}

// SetConsumedInGb gets a reference to the given float32 and assigns it to the ConsumedInGb field.
func (o *MetricStorageDatapoint) SetConsumedInGb(v float32) {
	o.ConsumedInGb = &v
}

// GetConsumedInPercent returns the ConsumedInPercent field value
func (o *MetricStorageDatapoint) GetConsumedInPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ConsumedInPercent
}

// GetConsumedInPercentOk returns a tuple with the ConsumedInPercent field value
// and a boolean to check if the value has been set.
func (o *MetricStorageDatapoint) GetConsumedInPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConsumedInPercent, true
}

// SetConsumedInPercent sets field value
func (o *MetricStorageDatapoint) SetConsumedInPercent(v float32) {
	o.ConsumedInPercent = v
}

func (o MetricStorageDatapoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.RequestedInGb != nil {
		toSerialize["requested_in_gb"] = o.RequestedInGb
	}
	if o.ConsumedInGb != nil {
		toSerialize["consumed_in_gb"] = o.ConsumedInGb
	}
	if true {
		toSerialize["consumed_in_percent"] = o.ConsumedInPercent
	}
	return json.Marshal(toSerialize)
}

type NullableMetricStorageDatapoint struct {
	value *MetricStorageDatapoint
	isSet bool
}

func (v NullableMetricStorageDatapoint) Get() *MetricStorageDatapoint {
	return v.value
}

func (v *NullableMetricStorageDatapoint) Set(val *MetricStorageDatapoint) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricStorageDatapoint) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricStorageDatapoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricStorageDatapoint(val *MetricStorageDatapoint) *NullableMetricStorageDatapoint {
	return &NullableMetricStorageDatapoint{value: val, isSet: true}
}

func (v NullableMetricStorageDatapoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricStorageDatapoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
