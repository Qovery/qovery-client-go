/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.2
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// GitRepositoryResponse struct for GitRepositoryResponse
type GitRepositoryResponse struct {
	Id            string  `json:"id"`
	Name          string  `json:"name"`
	Url           string  `json:"url"`
	DefaultBranch *string `json:"default_branch,omitempty"`
	IsPrivate     *bool   `json:"is_private,omitempty"`
}

// NewGitRepositoryResponse instantiates a new GitRepositoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGitRepositoryResponse(id string, name string, url string) *GitRepositoryResponse {
	this := GitRepositoryResponse{}
	this.Id = id
	this.Name = name
	this.Url = url
	return &this
}

// NewGitRepositoryResponseWithDefaults instantiates a new GitRepositoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitRepositoryResponseWithDefaults() *GitRepositoryResponse {
	this := GitRepositoryResponse{}
	return &this
}

// GetId returns the Id field value
func (o *GitRepositoryResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GitRepositoryResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GitRepositoryResponse) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GitRepositoryResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GitRepositoryResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GitRepositoryResponse) SetName(v string) {
	o.Name = v
}

// GetUrl returns the Url field value
func (o *GitRepositoryResponse) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *GitRepositoryResponse) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *GitRepositoryResponse) SetUrl(v string) {
	o.Url = v
}

// GetDefaultBranch returns the DefaultBranch field value if set, zero value otherwise.
func (o *GitRepositoryResponse) GetDefaultBranch() string {
	if o == nil || o.DefaultBranch == nil {
		var ret string
		return ret
	}
	return *o.DefaultBranch
}

// GetDefaultBranchOk returns a tuple with the DefaultBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitRepositoryResponse) GetDefaultBranchOk() (*string, bool) {
	if o == nil || o.DefaultBranch == nil {
		return nil, false
	}
	return o.DefaultBranch, true
}

// HasDefaultBranch returns a boolean if a field has been set.
func (o *GitRepositoryResponse) HasDefaultBranch() bool {
	if o != nil && o.DefaultBranch != nil {
		return true
	}

	return false
}

// SetDefaultBranch gets a reference to the given string and assigns it to the DefaultBranch field.
func (o *GitRepositoryResponse) SetDefaultBranch(v string) {
	o.DefaultBranch = &v
}

// GetIsPrivate returns the IsPrivate field value if set, zero value otherwise.
func (o *GitRepositoryResponse) GetIsPrivate() bool {
	if o == nil || o.IsPrivate == nil {
		var ret bool
		return ret
	}
	return *o.IsPrivate
}

// GetIsPrivateOk returns a tuple with the IsPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitRepositoryResponse) GetIsPrivateOk() (*bool, bool) {
	if o == nil || o.IsPrivate == nil {
		return nil, false
	}
	return o.IsPrivate, true
}

// HasIsPrivate returns a boolean if a field has been set.
func (o *GitRepositoryResponse) HasIsPrivate() bool {
	if o != nil && o.IsPrivate != nil {
		return true
	}

	return false
}

// SetIsPrivate gets a reference to the given bool and assigns it to the IsPrivate field.
func (o *GitRepositoryResponse) SetIsPrivate(v bool) {
	o.IsPrivate = &v
}

func (o GitRepositoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if o.DefaultBranch != nil {
		toSerialize["default_branch"] = o.DefaultBranch
	}
	if o.IsPrivate != nil {
		toSerialize["is_private"] = o.IsPrivate
	}
	return json.Marshal(toSerialize)
}

type NullableGitRepositoryResponse struct {
	value *GitRepositoryResponse
	isSet bool
}

func (v NullableGitRepositoryResponse) Get() *GitRepositoryResponse {
	return v.value
}

func (v *NullableGitRepositoryResponse) Set(val *GitRepositoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGitRepositoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGitRepositoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitRepositoryResponse(val *GitRepositoryResponse) *NullableGitRepositoryResponse {
	return &NullableGitRepositoryResponse{value: val, isSet: true}
}

func (v NullableGitRepositoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitRepositoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
