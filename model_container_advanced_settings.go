/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ContainerAdvancedSettings struct for ContainerAdvancedSettings
type ContainerAdvancedSettings struct {
	DeploymentDelayStartTimeSec *int32 `json:"deployment.delay_start_time_sec,omitempty"`
	BuildTimeoutMaxSec          *int32 `json:"build.timeout_max_sec,omitempty"`
}

// NewContainerAdvancedSettings instantiates a new ContainerAdvancedSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerAdvancedSettings() *ContainerAdvancedSettings {
	this := ContainerAdvancedSettings{}
	return &this
}

// NewContainerAdvancedSettingsWithDefaults instantiates a new ContainerAdvancedSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerAdvancedSettingsWithDefaults() *ContainerAdvancedSettings {
	this := ContainerAdvancedSettings{}
	return &this
}

// GetDeploymentDelayStartTimeSec returns the DeploymentDelayStartTimeSec field value if set, zero value otherwise.
func (o *ContainerAdvancedSettings) GetDeploymentDelayStartTimeSec() int32 {
	if o == nil || o.DeploymentDelayStartTimeSec == nil {
		var ret int32
		return ret
	}
	return *o.DeploymentDelayStartTimeSec
}

// GetDeploymentDelayStartTimeSecOk returns a tuple with the DeploymentDelayStartTimeSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerAdvancedSettings) GetDeploymentDelayStartTimeSecOk() (*int32, bool) {
	if o == nil || o.DeploymentDelayStartTimeSec == nil {
		return nil, false
	}
	return o.DeploymentDelayStartTimeSec, true
}

// HasDeploymentDelayStartTimeSec returns a boolean if a field has been set.
func (o *ContainerAdvancedSettings) HasDeploymentDelayStartTimeSec() bool {
	if o != nil && o.DeploymentDelayStartTimeSec != nil {
		return true
	}

	return false
}

// SetDeploymentDelayStartTimeSec gets a reference to the given int32 and assigns it to the DeploymentDelayStartTimeSec field.
func (o *ContainerAdvancedSettings) SetDeploymentDelayStartTimeSec(v int32) {
	o.DeploymentDelayStartTimeSec = &v
}

// GetBuildTimeoutMaxSec returns the BuildTimeoutMaxSec field value if set, zero value otherwise.
func (o *ContainerAdvancedSettings) GetBuildTimeoutMaxSec() int32 {
	if o == nil || o.BuildTimeoutMaxSec == nil {
		var ret int32
		return ret
	}
	return *o.BuildTimeoutMaxSec
}

// GetBuildTimeoutMaxSecOk returns a tuple with the BuildTimeoutMaxSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerAdvancedSettings) GetBuildTimeoutMaxSecOk() (*int32, bool) {
	if o == nil || o.BuildTimeoutMaxSec == nil {
		return nil, false
	}
	return o.BuildTimeoutMaxSec, true
}

// HasBuildTimeoutMaxSec returns a boolean if a field has been set.
func (o *ContainerAdvancedSettings) HasBuildTimeoutMaxSec() bool {
	if o != nil && o.BuildTimeoutMaxSec != nil {
		return true
	}

	return false
}

// SetBuildTimeoutMaxSec gets a reference to the given int32 and assigns it to the BuildTimeoutMaxSec field.
func (o *ContainerAdvancedSettings) SetBuildTimeoutMaxSec(v int32) {
	o.BuildTimeoutMaxSec = &v
}

func (o ContainerAdvancedSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentDelayStartTimeSec != nil {
		toSerialize["deployment.delay_start_time_sec"] = o.DeploymentDelayStartTimeSec
	}
	if o.BuildTimeoutMaxSec != nil {
		toSerialize["build.timeout_max_sec"] = o.BuildTimeoutMaxSec
	}
	return json.Marshal(toSerialize)
}

type NullableContainerAdvancedSettings struct {
	value *ContainerAdvancedSettings
	isSet bool
}

func (v NullableContainerAdvancedSettings) Get() *ContainerAdvancedSettings {
	return v.value
}

func (v *NullableContainerAdvancedSettings) Set(val *ContainerAdvancedSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerAdvancedSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerAdvancedSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerAdvancedSettings(val *ContainerAdvancedSettings) *NullableContainerAdvancedSettings {
	return &NullableContainerAdvancedSettings{value: val, isSet: true}
}

func (v NullableContainerAdvancedSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerAdvancedSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
