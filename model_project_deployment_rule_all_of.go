/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ProjectDeploymentRuleAllOf struct for ProjectDeploymentRuleAllOf
type ProjectDeploymentRuleAllOf struct {
	// used to select the first deployment rule to match new created environments
	PriorityIndex *int32 `json:"priority_index,omitempty"`
}

// NewProjectDeploymentRuleAllOf instantiates a new ProjectDeploymentRuleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectDeploymentRuleAllOf() *ProjectDeploymentRuleAllOf {
	this := ProjectDeploymentRuleAllOf{}
	return &this
}

// NewProjectDeploymentRuleAllOfWithDefaults instantiates a new ProjectDeploymentRuleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectDeploymentRuleAllOfWithDefaults() *ProjectDeploymentRuleAllOf {
	this := ProjectDeploymentRuleAllOf{}
	return &this
}

// GetPriorityIndex returns the PriorityIndex field value if set, zero value otherwise.
func (o *ProjectDeploymentRuleAllOf) GetPriorityIndex() int32 {
	if o == nil || o.PriorityIndex == nil {
		var ret int32
		return ret
	}
	return *o.PriorityIndex
}

// GetPriorityIndexOk returns a tuple with the PriorityIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDeploymentRuleAllOf) GetPriorityIndexOk() (*int32, bool) {
	if o == nil || o.PriorityIndex == nil {
		return nil, false
	}
	return o.PriorityIndex, true
}

// HasPriorityIndex returns a boolean if a field has been set.
func (o *ProjectDeploymentRuleAllOf) HasPriorityIndex() bool {
	if o != nil && o.PriorityIndex != nil {
		return true
	}

	return false
}

// SetPriorityIndex gets a reference to the given int32 and assigns it to the PriorityIndex field.
func (o *ProjectDeploymentRuleAllOf) SetPriorityIndex(v int32) {
	o.PriorityIndex = &v
}

func (o ProjectDeploymentRuleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PriorityIndex != nil {
		toSerialize["priority_index"] = o.PriorityIndex
	}
	return json.Marshal(toSerialize)
}

type NullableProjectDeploymentRuleAllOf struct {
	value *ProjectDeploymentRuleAllOf
	isSet bool
}

func (v NullableProjectDeploymentRuleAllOf) Get() *ProjectDeploymentRuleAllOf {
	return v.value
}

func (v *NullableProjectDeploymentRuleAllOf) Set(val *ProjectDeploymentRuleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectDeploymentRuleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectDeploymentRuleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectDeploymentRuleAllOf(val *ProjectDeploymentRuleAllOf) *NullableProjectDeploymentRuleAllOf {
	return &NullableProjectDeploymentRuleAllOf{value: val, isSet: true}
}

func (v NullableProjectDeploymentRuleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectDeploymentRuleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
