/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// DeploymentHistoryApplicationAllOf struct for DeploymentHistoryApplicationAllOf
type DeploymentHistoryApplicationAllOf struct {
	Name   *string        `json:"name,omitempty"`
	Commit NullableCommit `json:"commit,omitempty"`
	Status *StateEnum     `json:"status,omitempty"`
}

// NewDeploymentHistoryApplicationAllOf instantiates a new DeploymentHistoryApplicationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentHistoryApplicationAllOf() *DeploymentHistoryApplicationAllOf {
	this := DeploymentHistoryApplicationAllOf{}
	return &this
}

// NewDeploymentHistoryApplicationAllOfWithDefaults instantiates a new DeploymentHistoryApplicationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentHistoryApplicationAllOfWithDefaults() *DeploymentHistoryApplicationAllOf {
	this := DeploymentHistoryApplicationAllOf{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DeploymentHistoryApplicationAllOf) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryApplicationAllOf) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DeploymentHistoryApplicationAllOf) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DeploymentHistoryApplicationAllOf) SetName(v string) {
	o.Name = &v
}

// GetCommit returns the Commit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentHistoryApplicationAllOf) GetCommit() Commit {
	if o == nil || o.Commit.Get() == nil {
		var ret Commit
		return ret
	}
	return *o.Commit.Get()
}

// GetCommitOk returns a tuple with the Commit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentHistoryApplicationAllOf) GetCommitOk() (*Commit, bool) {
	if o == nil {
		return nil, false
	}
	return o.Commit.Get(), o.Commit.IsSet()
}

// HasCommit returns a boolean if a field has been set.
func (o *DeploymentHistoryApplicationAllOf) HasCommit() bool {
	if o != nil && o.Commit.IsSet() {
		return true
	}

	return false
}

// SetCommit gets a reference to the given NullableCommit and assigns it to the Commit field.
func (o *DeploymentHistoryApplicationAllOf) SetCommit(v Commit) {
	o.Commit.Set(&v)
}

// SetCommitNil sets the value for Commit to be an explicit nil
func (o *DeploymentHistoryApplicationAllOf) SetCommitNil() {
	o.Commit.Set(nil)
}

// UnsetCommit ensures that no value is present for Commit, not even an explicit nil
func (o *DeploymentHistoryApplicationAllOf) UnsetCommit() {
	o.Commit.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DeploymentHistoryApplicationAllOf) GetStatus() StateEnum {
	if o == nil || o.Status == nil {
		var ret StateEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryApplicationAllOf) GetStatusOk() (*StateEnum, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DeploymentHistoryApplicationAllOf) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given StateEnum and assigns it to the Status field.
func (o *DeploymentHistoryApplicationAllOf) SetStatus(v StateEnum) {
	o.Status = &v
}

func (o DeploymentHistoryApplicationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Commit.IsSet() {
		toSerialize["commit"] = o.Commit.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentHistoryApplicationAllOf struct {
	value *DeploymentHistoryApplicationAllOf
	isSet bool
}

func (v NullableDeploymentHistoryApplicationAllOf) Get() *DeploymentHistoryApplicationAllOf {
	return v.value
}

func (v *NullableDeploymentHistoryApplicationAllOf) Set(val *DeploymentHistoryApplicationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentHistoryApplicationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentHistoryApplicationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentHistoryApplicationAllOf(val *DeploymentHistoryApplicationAllOf) *NullableDeploymentHistoryApplicationAllOf {
	return &NullableDeploymentHistoryApplicationAllOf{value: val, isSet: true}
}

func (v NullableDeploymentHistoryApplicationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentHistoryApplicationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
