/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the DeploymentHistoryServiceDetailsOneOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentHistoryServiceDetailsOneOf2{}

// DeploymentHistoryServiceDetailsOneOf2 JobDeploymentHistoryDetails
type DeploymentHistoryServiceDetailsOneOf2 struct {
	ImageName            string                                         `json:"image_name"`
	Tag                  string                                         `json:"tag"`
	Commit               NullableCommit                                 `json:"commit,omitempty"`
	Schedule             *DeploymentHistoryServiceDetailsOneOf2Schedule `json:"schedule,omitempty"`
	JobType              string                                         `json:"job_type"`
	AdditionalProperties map[string]interface{}
}

type _DeploymentHistoryServiceDetailsOneOf2 DeploymentHistoryServiceDetailsOneOf2

// NewDeploymentHistoryServiceDetailsOneOf2 instantiates a new DeploymentHistoryServiceDetailsOneOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentHistoryServiceDetailsOneOf2(imageName string, tag string, jobType string) *DeploymentHistoryServiceDetailsOneOf2 {
	this := DeploymentHistoryServiceDetailsOneOf2{}
	this.ImageName = imageName
	this.Tag = tag
	this.JobType = jobType
	return &this
}

// NewDeploymentHistoryServiceDetailsOneOf2WithDefaults instantiates a new DeploymentHistoryServiceDetailsOneOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentHistoryServiceDetailsOneOf2WithDefaults() *DeploymentHistoryServiceDetailsOneOf2 {
	this := DeploymentHistoryServiceDetailsOneOf2{}
	return &this
}

// GetImageName returns the ImageName field value
func (o *DeploymentHistoryServiceDetailsOneOf2) GetImageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryServiceDetailsOneOf2) GetImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageName, true
}

// SetImageName sets field value
func (o *DeploymentHistoryServiceDetailsOneOf2) SetImageName(v string) {
	o.ImageName = v
}

// GetTag returns the Tag field value
func (o *DeploymentHistoryServiceDetailsOneOf2) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryServiceDetailsOneOf2) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *DeploymentHistoryServiceDetailsOneOf2) SetTag(v string) {
	o.Tag = v
}

// GetCommit returns the Commit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentHistoryServiceDetailsOneOf2) GetCommit() Commit {
	if o == nil || IsNil(o.Commit.Get()) {
		var ret Commit
		return ret
	}
	return *o.Commit.Get()
}

// GetCommitOk returns a tuple with the Commit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentHistoryServiceDetailsOneOf2) GetCommitOk() (*Commit, bool) {
	if o == nil {
		return nil, false
	}
	return o.Commit.Get(), o.Commit.IsSet()
}

// HasCommit returns a boolean if a field has been set.
func (o *DeploymentHistoryServiceDetailsOneOf2) HasCommit() bool {
	if o != nil && o.Commit.IsSet() {
		return true
	}

	return false
}

// SetCommit gets a reference to the given NullableCommit and assigns it to the Commit field.
func (o *DeploymentHistoryServiceDetailsOneOf2) SetCommit(v Commit) {
	o.Commit.Set(&v)
}

// SetCommitNil sets the value for Commit to be an explicit nil
func (o *DeploymentHistoryServiceDetailsOneOf2) SetCommitNil() {
	o.Commit.Set(nil)
}

// UnsetCommit ensures that no value is present for Commit, not even an explicit nil
func (o *DeploymentHistoryServiceDetailsOneOf2) UnsetCommit() {
	o.Commit.Unset()
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *DeploymentHistoryServiceDetailsOneOf2) GetSchedule() DeploymentHistoryServiceDetailsOneOf2Schedule {
	if o == nil || IsNil(o.Schedule) {
		var ret DeploymentHistoryServiceDetailsOneOf2Schedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryServiceDetailsOneOf2) GetScheduleOk() (*DeploymentHistoryServiceDetailsOneOf2Schedule, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *DeploymentHistoryServiceDetailsOneOf2) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given DeploymentHistoryServiceDetailsOneOf2Schedule and assigns it to the Schedule field.
func (o *DeploymentHistoryServiceDetailsOneOf2) SetSchedule(v DeploymentHistoryServiceDetailsOneOf2Schedule) {
	o.Schedule = &v
}

// GetJobType returns the JobType field value
func (o *DeploymentHistoryServiceDetailsOneOf2) GetJobType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryServiceDetailsOneOf2) GetJobTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobType, true
}

// SetJobType sets field value
func (o *DeploymentHistoryServiceDetailsOneOf2) SetJobType(v string) {
	o.JobType = v
}

func (o DeploymentHistoryServiceDetailsOneOf2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentHistoryServiceDetailsOneOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["image_name"] = o.ImageName
	toSerialize["tag"] = o.Tag
	if o.Commit.IsSet() {
		toSerialize["commit"] = o.Commit.Get()
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	toSerialize["job_type"] = o.JobType

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DeploymentHistoryServiceDetailsOneOf2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"image_name",
		"tag",
		"job_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeploymentHistoryServiceDetailsOneOf2 := _DeploymentHistoryServiceDetailsOneOf2{}

	err = json.Unmarshal(data, &varDeploymentHistoryServiceDetailsOneOf2)

	if err != nil {
		return err
	}

	*o = DeploymentHistoryServiceDetailsOneOf2(varDeploymentHistoryServiceDetailsOneOf2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "image_name")
		delete(additionalProperties, "tag")
		delete(additionalProperties, "commit")
		delete(additionalProperties, "schedule")
		delete(additionalProperties, "job_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeploymentHistoryServiceDetailsOneOf2 struct {
	value *DeploymentHistoryServiceDetailsOneOf2
	isSet bool
}

func (v NullableDeploymentHistoryServiceDetailsOneOf2) Get() *DeploymentHistoryServiceDetailsOneOf2 {
	return v.value
}

func (v *NullableDeploymentHistoryServiceDetailsOneOf2) Set(val *DeploymentHistoryServiceDetailsOneOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentHistoryServiceDetailsOneOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentHistoryServiceDetailsOneOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentHistoryServiceDetailsOneOf2(val *DeploymentHistoryServiceDetailsOneOf2) *NullableDeploymentHistoryServiceDetailsOneOf2 {
	return &NullableDeploymentHistoryServiceDetailsOneOf2{value: val, isSet: true}
}

func (v NullableDeploymentHistoryServiceDetailsOneOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentHistoryServiceDetailsOneOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
