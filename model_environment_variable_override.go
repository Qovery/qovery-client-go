/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// EnvironmentVariableOverride struct for EnvironmentVariableOverride
type EnvironmentVariableOverride struct {
	Id           string               `json:"id"`
	Key          string               `json:"key"`
	Value        string               `json:"value"`
	MountPath    string               `json:"mount_path"`
	Scope        APIVariableScopeEnum `json:"scope"`
	VariableType APIVariableTypeEnum  `json:"variable_type"`
}

// NewEnvironmentVariableOverride instantiates a new EnvironmentVariableOverride object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentVariableOverride(id string, key string, value string, mountPath string, scope APIVariableScopeEnum, variableType APIVariableTypeEnum) *EnvironmentVariableOverride {
	this := EnvironmentVariableOverride{}
	this.Id = id
	this.Key = key
	this.Value = value
	this.MountPath = mountPath
	this.Scope = scope
	this.VariableType = variableType
	return &this
}

// NewEnvironmentVariableOverrideWithDefaults instantiates a new EnvironmentVariableOverride object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentVariableOverrideWithDefaults() *EnvironmentVariableOverride {
	this := EnvironmentVariableOverride{}
	return &this
}

// GetId returns the Id field value
func (o *EnvironmentVariableOverride) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableOverride) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EnvironmentVariableOverride) SetId(v string) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *EnvironmentVariableOverride) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableOverride) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *EnvironmentVariableOverride) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *EnvironmentVariableOverride) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableOverride) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *EnvironmentVariableOverride) SetValue(v string) {
	o.Value = v
}

// GetMountPath returns the MountPath field value
func (o *EnvironmentVariableOverride) GetMountPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MountPath
}

// GetMountPathOk returns a tuple with the MountPath field value
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableOverride) GetMountPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MountPath, true
}

// SetMountPath sets field value
func (o *EnvironmentVariableOverride) SetMountPath(v string) {
	o.MountPath = v
}

// GetScope returns the Scope field value
func (o *EnvironmentVariableOverride) GetScope() APIVariableScopeEnum {
	if o == nil {
		var ret APIVariableScopeEnum
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableOverride) GetScopeOk() (*APIVariableScopeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *EnvironmentVariableOverride) SetScope(v APIVariableScopeEnum) {
	o.Scope = v
}

// GetVariableType returns the VariableType field value
func (o *EnvironmentVariableOverride) GetVariableType() APIVariableTypeEnum {
	if o == nil {
		var ret APIVariableTypeEnum
		return ret
	}

	return o.VariableType
}

// GetVariableTypeOk returns a tuple with the VariableType field value
// and a boolean to check if the value has been set.
func (o *EnvironmentVariableOverride) GetVariableTypeOk() (*APIVariableTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VariableType, true
}

// SetVariableType sets field value
func (o *EnvironmentVariableOverride) SetVariableType(v APIVariableTypeEnum) {
	o.VariableType = v
}

func (o EnvironmentVariableOverride) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["mount_path"] = o.MountPath
	}
	if true {
		toSerialize["scope"] = o.Scope
	}
	if true {
		toSerialize["variable_type"] = o.VariableType
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentVariableOverride struct {
	value *EnvironmentVariableOverride
	isSet bool
}

func (v NullableEnvironmentVariableOverride) Get() *EnvironmentVariableOverride {
	return v.value
}

func (v *NullableEnvironmentVariableOverride) Set(val *EnvironmentVariableOverride) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentVariableOverride) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentVariableOverride) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentVariableOverride(val *EnvironmentVariableOverride) *NullableEnvironmentVariableOverride {
	return &NullableEnvironmentVariableOverride{value: val, isSet: true}
}

func (v NullableEnvironmentVariableOverride) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentVariableOverride) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
