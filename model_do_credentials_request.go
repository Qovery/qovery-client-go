/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the DoCredentialsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DoCredentialsRequest{}

// DoCredentialsRequest struct for DoCredentialsRequest
type DoCredentialsRequest struct {
	Name            string  `json:"name"`
	Token           *string `json:"token,omitempty"`
	SpacesAccessId  *string `json:"spaces_access_id,omitempty"`
	SpacesSecretKey *string `json:"spaces_secret_key,omitempty"`
}

// NewDoCredentialsRequest instantiates a new DoCredentialsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDoCredentialsRequest(name string) *DoCredentialsRequest {
	this := DoCredentialsRequest{}
	this.Name = name
	return &this
}

// NewDoCredentialsRequestWithDefaults instantiates a new DoCredentialsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDoCredentialsRequestWithDefaults() *DoCredentialsRequest {
	this := DoCredentialsRequest{}
	return &this
}

// GetName returns the Name field value
func (o *DoCredentialsRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DoCredentialsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DoCredentialsRequest) SetName(v string) {
	o.Name = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *DoCredentialsRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DoCredentialsRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *DoCredentialsRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *DoCredentialsRequest) SetToken(v string) {
	o.Token = &v
}

// GetSpacesAccessId returns the SpacesAccessId field value if set, zero value otherwise.
func (o *DoCredentialsRequest) GetSpacesAccessId() string {
	if o == nil || IsNil(o.SpacesAccessId) {
		var ret string
		return ret
	}
	return *o.SpacesAccessId
}

// GetSpacesAccessIdOk returns a tuple with the SpacesAccessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DoCredentialsRequest) GetSpacesAccessIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpacesAccessId) {
		return nil, false
	}
	return o.SpacesAccessId, true
}

// HasSpacesAccessId returns a boolean if a field has been set.
func (o *DoCredentialsRequest) HasSpacesAccessId() bool {
	if o != nil && !IsNil(o.SpacesAccessId) {
		return true
	}

	return false
}

// SetSpacesAccessId gets a reference to the given string and assigns it to the SpacesAccessId field.
func (o *DoCredentialsRequest) SetSpacesAccessId(v string) {
	o.SpacesAccessId = &v
}

// GetSpacesSecretKey returns the SpacesSecretKey field value if set, zero value otherwise.
func (o *DoCredentialsRequest) GetSpacesSecretKey() string {
	if o == nil || IsNil(o.SpacesSecretKey) {
		var ret string
		return ret
	}
	return *o.SpacesSecretKey
}

// GetSpacesSecretKeyOk returns a tuple with the SpacesSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DoCredentialsRequest) GetSpacesSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SpacesSecretKey) {
		return nil, false
	}
	return o.SpacesSecretKey, true
}

// HasSpacesSecretKey returns a boolean if a field has been set.
func (o *DoCredentialsRequest) HasSpacesSecretKey() bool {
	if o != nil && !IsNil(o.SpacesSecretKey) {
		return true
	}

	return false
}

// SetSpacesSecretKey gets a reference to the given string and assigns it to the SpacesSecretKey field.
func (o *DoCredentialsRequest) SetSpacesSecretKey(v string) {
	o.SpacesSecretKey = &v
}

func (o DoCredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DoCredentialsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.SpacesAccessId) {
		toSerialize["spaces_access_id"] = o.SpacesAccessId
	}
	if !IsNil(o.SpacesSecretKey) {
		toSerialize["spaces_secret_key"] = o.SpacesSecretKey
	}
	return toSerialize, nil
}

type NullableDoCredentialsRequest struct {
	value *DoCredentialsRequest
	isSet bool
}

func (v NullableDoCredentialsRequest) Get() *DoCredentialsRequest {
	return v.value
}

func (v *NullableDoCredentialsRequest) Set(val *DoCredentialsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDoCredentialsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDoCredentialsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDoCredentialsRequest(val *DoCredentialsRequest) *NullableDoCredentialsRequest {
	return &NullableDoCredentialsRequest{value: val, isSet: true}
}

func (v NullableDoCredentialsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDoCredentialsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
