/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ApplicationAdvancedSettings struct for ApplicationAdvancedSettings
type ApplicationAdvancedSettings struct {
	// disable custom domain check when deploying an application
	DeploymentCustomDomainCheckEnabled *bool `json:"deployment.custom_domain_check_enabled,omitempty"`
	// define how long in seconds an application is supposed to be stopped gracefully
	DeploymentTerminationGracePeriodSeconds *int32 `json:"deployment.termination_grace_period_seconds,omitempty"`
	// Set pod placement on specific Kubernetes nodes labels
	DeploymentAffinityNodeRequired *map[string]string `json:"deployment.affinity.node.required,omitempty"`
	// Define how you want pods affinity to behave: * `Preferred` allows, but does not require, pods of a given service are not co-located (or co-hosted) on a single node * `Requirred` ensures that the pods of a given service are not co-located (or co-hosted) on a single node (safer in term of availability but can be expensive depending on the number of replicas)
	DeploymentAntiaffinityPod *string `json:"deployment.antiaffinity.pod,omitempty"`
	// * `RollingUpdate` gracefully rollout new versions, and automatically rollback if the new version fails to start * `Recreate` stop all current versions and create new ones once all old ones have been shutdown
	DeploymentUpdateStrategyType *string `json:"deployment.update_strategy.type,omitempty"`
	// Define the percentage of a maximum number of pods that can be unavailable during the update process
	DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent *int32 `json:"deployment.update_strategy.rolling_update.max_unavailable_percent,omitempty"`
	// Define the percentage of the maximum number of pods that can be created over the desired number of pods
	DeploymentUpdateStrategyRollingUpdateMaxSurgePercent *int32 `json:"deployment.update_strategy.rolling_update.max_surge_percent,omitempty"`
	BuildTimeoutMaxSec                                   *int32 `json:"build.timeout_max_sec,omitempty"`
	// define the max cpu resources (in milli)
	BuildCpuMaxInMilli *int32 `json:"build.cpu_max_in_milli,omitempty"`
	// define the max ram resources (in gib)
	BuildRamMaxInGib               *int32  `json:"build.ram_max_in_gib,omitempty"`
	NetworkIngressProxyBodySizeMb  *int32  `json:"network.ingress.proxy_body_size_mb,omitempty"`
	NetworkIngressEnableCors       *bool   `json:"network.ingress.enable_cors,omitempty"`
	NetworkIngressCorsAllowOrigin  *string `json:"network.ingress.cors_allow_origin,omitempty"`
	NetworkIngressCorsAllowMethods *string `json:"network.ingress.cors_allow_methods,omitempty"`
	NetworkIngressCorsAllowHeaders *string `json:"network.ingress.cors_allow_headers,omitempty"`
	// header buffer size used while reading response header from upstream
	NetworkIngressProxyBufferSizeKb *int32 `json:"network.ingress.proxy_buffer_size_kb,omitempty"`
	// Limits the maximum time (in seconds) during which requests can be processed through one keepalive connection
	NetworkIngressKeepaliveTimeSeconds *int32 `json:"network.ingress.keepalive_time_seconds,omitempty"`
	// Sets a timeout (in seconds) during which an idle keepalive connection to an upstream server will stay open.
	NetworkIngressKeepaliveTimeoutSeconds *int32 `json:"network.ingress.keepalive_timeout_seconds,omitempty"`
	// Sets a timeout (in seconds) for transmitting a response to the client
	NetworkIngressSendTimeoutSeconds *int32 `json:"network.ingress.send_timeout_seconds,omitempty"`
	// Sets a timeout (in seconds) for establishing a connection to a proxied server
	NetworkIngressProxyConnectTimeoutSeconds *int32 `json:"network.ingress.proxy_connect_timeout_seconds,omitempty"`
	// Sets a timeout (in seconds) for transmitting a request to the proxied server
	NetworkIngressProxySendTimeoutSeconds *int32 `json:"network.ingress.proxy_send_timeout_seconds,omitempty"`
	// Sets a timeout (in seconds) for reading a response from the proxied server
	NetworkIngressProxyReadTimeoutSeconds *int32 `json:"network.ingress.proxy_read_timeout_seconds,omitempty"`
	// Allows to enable or disable nginx `proxy-buffering`
	NetworkIngressProxyBuffering *string `json:"network.ingress.proxy_buffering,omitempty"`
	// Allows to enable or disable nginx `proxy-request-buffering`
	NetworkIngressProxyRequestBuffering *string `json:"network.ingress.proxy_request_buffering,omitempty"`
	// list of source ranges to allow access to ingress proxy.  This property can be used to whitelist source IP ranges for ingress proxy. The value is a comma separated list of CIDRs, e.g. 10.0.0.0/24,172.10.0.1 To allow all source ranges, set 0.0.0.0/0.
	NetworkIngressWhitelistSourceRange *string `json:"network.ingress.whitelist_source_range,omitempty"`
	// list of source ranges to deny access to ingress proxy.  This property can be used to blacklist source IP ranges for ingress proxy. The value is a comma separated list of CIDRs, e.g. 10.0.0.0/24,172.10.0.1
	NetworkIngressDenylistSourceRange *string `json:"network.ingress.denylist_source_range,omitempty"`
	// Set the name of an environment variable to use as a basic authentication (`login:crypted_password`) from `htpasswd` command.
	NetworkIngressBasicAuthEnvVar *string `json:"network.ingress.basic_auth_env_var,omitempty"`
	// Enable the load balancer to bind a user's session to a specific target. This ensures that all requests from the user during the session are sent to the same target
	NetworkIngressEnableStickySession *bool `json:"network.ingress.enable_sticky_session,omitempty"`
	// Sets a timeout (in seconds) for transmitting a request to the grpc server
	NetworkIngressGrpcSendTimeoutSeconds *int32 `json:"network.ingress.grpc_send_timeout_seconds,omitempty"`
	// Sets a timeout (in seconds) for transmitting a request to the grpc server
	NetworkIngressGrpcReadTimeoutSeconds *int32 `json:"network.ingress.grpc_read_timeout_seconds,omitempty"`
	// Allows to define response headers
	NetworkIngressExtraHeaders *string `json:"network.ingress.extra_headers,omitempty"`
	// Percentage value of cpu usage at which point pods should scale up.
	HpaCpuAverageUtilizationPercent *int32 `json:"hpa.cpu.average_utilization_percent,omitempty"`
	// Allows you to set an existing Kubernetes service account name
	SecurityServiceAccountName *string `json:"security.service_account_name,omitempty"`
}

// NewApplicationAdvancedSettings instantiates a new ApplicationAdvancedSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationAdvancedSettings() *ApplicationAdvancedSettings {
	this := ApplicationAdvancedSettings{}
	var deploymentCustomDomainCheckEnabled bool = true
	this.DeploymentCustomDomainCheckEnabled = &deploymentCustomDomainCheckEnabled
	var deploymentTerminationGracePeriodSeconds int32 = 60
	this.DeploymentTerminationGracePeriodSeconds = &deploymentTerminationGracePeriodSeconds
	var deploymentAntiaffinityPod string = "Preferred"
	this.DeploymentAntiaffinityPod = &deploymentAntiaffinityPod
	var deploymentUpdateStrategyType string = "RollingUpdate"
	this.DeploymentUpdateStrategyType = &deploymentUpdateStrategyType
	var deploymentUpdateStrategyRollingUpdateMaxUnavailablePercent int32 = 25
	this.DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent = &deploymentUpdateStrategyRollingUpdateMaxUnavailablePercent
	var deploymentUpdateStrategyRollingUpdateMaxSurgePercent int32 = 25
	this.DeploymentUpdateStrategyRollingUpdateMaxSurgePercent = &deploymentUpdateStrategyRollingUpdateMaxSurgePercent
	var buildTimeoutMaxSec int32 = 1800
	this.BuildTimeoutMaxSec = &buildTimeoutMaxSec
	var buildCpuMaxInMilli int32 = 4000
	this.BuildCpuMaxInMilli = &buildCpuMaxInMilli
	var buildRamMaxInGib int32 = 8
	this.BuildRamMaxInGib = &buildRamMaxInGib
	var networkIngressProxyBodySizeMb int32 = 100
	this.NetworkIngressProxyBodySizeMb = &networkIngressProxyBodySizeMb
	var networkIngressEnableCors bool = false
	this.NetworkIngressEnableCors = &networkIngressEnableCors
	var networkIngressCorsAllowOrigin string = "*"
	this.NetworkIngressCorsAllowOrigin = &networkIngressCorsAllowOrigin
	var networkIngressCorsAllowMethods string = "GET, PUT, POST, DELETE, PATCH, OPTIONS"
	this.NetworkIngressCorsAllowMethods = &networkIngressCorsAllowMethods
	var networkIngressCorsAllowHeaders string = "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
	this.NetworkIngressCorsAllowHeaders = &networkIngressCorsAllowHeaders
	var networkIngressProxyBufferSizeKb int32 = 4
	this.NetworkIngressProxyBufferSizeKb = &networkIngressProxyBufferSizeKb
	var networkIngressKeepaliveTimeSeconds int32 = 3600
	this.NetworkIngressKeepaliveTimeSeconds = &networkIngressKeepaliveTimeSeconds
	var networkIngressKeepaliveTimeoutSeconds int32 = 60
	this.NetworkIngressKeepaliveTimeoutSeconds = &networkIngressKeepaliveTimeoutSeconds
	var networkIngressSendTimeoutSeconds int32 = 60
	this.NetworkIngressSendTimeoutSeconds = &networkIngressSendTimeoutSeconds
	var networkIngressProxyConnectTimeoutSeconds int32 = 60
	this.NetworkIngressProxyConnectTimeoutSeconds = &networkIngressProxyConnectTimeoutSeconds
	var networkIngressProxySendTimeoutSeconds int32 = 60
	this.NetworkIngressProxySendTimeoutSeconds = &networkIngressProxySendTimeoutSeconds
	var networkIngressProxyReadTimeoutSeconds int32 = 60
	this.NetworkIngressProxyReadTimeoutSeconds = &networkIngressProxyReadTimeoutSeconds
	var networkIngressProxyBuffering string = "on"
	this.NetworkIngressProxyBuffering = &networkIngressProxyBuffering
	var networkIngressProxyRequestBuffering string = "on"
	this.NetworkIngressProxyRequestBuffering = &networkIngressProxyRequestBuffering
	var networkIngressWhitelistSourceRange string = "0.0.0.0/0"
	this.NetworkIngressWhitelistSourceRange = &networkIngressWhitelistSourceRange
	var networkIngressDenylistSourceRange string = ""
	this.NetworkIngressDenylistSourceRange = &networkIngressDenylistSourceRange
	var networkIngressBasicAuthEnvVar string = ""
	this.NetworkIngressBasicAuthEnvVar = &networkIngressBasicAuthEnvVar
	var networkIngressEnableStickySession bool = false
	this.NetworkIngressEnableStickySession = &networkIngressEnableStickySession
	var networkIngressGrpcSendTimeoutSeconds int32 = 60
	this.NetworkIngressGrpcSendTimeoutSeconds = &networkIngressGrpcSendTimeoutSeconds
	var networkIngressGrpcReadTimeoutSeconds int32 = 60
	this.NetworkIngressGrpcReadTimeoutSeconds = &networkIngressGrpcReadTimeoutSeconds
	var networkIngressExtraHeaders string = "{}"
	this.NetworkIngressExtraHeaders = &networkIngressExtraHeaders
	var hpaCpuAverageUtilizationPercent int32 = 60
	this.HpaCpuAverageUtilizationPercent = &hpaCpuAverageUtilizationPercent
	var securityServiceAccountName string = ""
	this.SecurityServiceAccountName = &securityServiceAccountName
	return &this
}

// NewApplicationAdvancedSettingsWithDefaults instantiates a new ApplicationAdvancedSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationAdvancedSettingsWithDefaults() *ApplicationAdvancedSettings {
	this := ApplicationAdvancedSettings{}
	var deploymentCustomDomainCheckEnabled bool = true
	this.DeploymentCustomDomainCheckEnabled = &deploymentCustomDomainCheckEnabled
	var deploymentTerminationGracePeriodSeconds int32 = 60
	this.DeploymentTerminationGracePeriodSeconds = &deploymentTerminationGracePeriodSeconds
	var deploymentAntiaffinityPod string = "Preferred"
	this.DeploymentAntiaffinityPod = &deploymentAntiaffinityPod
	var deploymentUpdateStrategyType string = "RollingUpdate"
	this.DeploymentUpdateStrategyType = &deploymentUpdateStrategyType
	var deploymentUpdateStrategyRollingUpdateMaxUnavailablePercent int32 = 25
	this.DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent = &deploymentUpdateStrategyRollingUpdateMaxUnavailablePercent
	var deploymentUpdateStrategyRollingUpdateMaxSurgePercent int32 = 25
	this.DeploymentUpdateStrategyRollingUpdateMaxSurgePercent = &deploymentUpdateStrategyRollingUpdateMaxSurgePercent
	var buildTimeoutMaxSec int32 = 1800
	this.BuildTimeoutMaxSec = &buildTimeoutMaxSec
	var buildCpuMaxInMilli int32 = 4000
	this.BuildCpuMaxInMilli = &buildCpuMaxInMilli
	var buildRamMaxInGib int32 = 8
	this.BuildRamMaxInGib = &buildRamMaxInGib
	var networkIngressProxyBodySizeMb int32 = 100
	this.NetworkIngressProxyBodySizeMb = &networkIngressProxyBodySizeMb
	var networkIngressEnableCors bool = false
	this.NetworkIngressEnableCors = &networkIngressEnableCors
	var networkIngressCorsAllowOrigin string = "*"
	this.NetworkIngressCorsAllowOrigin = &networkIngressCorsAllowOrigin
	var networkIngressCorsAllowMethods string = "GET, PUT, POST, DELETE, PATCH, OPTIONS"
	this.NetworkIngressCorsAllowMethods = &networkIngressCorsAllowMethods
	var networkIngressCorsAllowHeaders string = "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
	this.NetworkIngressCorsAllowHeaders = &networkIngressCorsAllowHeaders
	var networkIngressProxyBufferSizeKb int32 = 4
	this.NetworkIngressProxyBufferSizeKb = &networkIngressProxyBufferSizeKb
	var networkIngressKeepaliveTimeSeconds int32 = 3600
	this.NetworkIngressKeepaliveTimeSeconds = &networkIngressKeepaliveTimeSeconds
	var networkIngressKeepaliveTimeoutSeconds int32 = 60
	this.NetworkIngressKeepaliveTimeoutSeconds = &networkIngressKeepaliveTimeoutSeconds
	var networkIngressSendTimeoutSeconds int32 = 60
	this.NetworkIngressSendTimeoutSeconds = &networkIngressSendTimeoutSeconds
	var networkIngressProxyConnectTimeoutSeconds int32 = 60
	this.NetworkIngressProxyConnectTimeoutSeconds = &networkIngressProxyConnectTimeoutSeconds
	var networkIngressProxySendTimeoutSeconds int32 = 60
	this.NetworkIngressProxySendTimeoutSeconds = &networkIngressProxySendTimeoutSeconds
	var networkIngressProxyReadTimeoutSeconds int32 = 60
	this.NetworkIngressProxyReadTimeoutSeconds = &networkIngressProxyReadTimeoutSeconds
	var networkIngressProxyBuffering string = "on"
	this.NetworkIngressProxyBuffering = &networkIngressProxyBuffering
	var networkIngressProxyRequestBuffering string = "on"
	this.NetworkIngressProxyRequestBuffering = &networkIngressProxyRequestBuffering
	var networkIngressWhitelistSourceRange string = "0.0.0.0/0"
	this.NetworkIngressWhitelistSourceRange = &networkIngressWhitelistSourceRange
	var networkIngressDenylistSourceRange string = ""
	this.NetworkIngressDenylistSourceRange = &networkIngressDenylistSourceRange
	var networkIngressBasicAuthEnvVar string = ""
	this.NetworkIngressBasicAuthEnvVar = &networkIngressBasicAuthEnvVar
	var networkIngressEnableStickySession bool = false
	this.NetworkIngressEnableStickySession = &networkIngressEnableStickySession
	var networkIngressGrpcSendTimeoutSeconds int32 = 60
	this.NetworkIngressGrpcSendTimeoutSeconds = &networkIngressGrpcSendTimeoutSeconds
	var networkIngressGrpcReadTimeoutSeconds int32 = 60
	this.NetworkIngressGrpcReadTimeoutSeconds = &networkIngressGrpcReadTimeoutSeconds
	var networkIngressExtraHeaders string = "{}"
	this.NetworkIngressExtraHeaders = &networkIngressExtraHeaders
	var hpaCpuAverageUtilizationPercent int32 = 60
	this.HpaCpuAverageUtilizationPercent = &hpaCpuAverageUtilizationPercent
	var securityServiceAccountName string = ""
	this.SecurityServiceAccountName = &securityServiceAccountName
	return &this
}

// GetDeploymentCustomDomainCheckEnabled returns the DeploymentCustomDomainCheckEnabled field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetDeploymentCustomDomainCheckEnabled() bool {
	if o == nil || o.DeploymentCustomDomainCheckEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DeploymentCustomDomainCheckEnabled
}

// GetDeploymentCustomDomainCheckEnabledOk returns a tuple with the DeploymentCustomDomainCheckEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetDeploymentCustomDomainCheckEnabledOk() (*bool, bool) {
	if o == nil || o.DeploymentCustomDomainCheckEnabled == nil {
		return nil, false
	}
	return o.DeploymentCustomDomainCheckEnabled, true
}

// HasDeploymentCustomDomainCheckEnabled returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasDeploymentCustomDomainCheckEnabled() bool {
	if o != nil && o.DeploymentCustomDomainCheckEnabled != nil {
		return true
	}

	return false
}

// SetDeploymentCustomDomainCheckEnabled gets a reference to the given bool and assigns it to the DeploymentCustomDomainCheckEnabled field.
func (o *ApplicationAdvancedSettings) SetDeploymentCustomDomainCheckEnabled(v bool) {
	o.DeploymentCustomDomainCheckEnabled = &v
}

// GetDeploymentTerminationGracePeriodSeconds returns the DeploymentTerminationGracePeriodSeconds field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetDeploymentTerminationGracePeriodSeconds() int32 {
	if o == nil || o.DeploymentTerminationGracePeriodSeconds == nil {
		var ret int32
		return ret
	}
	return *o.DeploymentTerminationGracePeriodSeconds
}

// GetDeploymentTerminationGracePeriodSecondsOk returns a tuple with the DeploymentTerminationGracePeriodSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetDeploymentTerminationGracePeriodSecondsOk() (*int32, bool) {
	if o == nil || o.DeploymentTerminationGracePeriodSeconds == nil {
		return nil, false
	}
	return o.DeploymentTerminationGracePeriodSeconds, true
}

// HasDeploymentTerminationGracePeriodSeconds returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasDeploymentTerminationGracePeriodSeconds() bool {
	if o != nil && o.DeploymentTerminationGracePeriodSeconds != nil {
		return true
	}

	return false
}

// SetDeploymentTerminationGracePeriodSeconds gets a reference to the given int32 and assigns it to the DeploymentTerminationGracePeriodSeconds field.
func (o *ApplicationAdvancedSettings) SetDeploymentTerminationGracePeriodSeconds(v int32) {
	o.DeploymentTerminationGracePeriodSeconds = &v
}

// GetDeploymentAffinityNodeRequired returns the DeploymentAffinityNodeRequired field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetDeploymentAffinityNodeRequired() map[string]string {
	if o == nil || o.DeploymentAffinityNodeRequired == nil {
		var ret map[string]string
		return ret
	}
	return *o.DeploymentAffinityNodeRequired
}

// GetDeploymentAffinityNodeRequiredOk returns a tuple with the DeploymentAffinityNodeRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetDeploymentAffinityNodeRequiredOk() (*map[string]string, bool) {
	if o == nil || o.DeploymentAffinityNodeRequired == nil {
		return nil, false
	}
	return o.DeploymentAffinityNodeRequired, true
}

// HasDeploymentAffinityNodeRequired returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasDeploymentAffinityNodeRequired() bool {
	if o != nil && o.DeploymentAffinityNodeRequired != nil {
		return true
	}

	return false
}

// SetDeploymentAffinityNodeRequired gets a reference to the given map[string]string and assigns it to the DeploymentAffinityNodeRequired field.
func (o *ApplicationAdvancedSettings) SetDeploymentAffinityNodeRequired(v map[string]string) {
	o.DeploymentAffinityNodeRequired = &v
}

// GetDeploymentAntiaffinityPod returns the DeploymentAntiaffinityPod field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetDeploymentAntiaffinityPod() string {
	if o == nil || o.DeploymentAntiaffinityPod == nil {
		var ret string
		return ret
	}
	return *o.DeploymentAntiaffinityPod
}

// GetDeploymentAntiaffinityPodOk returns a tuple with the DeploymentAntiaffinityPod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetDeploymentAntiaffinityPodOk() (*string, bool) {
	if o == nil || o.DeploymentAntiaffinityPod == nil {
		return nil, false
	}
	return o.DeploymentAntiaffinityPod, true
}

// HasDeploymentAntiaffinityPod returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasDeploymentAntiaffinityPod() bool {
	if o != nil && o.DeploymentAntiaffinityPod != nil {
		return true
	}

	return false
}

// SetDeploymentAntiaffinityPod gets a reference to the given string and assigns it to the DeploymentAntiaffinityPod field.
func (o *ApplicationAdvancedSettings) SetDeploymentAntiaffinityPod(v string) {
	o.DeploymentAntiaffinityPod = &v
}

// GetDeploymentUpdateStrategyType returns the DeploymentUpdateStrategyType field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetDeploymentUpdateStrategyType() string {
	if o == nil || o.DeploymentUpdateStrategyType == nil {
		var ret string
		return ret
	}
	return *o.DeploymentUpdateStrategyType
}

// GetDeploymentUpdateStrategyTypeOk returns a tuple with the DeploymentUpdateStrategyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetDeploymentUpdateStrategyTypeOk() (*string, bool) {
	if o == nil || o.DeploymentUpdateStrategyType == nil {
		return nil, false
	}
	return o.DeploymentUpdateStrategyType, true
}

// HasDeploymentUpdateStrategyType returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasDeploymentUpdateStrategyType() bool {
	if o != nil && o.DeploymentUpdateStrategyType != nil {
		return true
	}

	return false
}

// SetDeploymentUpdateStrategyType gets a reference to the given string and assigns it to the DeploymentUpdateStrategyType field.
func (o *ApplicationAdvancedSettings) SetDeploymentUpdateStrategyType(v string) {
	o.DeploymentUpdateStrategyType = &v
}

// GetDeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent returns the DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetDeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent() int32 {
	if o == nil || o.DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent == nil {
		var ret int32
		return ret
	}
	return *o.DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent
}

// GetDeploymentUpdateStrategyRollingUpdateMaxUnavailablePercentOk returns a tuple with the DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetDeploymentUpdateStrategyRollingUpdateMaxUnavailablePercentOk() (*int32, bool) {
	if o == nil || o.DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent == nil {
		return nil, false
	}
	return o.DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent, true
}

// HasDeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasDeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent() bool {
	if o != nil && o.DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent != nil {
		return true
	}

	return false
}

// SetDeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent gets a reference to the given int32 and assigns it to the DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent field.
func (o *ApplicationAdvancedSettings) SetDeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent(v int32) {
	o.DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent = &v
}

// GetDeploymentUpdateStrategyRollingUpdateMaxSurgePercent returns the DeploymentUpdateStrategyRollingUpdateMaxSurgePercent field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetDeploymentUpdateStrategyRollingUpdateMaxSurgePercent() int32 {
	if o == nil || o.DeploymentUpdateStrategyRollingUpdateMaxSurgePercent == nil {
		var ret int32
		return ret
	}
	return *o.DeploymentUpdateStrategyRollingUpdateMaxSurgePercent
}

// GetDeploymentUpdateStrategyRollingUpdateMaxSurgePercentOk returns a tuple with the DeploymentUpdateStrategyRollingUpdateMaxSurgePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetDeploymentUpdateStrategyRollingUpdateMaxSurgePercentOk() (*int32, bool) {
	if o == nil || o.DeploymentUpdateStrategyRollingUpdateMaxSurgePercent == nil {
		return nil, false
	}
	return o.DeploymentUpdateStrategyRollingUpdateMaxSurgePercent, true
}

// HasDeploymentUpdateStrategyRollingUpdateMaxSurgePercent returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasDeploymentUpdateStrategyRollingUpdateMaxSurgePercent() bool {
	if o != nil && o.DeploymentUpdateStrategyRollingUpdateMaxSurgePercent != nil {
		return true
	}

	return false
}

// SetDeploymentUpdateStrategyRollingUpdateMaxSurgePercent gets a reference to the given int32 and assigns it to the DeploymentUpdateStrategyRollingUpdateMaxSurgePercent field.
func (o *ApplicationAdvancedSettings) SetDeploymentUpdateStrategyRollingUpdateMaxSurgePercent(v int32) {
	o.DeploymentUpdateStrategyRollingUpdateMaxSurgePercent = &v
}

// GetBuildTimeoutMaxSec returns the BuildTimeoutMaxSec field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetBuildTimeoutMaxSec() int32 {
	if o == nil || o.BuildTimeoutMaxSec == nil {
		var ret int32
		return ret
	}
	return *o.BuildTimeoutMaxSec
}

// GetBuildTimeoutMaxSecOk returns a tuple with the BuildTimeoutMaxSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetBuildTimeoutMaxSecOk() (*int32, bool) {
	if o == nil || o.BuildTimeoutMaxSec == nil {
		return nil, false
	}
	return o.BuildTimeoutMaxSec, true
}

// HasBuildTimeoutMaxSec returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasBuildTimeoutMaxSec() bool {
	if o != nil && o.BuildTimeoutMaxSec != nil {
		return true
	}

	return false
}

// SetBuildTimeoutMaxSec gets a reference to the given int32 and assigns it to the BuildTimeoutMaxSec field.
func (o *ApplicationAdvancedSettings) SetBuildTimeoutMaxSec(v int32) {
	o.BuildTimeoutMaxSec = &v
}

// GetBuildCpuMaxInMilli returns the BuildCpuMaxInMilli field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetBuildCpuMaxInMilli() int32 {
	if o == nil || o.BuildCpuMaxInMilli == nil {
		var ret int32
		return ret
	}
	return *o.BuildCpuMaxInMilli
}

// GetBuildCpuMaxInMilliOk returns a tuple with the BuildCpuMaxInMilli field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetBuildCpuMaxInMilliOk() (*int32, bool) {
	if o == nil || o.BuildCpuMaxInMilli == nil {
		return nil, false
	}
	return o.BuildCpuMaxInMilli, true
}

// HasBuildCpuMaxInMilli returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasBuildCpuMaxInMilli() bool {
	if o != nil && o.BuildCpuMaxInMilli != nil {
		return true
	}

	return false
}

// SetBuildCpuMaxInMilli gets a reference to the given int32 and assigns it to the BuildCpuMaxInMilli field.
func (o *ApplicationAdvancedSettings) SetBuildCpuMaxInMilli(v int32) {
	o.BuildCpuMaxInMilli = &v
}

// GetBuildRamMaxInGib returns the BuildRamMaxInGib field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetBuildRamMaxInGib() int32 {
	if o == nil || o.BuildRamMaxInGib == nil {
		var ret int32
		return ret
	}
	return *o.BuildRamMaxInGib
}

// GetBuildRamMaxInGibOk returns a tuple with the BuildRamMaxInGib field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetBuildRamMaxInGibOk() (*int32, bool) {
	if o == nil || o.BuildRamMaxInGib == nil {
		return nil, false
	}
	return o.BuildRamMaxInGib, true
}

// HasBuildRamMaxInGib returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasBuildRamMaxInGib() bool {
	if o != nil && o.BuildRamMaxInGib != nil {
		return true
	}

	return false
}

// SetBuildRamMaxInGib gets a reference to the given int32 and assigns it to the BuildRamMaxInGib field.
func (o *ApplicationAdvancedSettings) SetBuildRamMaxInGib(v int32) {
	o.BuildRamMaxInGib = &v
}

// GetNetworkIngressProxyBodySizeMb returns the NetworkIngressProxyBodySizeMb field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyBodySizeMb() int32 {
	if o == nil || o.NetworkIngressProxyBodySizeMb == nil {
		var ret int32
		return ret
	}
	return *o.NetworkIngressProxyBodySizeMb
}

// GetNetworkIngressProxyBodySizeMbOk returns a tuple with the NetworkIngressProxyBodySizeMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyBodySizeMbOk() (*int32, bool) {
	if o == nil || o.NetworkIngressProxyBodySizeMb == nil {
		return nil, false
	}
	return o.NetworkIngressProxyBodySizeMb, true
}

// HasNetworkIngressProxyBodySizeMb returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressProxyBodySizeMb() bool {
	if o != nil && o.NetworkIngressProxyBodySizeMb != nil {
		return true
	}

	return false
}

// SetNetworkIngressProxyBodySizeMb gets a reference to the given int32 and assigns it to the NetworkIngressProxyBodySizeMb field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressProxyBodySizeMb(v int32) {
	o.NetworkIngressProxyBodySizeMb = &v
}

// GetNetworkIngressEnableCors returns the NetworkIngressEnableCors field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressEnableCors() bool {
	if o == nil || o.NetworkIngressEnableCors == nil {
		var ret bool
		return ret
	}
	return *o.NetworkIngressEnableCors
}

// GetNetworkIngressEnableCorsOk returns a tuple with the NetworkIngressEnableCors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressEnableCorsOk() (*bool, bool) {
	if o == nil || o.NetworkIngressEnableCors == nil {
		return nil, false
	}
	return o.NetworkIngressEnableCors, true
}

// HasNetworkIngressEnableCors returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressEnableCors() bool {
	if o != nil && o.NetworkIngressEnableCors != nil {
		return true
	}

	return false
}

// SetNetworkIngressEnableCors gets a reference to the given bool and assigns it to the NetworkIngressEnableCors field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressEnableCors(v bool) {
	o.NetworkIngressEnableCors = &v
}

// GetNetworkIngressCorsAllowOrigin returns the NetworkIngressCorsAllowOrigin field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressCorsAllowOrigin() string {
	if o == nil || o.NetworkIngressCorsAllowOrigin == nil {
		var ret string
		return ret
	}
	return *o.NetworkIngressCorsAllowOrigin
}

// GetNetworkIngressCorsAllowOriginOk returns a tuple with the NetworkIngressCorsAllowOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressCorsAllowOriginOk() (*string, bool) {
	if o == nil || o.NetworkIngressCorsAllowOrigin == nil {
		return nil, false
	}
	return o.NetworkIngressCorsAllowOrigin, true
}

// HasNetworkIngressCorsAllowOrigin returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressCorsAllowOrigin() bool {
	if o != nil && o.NetworkIngressCorsAllowOrigin != nil {
		return true
	}

	return false
}

// SetNetworkIngressCorsAllowOrigin gets a reference to the given string and assigns it to the NetworkIngressCorsAllowOrigin field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressCorsAllowOrigin(v string) {
	o.NetworkIngressCorsAllowOrigin = &v
}

// GetNetworkIngressCorsAllowMethods returns the NetworkIngressCorsAllowMethods field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressCorsAllowMethods() string {
	if o == nil || o.NetworkIngressCorsAllowMethods == nil {
		var ret string
		return ret
	}
	return *o.NetworkIngressCorsAllowMethods
}

// GetNetworkIngressCorsAllowMethodsOk returns a tuple with the NetworkIngressCorsAllowMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressCorsAllowMethodsOk() (*string, bool) {
	if o == nil || o.NetworkIngressCorsAllowMethods == nil {
		return nil, false
	}
	return o.NetworkIngressCorsAllowMethods, true
}

// HasNetworkIngressCorsAllowMethods returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressCorsAllowMethods() bool {
	if o != nil && o.NetworkIngressCorsAllowMethods != nil {
		return true
	}

	return false
}

// SetNetworkIngressCorsAllowMethods gets a reference to the given string and assigns it to the NetworkIngressCorsAllowMethods field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressCorsAllowMethods(v string) {
	o.NetworkIngressCorsAllowMethods = &v
}

// GetNetworkIngressCorsAllowHeaders returns the NetworkIngressCorsAllowHeaders field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressCorsAllowHeaders() string {
	if o == nil || o.NetworkIngressCorsAllowHeaders == nil {
		var ret string
		return ret
	}
	return *o.NetworkIngressCorsAllowHeaders
}

// GetNetworkIngressCorsAllowHeadersOk returns a tuple with the NetworkIngressCorsAllowHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressCorsAllowHeadersOk() (*string, bool) {
	if o == nil || o.NetworkIngressCorsAllowHeaders == nil {
		return nil, false
	}
	return o.NetworkIngressCorsAllowHeaders, true
}

// HasNetworkIngressCorsAllowHeaders returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressCorsAllowHeaders() bool {
	if o != nil && o.NetworkIngressCorsAllowHeaders != nil {
		return true
	}

	return false
}

// SetNetworkIngressCorsAllowHeaders gets a reference to the given string and assigns it to the NetworkIngressCorsAllowHeaders field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressCorsAllowHeaders(v string) {
	o.NetworkIngressCorsAllowHeaders = &v
}

// GetNetworkIngressProxyBufferSizeKb returns the NetworkIngressProxyBufferSizeKb field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyBufferSizeKb() int32 {
	if o == nil || o.NetworkIngressProxyBufferSizeKb == nil {
		var ret int32
		return ret
	}
	return *o.NetworkIngressProxyBufferSizeKb
}

// GetNetworkIngressProxyBufferSizeKbOk returns a tuple with the NetworkIngressProxyBufferSizeKb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyBufferSizeKbOk() (*int32, bool) {
	if o == nil || o.NetworkIngressProxyBufferSizeKb == nil {
		return nil, false
	}
	return o.NetworkIngressProxyBufferSizeKb, true
}

// HasNetworkIngressProxyBufferSizeKb returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressProxyBufferSizeKb() bool {
	if o != nil && o.NetworkIngressProxyBufferSizeKb != nil {
		return true
	}

	return false
}

// SetNetworkIngressProxyBufferSizeKb gets a reference to the given int32 and assigns it to the NetworkIngressProxyBufferSizeKb field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressProxyBufferSizeKb(v int32) {
	o.NetworkIngressProxyBufferSizeKb = &v
}

// GetNetworkIngressKeepaliveTimeSeconds returns the NetworkIngressKeepaliveTimeSeconds field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressKeepaliveTimeSeconds() int32 {
	if o == nil || o.NetworkIngressKeepaliveTimeSeconds == nil {
		var ret int32
		return ret
	}
	return *o.NetworkIngressKeepaliveTimeSeconds
}

// GetNetworkIngressKeepaliveTimeSecondsOk returns a tuple with the NetworkIngressKeepaliveTimeSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressKeepaliveTimeSecondsOk() (*int32, bool) {
	if o == nil || o.NetworkIngressKeepaliveTimeSeconds == nil {
		return nil, false
	}
	return o.NetworkIngressKeepaliveTimeSeconds, true
}

// HasNetworkIngressKeepaliveTimeSeconds returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressKeepaliveTimeSeconds() bool {
	if o != nil && o.NetworkIngressKeepaliveTimeSeconds != nil {
		return true
	}

	return false
}

// SetNetworkIngressKeepaliveTimeSeconds gets a reference to the given int32 and assigns it to the NetworkIngressKeepaliveTimeSeconds field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressKeepaliveTimeSeconds(v int32) {
	o.NetworkIngressKeepaliveTimeSeconds = &v
}

// GetNetworkIngressKeepaliveTimeoutSeconds returns the NetworkIngressKeepaliveTimeoutSeconds field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressKeepaliveTimeoutSeconds() int32 {
	if o == nil || o.NetworkIngressKeepaliveTimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.NetworkIngressKeepaliveTimeoutSeconds
}

// GetNetworkIngressKeepaliveTimeoutSecondsOk returns a tuple with the NetworkIngressKeepaliveTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressKeepaliveTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.NetworkIngressKeepaliveTimeoutSeconds == nil {
		return nil, false
	}
	return o.NetworkIngressKeepaliveTimeoutSeconds, true
}

// HasNetworkIngressKeepaliveTimeoutSeconds returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressKeepaliveTimeoutSeconds() bool {
	if o != nil && o.NetworkIngressKeepaliveTimeoutSeconds != nil {
		return true
	}

	return false
}

// SetNetworkIngressKeepaliveTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressKeepaliveTimeoutSeconds field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressKeepaliveTimeoutSeconds(v int32) {
	o.NetworkIngressKeepaliveTimeoutSeconds = &v
}

// GetNetworkIngressSendTimeoutSeconds returns the NetworkIngressSendTimeoutSeconds field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressSendTimeoutSeconds() int32 {
	if o == nil || o.NetworkIngressSendTimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.NetworkIngressSendTimeoutSeconds
}

// GetNetworkIngressSendTimeoutSecondsOk returns a tuple with the NetworkIngressSendTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressSendTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.NetworkIngressSendTimeoutSeconds == nil {
		return nil, false
	}
	return o.NetworkIngressSendTimeoutSeconds, true
}

// HasNetworkIngressSendTimeoutSeconds returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressSendTimeoutSeconds() bool {
	if o != nil && o.NetworkIngressSendTimeoutSeconds != nil {
		return true
	}

	return false
}

// SetNetworkIngressSendTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressSendTimeoutSeconds field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressSendTimeoutSeconds(v int32) {
	o.NetworkIngressSendTimeoutSeconds = &v
}

// GetNetworkIngressProxyConnectTimeoutSeconds returns the NetworkIngressProxyConnectTimeoutSeconds field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyConnectTimeoutSeconds() int32 {
	if o == nil || o.NetworkIngressProxyConnectTimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.NetworkIngressProxyConnectTimeoutSeconds
}

// GetNetworkIngressProxyConnectTimeoutSecondsOk returns a tuple with the NetworkIngressProxyConnectTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyConnectTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.NetworkIngressProxyConnectTimeoutSeconds == nil {
		return nil, false
	}
	return o.NetworkIngressProxyConnectTimeoutSeconds, true
}

// HasNetworkIngressProxyConnectTimeoutSeconds returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressProxyConnectTimeoutSeconds() bool {
	if o != nil && o.NetworkIngressProxyConnectTimeoutSeconds != nil {
		return true
	}

	return false
}

// SetNetworkIngressProxyConnectTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressProxyConnectTimeoutSeconds field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressProxyConnectTimeoutSeconds(v int32) {
	o.NetworkIngressProxyConnectTimeoutSeconds = &v
}

// GetNetworkIngressProxySendTimeoutSeconds returns the NetworkIngressProxySendTimeoutSeconds field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxySendTimeoutSeconds() int32 {
	if o == nil || o.NetworkIngressProxySendTimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.NetworkIngressProxySendTimeoutSeconds
}

// GetNetworkIngressProxySendTimeoutSecondsOk returns a tuple with the NetworkIngressProxySendTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxySendTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.NetworkIngressProxySendTimeoutSeconds == nil {
		return nil, false
	}
	return o.NetworkIngressProxySendTimeoutSeconds, true
}

// HasNetworkIngressProxySendTimeoutSeconds returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressProxySendTimeoutSeconds() bool {
	if o != nil && o.NetworkIngressProxySendTimeoutSeconds != nil {
		return true
	}

	return false
}

// SetNetworkIngressProxySendTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressProxySendTimeoutSeconds field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressProxySendTimeoutSeconds(v int32) {
	o.NetworkIngressProxySendTimeoutSeconds = &v
}

// GetNetworkIngressProxyReadTimeoutSeconds returns the NetworkIngressProxyReadTimeoutSeconds field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyReadTimeoutSeconds() int32 {
	if o == nil || o.NetworkIngressProxyReadTimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.NetworkIngressProxyReadTimeoutSeconds
}

// GetNetworkIngressProxyReadTimeoutSecondsOk returns a tuple with the NetworkIngressProxyReadTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyReadTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.NetworkIngressProxyReadTimeoutSeconds == nil {
		return nil, false
	}
	return o.NetworkIngressProxyReadTimeoutSeconds, true
}

// HasNetworkIngressProxyReadTimeoutSeconds returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressProxyReadTimeoutSeconds() bool {
	if o != nil && o.NetworkIngressProxyReadTimeoutSeconds != nil {
		return true
	}

	return false
}

// SetNetworkIngressProxyReadTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressProxyReadTimeoutSeconds field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressProxyReadTimeoutSeconds(v int32) {
	o.NetworkIngressProxyReadTimeoutSeconds = &v
}

// GetNetworkIngressProxyBuffering returns the NetworkIngressProxyBuffering field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyBuffering() string {
	if o == nil || o.NetworkIngressProxyBuffering == nil {
		var ret string
		return ret
	}
	return *o.NetworkIngressProxyBuffering
}

// GetNetworkIngressProxyBufferingOk returns a tuple with the NetworkIngressProxyBuffering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyBufferingOk() (*string, bool) {
	if o == nil || o.NetworkIngressProxyBuffering == nil {
		return nil, false
	}
	return o.NetworkIngressProxyBuffering, true
}

// HasNetworkIngressProxyBuffering returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressProxyBuffering() bool {
	if o != nil && o.NetworkIngressProxyBuffering != nil {
		return true
	}

	return false
}

// SetNetworkIngressProxyBuffering gets a reference to the given string and assigns it to the NetworkIngressProxyBuffering field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressProxyBuffering(v string) {
	o.NetworkIngressProxyBuffering = &v
}

// GetNetworkIngressProxyRequestBuffering returns the NetworkIngressProxyRequestBuffering field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyRequestBuffering() string {
	if o == nil || o.NetworkIngressProxyRequestBuffering == nil {
		var ret string
		return ret
	}
	return *o.NetworkIngressProxyRequestBuffering
}

// GetNetworkIngressProxyRequestBufferingOk returns a tuple with the NetworkIngressProxyRequestBuffering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressProxyRequestBufferingOk() (*string, bool) {
	if o == nil || o.NetworkIngressProxyRequestBuffering == nil {
		return nil, false
	}
	return o.NetworkIngressProxyRequestBuffering, true
}

// HasNetworkIngressProxyRequestBuffering returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressProxyRequestBuffering() bool {
	if o != nil && o.NetworkIngressProxyRequestBuffering != nil {
		return true
	}

	return false
}

// SetNetworkIngressProxyRequestBuffering gets a reference to the given string and assigns it to the NetworkIngressProxyRequestBuffering field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressProxyRequestBuffering(v string) {
	o.NetworkIngressProxyRequestBuffering = &v
}

// GetNetworkIngressWhitelistSourceRange returns the NetworkIngressWhitelistSourceRange field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressWhitelistSourceRange() string {
	if o == nil || o.NetworkIngressWhitelistSourceRange == nil {
		var ret string
		return ret
	}
	return *o.NetworkIngressWhitelistSourceRange
}

// GetNetworkIngressWhitelistSourceRangeOk returns a tuple with the NetworkIngressWhitelistSourceRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressWhitelistSourceRangeOk() (*string, bool) {
	if o == nil || o.NetworkIngressWhitelistSourceRange == nil {
		return nil, false
	}
	return o.NetworkIngressWhitelistSourceRange, true
}

// HasNetworkIngressWhitelistSourceRange returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressWhitelistSourceRange() bool {
	if o != nil && o.NetworkIngressWhitelistSourceRange != nil {
		return true
	}

	return false
}

// SetNetworkIngressWhitelistSourceRange gets a reference to the given string and assigns it to the NetworkIngressWhitelistSourceRange field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressWhitelistSourceRange(v string) {
	o.NetworkIngressWhitelistSourceRange = &v
}

// GetNetworkIngressDenylistSourceRange returns the NetworkIngressDenylistSourceRange field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressDenylistSourceRange() string {
	if o == nil || o.NetworkIngressDenylistSourceRange == nil {
		var ret string
		return ret
	}
	return *o.NetworkIngressDenylistSourceRange
}

// GetNetworkIngressDenylistSourceRangeOk returns a tuple with the NetworkIngressDenylistSourceRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressDenylistSourceRangeOk() (*string, bool) {
	if o == nil || o.NetworkIngressDenylistSourceRange == nil {
		return nil, false
	}
	return o.NetworkIngressDenylistSourceRange, true
}

// HasNetworkIngressDenylistSourceRange returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressDenylistSourceRange() bool {
	if o != nil && o.NetworkIngressDenylistSourceRange != nil {
		return true
	}

	return false
}

// SetNetworkIngressDenylistSourceRange gets a reference to the given string and assigns it to the NetworkIngressDenylistSourceRange field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressDenylistSourceRange(v string) {
	o.NetworkIngressDenylistSourceRange = &v
}

// GetNetworkIngressBasicAuthEnvVar returns the NetworkIngressBasicAuthEnvVar field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressBasicAuthEnvVar() string {
	if o == nil || o.NetworkIngressBasicAuthEnvVar == nil {
		var ret string
		return ret
	}
	return *o.NetworkIngressBasicAuthEnvVar
}

// GetNetworkIngressBasicAuthEnvVarOk returns a tuple with the NetworkIngressBasicAuthEnvVar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressBasicAuthEnvVarOk() (*string, bool) {
	if o == nil || o.NetworkIngressBasicAuthEnvVar == nil {
		return nil, false
	}
	return o.NetworkIngressBasicAuthEnvVar, true
}

// HasNetworkIngressBasicAuthEnvVar returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressBasicAuthEnvVar() bool {
	if o != nil && o.NetworkIngressBasicAuthEnvVar != nil {
		return true
	}

	return false
}

// SetNetworkIngressBasicAuthEnvVar gets a reference to the given string and assigns it to the NetworkIngressBasicAuthEnvVar field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressBasicAuthEnvVar(v string) {
	o.NetworkIngressBasicAuthEnvVar = &v
}

// GetNetworkIngressEnableStickySession returns the NetworkIngressEnableStickySession field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressEnableStickySession() bool {
	if o == nil || o.NetworkIngressEnableStickySession == nil {
		var ret bool
		return ret
	}
	return *o.NetworkIngressEnableStickySession
}

// GetNetworkIngressEnableStickySessionOk returns a tuple with the NetworkIngressEnableStickySession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressEnableStickySessionOk() (*bool, bool) {
	if o == nil || o.NetworkIngressEnableStickySession == nil {
		return nil, false
	}
	return o.NetworkIngressEnableStickySession, true
}

// HasNetworkIngressEnableStickySession returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressEnableStickySession() bool {
	if o != nil && o.NetworkIngressEnableStickySession != nil {
		return true
	}

	return false
}

// SetNetworkIngressEnableStickySession gets a reference to the given bool and assigns it to the NetworkIngressEnableStickySession field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressEnableStickySession(v bool) {
	o.NetworkIngressEnableStickySession = &v
}

// GetNetworkIngressGrpcSendTimeoutSeconds returns the NetworkIngressGrpcSendTimeoutSeconds field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressGrpcSendTimeoutSeconds() int32 {
	if o == nil || o.NetworkIngressGrpcSendTimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.NetworkIngressGrpcSendTimeoutSeconds
}

// GetNetworkIngressGrpcSendTimeoutSecondsOk returns a tuple with the NetworkIngressGrpcSendTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressGrpcSendTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.NetworkIngressGrpcSendTimeoutSeconds == nil {
		return nil, false
	}
	return o.NetworkIngressGrpcSendTimeoutSeconds, true
}

// HasNetworkIngressGrpcSendTimeoutSeconds returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressGrpcSendTimeoutSeconds() bool {
	if o != nil && o.NetworkIngressGrpcSendTimeoutSeconds != nil {
		return true
	}

	return false
}

// SetNetworkIngressGrpcSendTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressGrpcSendTimeoutSeconds field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressGrpcSendTimeoutSeconds(v int32) {
	o.NetworkIngressGrpcSendTimeoutSeconds = &v
}

// GetNetworkIngressGrpcReadTimeoutSeconds returns the NetworkIngressGrpcReadTimeoutSeconds field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressGrpcReadTimeoutSeconds() int32 {
	if o == nil || o.NetworkIngressGrpcReadTimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.NetworkIngressGrpcReadTimeoutSeconds
}

// GetNetworkIngressGrpcReadTimeoutSecondsOk returns a tuple with the NetworkIngressGrpcReadTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressGrpcReadTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.NetworkIngressGrpcReadTimeoutSeconds == nil {
		return nil, false
	}
	return o.NetworkIngressGrpcReadTimeoutSeconds, true
}

// HasNetworkIngressGrpcReadTimeoutSeconds returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressGrpcReadTimeoutSeconds() bool {
	if o != nil && o.NetworkIngressGrpcReadTimeoutSeconds != nil {
		return true
	}

	return false
}

// SetNetworkIngressGrpcReadTimeoutSeconds gets a reference to the given int32 and assigns it to the NetworkIngressGrpcReadTimeoutSeconds field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressGrpcReadTimeoutSeconds(v int32) {
	o.NetworkIngressGrpcReadTimeoutSeconds = &v
}

// GetNetworkIngressExtraHeaders returns the NetworkIngressExtraHeaders field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetNetworkIngressExtraHeaders() string {
	if o == nil || o.NetworkIngressExtraHeaders == nil {
		var ret string
		return ret
	}
	return *o.NetworkIngressExtraHeaders
}

// GetNetworkIngressExtraHeadersOk returns a tuple with the NetworkIngressExtraHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetNetworkIngressExtraHeadersOk() (*string, bool) {
	if o == nil || o.NetworkIngressExtraHeaders == nil {
		return nil, false
	}
	return o.NetworkIngressExtraHeaders, true
}

// HasNetworkIngressExtraHeaders returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasNetworkIngressExtraHeaders() bool {
	if o != nil && o.NetworkIngressExtraHeaders != nil {
		return true
	}

	return false
}

// SetNetworkIngressExtraHeaders gets a reference to the given string and assigns it to the NetworkIngressExtraHeaders field.
func (o *ApplicationAdvancedSettings) SetNetworkIngressExtraHeaders(v string) {
	o.NetworkIngressExtraHeaders = &v
}

// GetHpaCpuAverageUtilizationPercent returns the HpaCpuAverageUtilizationPercent field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetHpaCpuAverageUtilizationPercent() int32 {
	if o == nil || o.HpaCpuAverageUtilizationPercent == nil {
		var ret int32
		return ret
	}
	return *o.HpaCpuAverageUtilizationPercent
}

// GetHpaCpuAverageUtilizationPercentOk returns a tuple with the HpaCpuAverageUtilizationPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetHpaCpuAverageUtilizationPercentOk() (*int32, bool) {
	if o == nil || o.HpaCpuAverageUtilizationPercent == nil {
		return nil, false
	}
	return o.HpaCpuAverageUtilizationPercent, true
}

// HasHpaCpuAverageUtilizationPercent returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasHpaCpuAverageUtilizationPercent() bool {
	if o != nil && o.HpaCpuAverageUtilizationPercent != nil {
		return true
	}

	return false
}

// SetHpaCpuAverageUtilizationPercent gets a reference to the given int32 and assigns it to the HpaCpuAverageUtilizationPercent field.
func (o *ApplicationAdvancedSettings) SetHpaCpuAverageUtilizationPercent(v int32) {
	o.HpaCpuAverageUtilizationPercent = &v
}

// GetSecurityServiceAccountName returns the SecurityServiceAccountName field value if set, zero value otherwise.
func (o *ApplicationAdvancedSettings) GetSecurityServiceAccountName() string {
	if o == nil || o.SecurityServiceAccountName == nil {
		var ret string
		return ret
	}
	return *o.SecurityServiceAccountName
}

// GetSecurityServiceAccountNameOk returns a tuple with the SecurityServiceAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAdvancedSettings) GetSecurityServiceAccountNameOk() (*string, bool) {
	if o == nil || o.SecurityServiceAccountName == nil {
		return nil, false
	}
	return o.SecurityServiceAccountName, true
}

// HasSecurityServiceAccountName returns a boolean if a field has been set.
func (o *ApplicationAdvancedSettings) HasSecurityServiceAccountName() bool {
	if o != nil && o.SecurityServiceAccountName != nil {
		return true
	}

	return false
}

// SetSecurityServiceAccountName gets a reference to the given string and assigns it to the SecurityServiceAccountName field.
func (o *ApplicationAdvancedSettings) SetSecurityServiceAccountName(v string) {
	o.SecurityServiceAccountName = &v
}

func (o ApplicationAdvancedSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentCustomDomainCheckEnabled != nil {
		toSerialize["deployment.custom_domain_check_enabled"] = o.DeploymentCustomDomainCheckEnabled
	}
	if o.DeploymentTerminationGracePeriodSeconds != nil {
		toSerialize["deployment.termination_grace_period_seconds"] = o.DeploymentTerminationGracePeriodSeconds
	}
	if o.DeploymentAffinityNodeRequired != nil {
		toSerialize["deployment.affinity.node.required"] = o.DeploymentAffinityNodeRequired
	}
	if o.DeploymentAntiaffinityPod != nil {
		toSerialize["deployment.antiaffinity.pod"] = o.DeploymentAntiaffinityPod
	}
	if o.DeploymentUpdateStrategyType != nil {
		toSerialize["deployment.update_strategy.type"] = o.DeploymentUpdateStrategyType
	}
	if o.DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent != nil {
		toSerialize["deployment.update_strategy.rolling_update.max_unavailable_percent"] = o.DeploymentUpdateStrategyRollingUpdateMaxUnavailablePercent
	}
	if o.DeploymentUpdateStrategyRollingUpdateMaxSurgePercent != nil {
		toSerialize["deployment.update_strategy.rolling_update.max_surge_percent"] = o.DeploymentUpdateStrategyRollingUpdateMaxSurgePercent
	}
	if o.BuildTimeoutMaxSec != nil {
		toSerialize["build.timeout_max_sec"] = o.BuildTimeoutMaxSec
	}
	if o.BuildCpuMaxInMilli != nil {
		toSerialize["build.cpu_max_in_milli"] = o.BuildCpuMaxInMilli
	}
	if o.BuildRamMaxInGib != nil {
		toSerialize["build.ram_max_in_gib"] = o.BuildRamMaxInGib
	}
	if o.NetworkIngressProxyBodySizeMb != nil {
		toSerialize["network.ingress.proxy_body_size_mb"] = o.NetworkIngressProxyBodySizeMb
	}
	if o.NetworkIngressEnableCors != nil {
		toSerialize["network.ingress.enable_cors"] = o.NetworkIngressEnableCors
	}
	if o.NetworkIngressCorsAllowOrigin != nil {
		toSerialize["network.ingress.cors_allow_origin"] = o.NetworkIngressCorsAllowOrigin
	}
	if o.NetworkIngressCorsAllowMethods != nil {
		toSerialize["network.ingress.cors_allow_methods"] = o.NetworkIngressCorsAllowMethods
	}
	if o.NetworkIngressCorsAllowHeaders != nil {
		toSerialize["network.ingress.cors_allow_headers"] = o.NetworkIngressCorsAllowHeaders
	}
	if o.NetworkIngressProxyBufferSizeKb != nil {
		toSerialize["network.ingress.proxy_buffer_size_kb"] = o.NetworkIngressProxyBufferSizeKb
	}
	if o.NetworkIngressKeepaliveTimeSeconds != nil {
		toSerialize["network.ingress.keepalive_time_seconds"] = o.NetworkIngressKeepaliveTimeSeconds
	}
	if o.NetworkIngressKeepaliveTimeoutSeconds != nil {
		toSerialize["network.ingress.keepalive_timeout_seconds"] = o.NetworkIngressKeepaliveTimeoutSeconds
	}
	if o.NetworkIngressSendTimeoutSeconds != nil {
		toSerialize["network.ingress.send_timeout_seconds"] = o.NetworkIngressSendTimeoutSeconds
	}
	if o.NetworkIngressProxyConnectTimeoutSeconds != nil {
		toSerialize["network.ingress.proxy_connect_timeout_seconds"] = o.NetworkIngressProxyConnectTimeoutSeconds
	}
	if o.NetworkIngressProxySendTimeoutSeconds != nil {
		toSerialize["network.ingress.proxy_send_timeout_seconds"] = o.NetworkIngressProxySendTimeoutSeconds
	}
	if o.NetworkIngressProxyReadTimeoutSeconds != nil {
		toSerialize["network.ingress.proxy_read_timeout_seconds"] = o.NetworkIngressProxyReadTimeoutSeconds
	}
	if o.NetworkIngressProxyBuffering != nil {
		toSerialize["network.ingress.proxy_buffering"] = o.NetworkIngressProxyBuffering
	}
	if o.NetworkIngressProxyRequestBuffering != nil {
		toSerialize["network.ingress.proxy_request_buffering"] = o.NetworkIngressProxyRequestBuffering
	}
	if o.NetworkIngressWhitelistSourceRange != nil {
		toSerialize["network.ingress.whitelist_source_range"] = o.NetworkIngressWhitelistSourceRange
	}
	if o.NetworkIngressDenylistSourceRange != nil {
		toSerialize["network.ingress.denylist_source_range"] = o.NetworkIngressDenylistSourceRange
	}
	if o.NetworkIngressBasicAuthEnvVar != nil {
		toSerialize["network.ingress.basic_auth_env_var"] = o.NetworkIngressBasicAuthEnvVar
	}
	if o.NetworkIngressEnableStickySession != nil {
		toSerialize["network.ingress.enable_sticky_session"] = o.NetworkIngressEnableStickySession
	}
	if o.NetworkIngressGrpcSendTimeoutSeconds != nil {
		toSerialize["network.ingress.grpc_send_timeout_seconds"] = o.NetworkIngressGrpcSendTimeoutSeconds
	}
	if o.NetworkIngressGrpcReadTimeoutSeconds != nil {
		toSerialize["network.ingress.grpc_read_timeout_seconds"] = o.NetworkIngressGrpcReadTimeoutSeconds
	}
	if o.NetworkIngressExtraHeaders != nil {
		toSerialize["network.ingress.extra_headers"] = o.NetworkIngressExtraHeaders
	}
	if o.HpaCpuAverageUtilizationPercent != nil {
		toSerialize["hpa.cpu.average_utilization_percent"] = o.HpaCpuAverageUtilizationPercent
	}
	if o.SecurityServiceAccountName != nil {
		toSerialize["security.service_account_name"] = o.SecurityServiceAccountName
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationAdvancedSettings struct {
	value *ApplicationAdvancedSettings
	isSet bool
}

func (v NullableApplicationAdvancedSettings) Get() *ApplicationAdvancedSettings {
	return v.value
}

func (v *NullableApplicationAdvancedSettings) Set(val *ApplicationAdvancedSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationAdvancedSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationAdvancedSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationAdvancedSettings(val *ApplicationAdvancedSettings) *NullableApplicationAdvancedSettings {
	return &NullableApplicationAdvancedSettings{value: val, isSet: true}
}

func (v NullableApplicationAdvancedSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationAdvancedSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
