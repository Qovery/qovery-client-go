/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the OrganizationLabelsGroupEnrichedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationLabelsGroupEnrichedResponse{}

// OrganizationLabelsGroupEnrichedResponse struct for OrganizationLabelsGroupEnrichedResponse
type OrganizationLabelsGroupEnrichedResponse struct {
	Id                   string     `json:"id"`
	CreatedAt            time.Time  `json:"created_at"`
	UpdatedAt            *time.Time `json:"updated_at,omitempty"`
	Name                 string     `json:"name"`
	Labels               []Label    `json:"labels"`
	AssociatedItemsCount *int32     `json:"associated_items_count,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationLabelsGroupEnrichedResponse OrganizationLabelsGroupEnrichedResponse

// NewOrganizationLabelsGroupEnrichedResponse instantiates a new OrganizationLabelsGroupEnrichedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationLabelsGroupEnrichedResponse(id string, createdAt time.Time, name string, labels []Label) *OrganizationLabelsGroupEnrichedResponse {
	this := OrganizationLabelsGroupEnrichedResponse{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Name = name
	this.Labels = labels
	return &this
}

// NewOrganizationLabelsGroupEnrichedResponseWithDefaults instantiates a new OrganizationLabelsGroupEnrichedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationLabelsGroupEnrichedResponseWithDefaults() *OrganizationLabelsGroupEnrichedResponse {
	this := OrganizationLabelsGroupEnrichedResponse{}
	return &this
}

// GetId returns the Id field value
func (o *OrganizationLabelsGroupEnrichedResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationLabelsGroupEnrichedResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationLabelsGroupEnrichedResponse) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *OrganizationLabelsGroupEnrichedResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationLabelsGroupEnrichedResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OrganizationLabelsGroupEnrichedResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OrganizationLabelsGroupEnrichedResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationLabelsGroupEnrichedResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OrganizationLabelsGroupEnrichedResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *OrganizationLabelsGroupEnrichedResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetName returns the Name field value
func (o *OrganizationLabelsGroupEnrichedResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationLabelsGroupEnrichedResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationLabelsGroupEnrichedResponse) SetName(v string) {
	o.Name = v
}

// GetLabels returns the Labels field value
func (o *OrganizationLabelsGroupEnrichedResponse) GetLabels() []Label {
	if o == nil {
		var ret []Label
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *OrganizationLabelsGroupEnrichedResponse) GetLabelsOk() ([]Label, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *OrganizationLabelsGroupEnrichedResponse) SetLabels(v []Label) {
	o.Labels = v
}

// GetAssociatedItemsCount returns the AssociatedItemsCount field value if set, zero value otherwise.
func (o *OrganizationLabelsGroupEnrichedResponse) GetAssociatedItemsCount() int32 {
	if o == nil || IsNil(o.AssociatedItemsCount) {
		var ret int32
		return ret
	}
	return *o.AssociatedItemsCount
}

// GetAssociatedItemsCountOk returns a tuple with the AssociatedItemsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationLabelsGroupEnrichedResponse) GetAssociatedItemsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AssociatedItemsCount) {
		return nil, false
	}
	return o.AssociatedItemsCount, true
}

// HasAssociatedItemsCount returns a boolean if a field has been set.
func (o *OrganizationLabelsGroupEnrichedResponse) HasAssociatedItemsCount() bool {
	if o != nil && !IsNil(o.AssociatedItemsCount) {
		return true
	}

	return false
}

// SetAssociatedItemsCount gets a reference to the given int32 and assigns it to the AssociatedItemsCount field.
func (o *OrganizationLabelsGroupEnrichedResponse) SetAssociatedItemsCount(v int32) {
	o.AssociatedItemsCount = &v
}

func (o OrganizationLabelsGroupEnrichedResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationLabelsGroupEnrichedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["name"] = o.Name
	toSerialize["labels"] = o.Labels
	if !IsNil(o.AssociatedItemsCount) {
		toSerialize["associated_items_count"] = o.AssociatedItemsCount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationLabelsGroupEnrichedResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"name",
		"labels",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationLabelsGroupEnrichedResponse := _OrganizationLabelsGroupEnrichedResponse{}

	err = json.Unmarshal(data, &varOrganizationLabelsGroupEnrichedResponse)

	if err != nil {
		return err
	}

	*o = OrganizationLabelsGroupEnrichedResponse(varOrganizationLabelsGroupEnrichedResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "name")
		delete(additionalProperties, "labels")
		delete(additionalProperties, "associated_items_count")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationLabelsGroupEnrichedResponse struct {
	value *OrganizationLabelsGroupEnrichedResponse
	isSet bool
}

func (v NullableOrganizationLabelsGroupEnrichedResponse) Get() *OrganizationLabelsGroupEnrichedResponse {
	return v.value
}

func (v *NullableOrganizationLabelsGroupEnrichedResponse) Set(val *OrganizationLabelsGroupEnrichedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationLabelsGroupEnrichedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationLabelsGroupEnrichedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationLabelsGroupEnrichedResponse(val *OrganizationLabelsGroupEnrichedResponse) *NullableOrganizationLabelsGroupEnrichedResponse {
	return &NullableOrganizationLabelsGroupEnrichedResponse{value: val, isSet: true}
}

func (v NullableOrganizationLabelsGroupEnrichedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationLabelsGroupEnrichedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
