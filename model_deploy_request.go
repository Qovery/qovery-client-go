/*
[BETA] Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet. 

API version: 1.0.0
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// DeployRequest struct for DeployRequest
type DeployRequest struct {
	// Commit ID to deploy
	GitCommitId string `json:"git_commit_id"`
}

// NewDeployRequest instantiates a new DeployRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployRequest(gitCommitId string) *DeployRequest {
	this := DeployRequest{}
	this.GitCommitId = gitCommitId
	return &this
}

// NewDeployRequestWithDefaults instantiates a new DeployRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployRequestWithDefaults() *DeployRequest {
	this := DeployRequest{}
	return &this
}

// GetGitCommitId returns the GitCommitId field value
func (o *DeployRequest) GetGitCommitId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GitCommitId
}

// GetGitCommitIdOk returns a tuple with the GitCommitId field value
// and a boolean to check if the value has been set.
func (o *DeployRequest) GetGitCommitIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GitCommitId, true
}

// SetGitCommitId sets field value
func (o *DeployRequest) SetGitCommitId(v string) {
	o.GitCommitId = v
}

func (o DeployRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["git_commit_id"] = o.GitCommitId
	}
	return json.Marshal(toSerialize)
}

type NullableDeployRequest struct {
	value *DeployRequest
	isSet bool
}

func (v NullableDeployRequest) Get() *DeployRequest {
	return v.value
}

func (v *NullableDeployRequest) Set(val *DeployRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployRequest(val *DeployRequest) *NullableDeployRequest {
	return &NullableDeployRequest{value: val, isSet: true}
}

func (v NullableDeployRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


