/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the TerraformRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TerraformRequest{}

// TerraformRequest struct for TerraformRequest
type TerraformRequest struct {
	Name                     string                       `json:"name"`
	Description              string                       `json:"description"`
	AutoApprove              bool                         `json:"auto_approve"`
	AutoDeploy               bool                         `json:"auto_deploy"`
	TerraformFilesSource     string                       `json:"terraform_files_source"`
	TerraformVariablesSource string                       `json:"terraform_variables_source"`
	Provider                 string                       `json:"provider"`
	ProviderVersion          string                       `json:"provider_version"`
	TimeoutSec               *string                      `json:"timeout_sec,omitempty"`
	IconUri                  *string                      `json:"icon_uri,omitempty"`
	JobResources             TerraformRequestJobResources `json:"job_resources"`
	AdditionalProperties     map[string]interface{}
}

type _TerraformRequest TerraformRequest

// NewTerraformRequest instantiates a new TerraformRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerraformRequest(name string, description string, autoApprove bool, autoDeploy bool, terraformFilesSource string, terraformVariablesSource string, provider string, providerVersion string, jobResources TerraformRequestJobResources) *TerraformRequest {
	this := TerraformRequest{}
	this.Name = name
	this.Description = description
	this.AutoApprove = autoApprove
	this.AutoDeploy = autoDeploy
	this.TerraformFilesSource = terraformFilesSource
	this.TerraformVariablesSource = terraformVariablesSource
	this.Provider = provider
	this.ProviderVersion = providerVersion
	this.JobResources = jobResources
	return &this
}

// NewTerraformRequestWithDefaults instantiates a new TerraformRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformRequestWithDefaults() *TerraformRequest {
	this := TerraformRequest{}
	return &this
}

// GetName returns the Name field value
func (o *TerraformRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TerraformRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *TerraformRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *TerraformRequest) SetDescription(v string) {
	o.Description = v
}

// GetAutoApprove returns the AutoApprove field value
func (o *TerraformRequest) GetAutoApprove() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoApprove
}

// GetAutoApproveOk returns a tuple with the AutoApprove field value
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetAutoApproveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoApprove, true
}

// SetAutoApprove sets field value
func (o *TerraformRequest) SetAutoApprove(v bool) {
	o.AutoApprove = v
}

// GetAutoDeploy returns the AutoDeploy field value
func (o *TerraformRequest) GetAutoDeploy() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoDeploy
}

// GetAutoDeployOk returns a tuple with the AutoDeploy field value
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetAutoDeployOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoDeploy, true
}

// SetAutoDeploy sets field value
func (o *TerraformRequest) SetAutoDeploy(v bool) {
	o.AutoDeploy = v
}

// GetTerraformFilesSource returns the TerraformFilesSource field value
func (o *TerraformRequest) GetTerraformFilesSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TerraformFilesSource
}

// GetTerraformFilesSourceOk returns a tuple with the TerraformFilesSource field value
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetTerraformFilesSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerraformFilesSource, true
}

// SetTerraformFilesSource sets field value
func (o *TerraformRequest) SetTerraformFilesSource(v string) {
	o.TerraformFilesSource = v
}

// GetTerraformVariablesSource returns the TerraformVariablesSource field value
func (o *TerraformRequest) GetTerraformVariablesSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TerraformVariablesSource
}

// GetTerraformVariablesSourceOk returns a tuple with the TerraformVariablesSource field value
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetTerraformVariablesSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerraformVariablesSource, true
}

// SetTerraformVariablesSource sets field value
func (o *TerraformRequest) SetTerraformVariablesSource(v string) {
	o.TerraformVariablesSource = v
}

// GetProvider returns the Provider field value
func (o *TerraformRequest) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *TerraformRequest) SetProvider(v string) {
	o.Provider = v
}

// GetProviderVersion returns the ProviderVersion field value
func (o *TerraformRequest) GetProviderVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderVersion
}

// GetProviderVersionOk returns a tuple with the ProviderVersion field value
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetProviderVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderVersion, true
}

// SetProviderVersion sets field value
func (o *TerraformRequest) SetProviderVersion(v string) {
	o.ProviderVersion = v
}

// GetTimeoutSec returns the TimeoutSec field value if set, zero value otherwise.
func (o *TerraformRequest) GetTimeoutSec() string {
	if o == nil || IsNil(o.TimeoutSec) {
		var ret string
		return ret
	}
	return *o.TimeoutSec
}

// GetTimeoutSecOk returns a tuple with the TimeoutSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetTimeoutSecOk() (*string, bool) {
	if o == nil || IsNil(o.TimeoutSec) {
		return nil, false
	}
	return o.TimeoutSec, true
}

// HasTimeoutSec returns a boolean if a field has been set.
func (o *TerraformRequest) HasTimeoutSec() bool {
	if o != nil && !IsNil(o.TimeoutSec) {
		return true
	}

	return false
}

// SetTimeoutSec gets a reference to the given string and assigns it to the TimeoutSec field.
func (o *TerraformRequest) SetTimeoutSec(v string) {
	o.TimeoutSec = &v
}

// GetIconUri returns the IconUri field value if set, zero value otherwise.
func (o *TerraformRequest) GetIconUri() string {
	if o == nil || IsNil(o.IconUri) {
		var ret string
		return ret
	}
	return *o.IconUri
}

// GetIconUriOk returns a tuple with the IconUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetIconUriOk() (*string, bool) {
	if o == nil || IsNil(o.IconUri) {
		return nil, false
	}
	return o.IconUri, true
}

// HasIconUri returns a boolean if a field has been set.
func (o *TerraformRequest) HasIconUri() bool {
	if o != nil && !IsNil(o.IconUri) {
		return true
	}

	return false
}

// SetIconUri gets a reference to the given string and assigns it to the IconUri field.
func (o *TerraformRequest) SetIconUri(v string) {
	o.IconUri = &v
}

// GetJobResources returns the JobResources field value
func (o *TerraformRequest) GetJobResources() TerraformRequestJobResources {
	if o == nil {
		var ret TerraformRequestJobResources
		return ret
	}

	return o.JobResources
}

// GetJobResourcesOk returns a tuple with the JobResources field value
// and a boolean to check if the value has been set.
func (o *TerraformRequest) GetJobResourcesOk() (*TerraformRequestJobResources, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobResources, true
}

// SetJobResources sets field value
func (o *TerraformRequest) SetJobResources(v TerraformRequestJobResources) {
	o.JobResources = v
}

func (o TerraformRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TerraformRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["auto_approve"] = o.AutoApprove
	toSerialize["auto_deploy"] = o.AutoDeploy
	toSerialize["terraform_files_source"] = o.TerraformFilesSource
	toSerialize["terraform_variables_source"] = o.TerraformVariablesSource
	toSerialize["provider"] = o.Provider
	toSerialize["provider_version"] = o.ProviderVersion
	if !IsNil(o.TimeoutSec) {
		toSerialize["timeout_sec"] = o.TimeoutSec
	}
	if !IsNil(o.IconUri) {
		toSerialize["icon_uri"] = o.IconUri
	}
	toSerialize["job_resources"] = o.JobResources

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TerraformRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"description",
		"auto_approve",
		"auto_deploy",
		"terraform_files_source",
		"terraform_variables_source",
		"provider",
		"provider_version",
		"job_resources",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTerraformRequest := _TerraformRequest{}

	err = json.Unmarshal(data, &varTerraformRequest)

	if err != nil {
		return err
	}

	*o = TerraformRequest(varTerraformRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "auto_approve")
		delete(additionalProperties, "auto_deploy")
		delete(additionalProperties, "terraform_files_source")
		delete(additionalProperties, "terraform_variables_source")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "provider_version")
		delete(additionalProperties, "timeout_sec")
		delete(additionalProperties, "icon_uri")
		delete(additionalProperties, "job_resources")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTerraformRequest struct {
	value *TerraformRequest
	isSet bool
}

func (v NullableTerraformRequest) Get() *TerraformRequest {
	return v.value
}

func (v *NullableTerraformRequest) Set(val *TerraformRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTerraformRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTerraformRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerraformRequest(val *TerraformRequest) *NullableTerraformRequest {
	return &NullableTerraformRequest{value: val, isSet: true}
}

func (v NullableTerraformRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerraformRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
