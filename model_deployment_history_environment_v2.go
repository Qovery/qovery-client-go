/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the DeploymentHistoryEnvironmentV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentHistoryEnvironmentV2{}

// DeploymentHistoryEnvironmentV2 struct for DeploymentHistoryEnvironmentV2
type DeploymentHistoryEnvironmentV2 struct {
	Identifier           DeploymentHistoryEnvironmentV2Identifier `json:"identifier"`
	AuditingData         DeploymentHistoryAuditingData            `json:"auditing_data"`
	Status               StateEnum                                `json:"status"`
	TriggerAction        DeploymentHistoryTriggerAction           `json:"trigger_action"`
	TotalDuration        string                                   `json:"total_duration"`
	Stages               []DeploymentHistoryStage                 `json:"stages"`
	AdditionalProperties map[string]interface{}
}

type _DeploymentHistoryEnvironmentV2 DeploymentHistoryEnvironmentV2

// NewDeploymentHistoryEnvironmentV2 instantiates a new DeploymentHistoryEnvironmentV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentHistoryEnvironmentV2(identifier DeploymentHistoryEnvironmentV2Identifier, auditingData DeploymentHistoryAuditingData, status StateEnum, triggerAction DeploymentHistoryTriggerAction, totalDuration string, stages []DeploymentHistoryStage) *DeploymentHistoryEnvironmentV2 {
	this := DeploymentHistoryEnvironmentV2{}
	this.Identifier = identifier
	this.AuditingData = auditingData
	this.Status = status
	this.TriggerAction = triggerAction
	this.TotalDuration = totalDuration
	this.Stages = stages
	return &this
}

// NewDeploymentHistoryEnvironmentV2WithDefaults instantiates a new DeploymentHistoryEnvironmentV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentHistoryEnvironmentV2WithDefaults() *DeploymentHistoryEnvironmentV2 {
	this := DeploymentHistoryEnvironmentV2{}
	return &this
}

// GetIdentifier returns the Identifier field value
func (o *DeploymentHistoryEnvironmentV2) GetIdentifier() DeploymentHistoryEnvironmentV2Identifier {
	if o == nil {
		var ret DeploymentHistoryEnvironmentV2Identifier
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryEnvironmentV2) GetIdentifierOk() (*DeploymentHistoryEnvironmentV2Identifier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *DeploymentHistoryEnvironmentV2) SetIdentifier(v DeploymentHistoryEnvironmentV2Identifier) {
	o.Identifier = v
}

// GetAuditingData returns the AuditingData field value
func (o *DeploymentHistoryEnvironmentV2) GetAuditingData() DeploymentHistoryAuditingData {
	if o == nil {
		var ret DeploymentHistoryAuditingData
		return ret
	}

	return o.AuditingData
}

// GetAuditingDataOk returns a tuple with the AuditingData field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryEnvironmentV2) GetAuditingDataOk() (*DeploymentHistoryAuditingData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuditingData, true
}

// SetAuditingData sets field value
func (o *DeploymentHistoryEnvironmentV2) SetAuditingData(v DeploymentHistoryAuditingData) {
	o.AuditingData = v
}

// GetStatus returns the Status field value
func (o *DeploymentHistoryEnvironmentV2) GetStatus() StateEnum {
	if o == nil {
		var ret StateEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryEnvironmentV2) GetStatusOk() (*StateEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DeploymentHistoryEnvironmentV2) SetStatus(v StateEnum) {
	o.Status = v
}

// GetTriggerAction returns the TriggerAction field value
func (o *DeploymentHistoryEnvironmentV2) GetTriggerAction() DeploymentHistoryTriggerAction {
	if o == nil {
		var ret DeploymentHistoryTriggerAction
		return ret
	}

	return o.TriggerAction
}

// GetTriggerActionOk returns a tuple with the TriggerAction field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryEnvironmentV2) GetTriggerActionOk() (*DeploymentHistoryTriggerAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TriggerAction, true
}

// SetTriggerAction sets field value
func (o *DeploymentHistoryEnvironmentV2) SetTriggerAction(v DeploymentHistoryTriggerAction) {
	o.TriggerAction = v
}

// GetTotalDuration returns the TotalDuration field value
func (o *DeploymentHistoryEnvironmentV2) GetTotalDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalDuration
}

// GetTotalDurationOk returns a tuple with the TotalDuration field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryEnvironmentV2) GetTotalDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalDuration, true
}

// SetTotalDuration sets field value
func (o *DeploymentHistoryEnvironmentV2) SetTotalDuration(v string) {
	o.TotalDuration = v
}

// GetStages returns the Stages field value
func (o *DeploymentHistoryEnvironmentV2) GetStages() []DeploymentHistoryStage {
	if o == nil {
		var ret []DeploymentHistoryStage
		return ret
	}

	return o.Stages
}

// GetStagesOk returns a tuple with the Stages field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryEnvironmentV2) GetStagesOk() ([]DeploymentHistoryStage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stages, true
}

// SetStages sets field value
func (o *DeploymentHistoryEnvironmentV2) SetStages(v []DeploymentHistoryStage) {
	o.Stages = v
}

func (o DeploymentHistoryEnvironmentV2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentHistoryEnvironmentV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identifier"] = o.Identifier
	toSerialize["auditing_data"] = o.AuditingData
	toSerialize["status"] = o.Status
	toSerialize["trigger_action"] = o.TriggerAction
	toSerialize["total_duration"] = o.TotalDuration
	toSerialize["stages"] = o.Stages

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DeploymentHistoryEnvironmentV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
		"auditing_data",
		"status",
		"trigger_action",
		"total_duration",
		"stages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeploymentHistoryEnvironmentV2 := _DeploymentHistoryEnvironmentV2{}

	err = json.Unmarshal(data, &varDeploymentHistoryEnvironmentV2)

	if err != nil {
		return err
	}

	*o = DeploymentHistoryEnvironmentV2(varDeploymentHistoryEnvironmentV2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "identifier")
		delete(additionalProperties, "auditing_data")
		delete(additionalProperties, "status")
		delete(additionalProperties, "trigger_action")
		delete(additionalProperties, "total_duration")
		delete(additionalProperties, "stages")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeploymentHistoryEnvironmentV2 struct {
	value *DeploymentHistoryEnvironmentV2
	isSet bool
}

func (v NullableDeploymentHistoryEnvironmentV2) Get() *DeploymentHistoryEnvironmentV2 {
	return v.value
}

func (v *NullableDeploymentHistoryEnvironmentV2) Set(val *DeploymentHistoryEnvironmentV2) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentHistoryEnvironmentV2) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentHistoryEnvironmentV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentHistoryEnvironmentV2(val *DeploymentHistoryEnvironmentV2) *NullableDeploymentHistoryEnvironmentV2 {
	return &NullableDeploymentHistoryEnvironmentV2{value: val, isSet: true}
}

func (v NullableDeploymentHistoryEnvironmentV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentHistoryEnvironmentV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
