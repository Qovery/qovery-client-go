/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"time"
)

// EnvironmentStatus struct for EnvironmentStatus
type EnvironmentStatus struct {
	Id                  string         `json:"id"`
	State               StateEnum      `json:"state"`
	LastDeploymentDate  NullableTime   `json:"last_deployment_date,omitempty"`
	LastDeploymentState StateEnum      `json:"last_deployment_state"`
	LastDeploymentId    NullableString `json:"last_deployment_id,omitempty"`
}

// NewEnvironmentStatus instantiates a new EnvironmentStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentStatus(id string, state StateEnum, lastDeploymentState StateEnum) *EnvironmentStatus {
	this := EnvironmentStatus{}
	this.Id = id
	this.State = state
	this.LastDeploymentState = lastDeploymentState
	return &this
}

// NewEnvironmentStatusWithDefaults instantiates a new EnvironmentStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentStatusWithDefaults() *EnvironmentStatus {
	this := EnvironmentStatus{}
	return &this
}

// GetId returns the Id field value
func (o *EnvironmentStatus) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EnvironmentStatus) SetId(v string) {
	o.Id = v
}

// GetState returns the State field value
func (o *EnvironmentStatus) GetState() StateEnum {
	if o == nil {
		var ret StateEnum
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetStateOk() (*StateEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *EnvironmentStatus) SetState(v StateEnum) {
	o.State = v
}

// GetLastDeploymentDate returns the LastDeploymentDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvironmentStatus) GetLastDeploymentDate() time.Time {
	if o == nil || o.LastDeploymentDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastDeploymentDate.Get()
}

// GetLastDeploymentDateOk returns a tuple with the LastDeploymentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvironmentStatus) GetLastDeploymentDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastDeploymentDate.Get(), o.LastDeploymentDate.IsSet()
}

// HasLastDeploymentDate returns a boolean if a field has been set.
func (o *EnvironmentStatus) HasLastDeploymentDate() bool {
	if o != nil && o.LastDeploymentDate.IsSet() {
		return true
	}

	return false
}

// SetLastDeploymentDate gets a reference to the given NullableTime and assigns it to the LastDeploymentDate field.
func (o *EnvironmentStatus) SetLastDeploymentDate(v time.Time) {
	o.LastDeploymentDate.Set(&v)
}

// SetLastDeploymentDateNil sets the value for LastDeploymentDate to be an explicit nil
func (o *EnvironmentStatus) SetLastDeploymentDateNil() {
	o.LastDeploymentDate.Set(nil)
}

// UnsetLastDeploymentDate ensures that no value is present for LastDeploymentDate, not even an explicit nil
func (o *EnvironmentStatus) UnsetLastDeploymentDate() {
	o.LastDeploymentDate.Unset()
}

// GetLastDeploymentState returns the LastDeploymentState field value
func (o *EnvironmentStatus) GetLastDeploymentState() StateEnum {
	if o == nil {
		var ret StateEnum
		return ret
	}

	return o.LastDeploymentState
}

// GetLastDeploymentStateOk returns a tuple with the LastDeploymentState field value
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetLastDeploymentStateOk() (*StateEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastDeploymentState, true
}

// SetLastDeploymentState sets field value
func (o *EnvironmentStatus) SetLastDeploymentState(v StateEnum) {
	o.LastDeploymentState = v
}

// GetLastDeploymentId returns the LastDeploymentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvironmentStatus) GetLastDeploymentId() string {
	if o == nil || o.LastDeploymentId.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastDeploymentId.Get()
}

// GetLastDeploymentIdOk returns a tuple with the LastDeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvironmentStatus) GetLastDeploymentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastDeploymentId.Get(), o.LastDeploymentId.IsSet()
}

// HasLastDeploymentId returns a boolean if a field has been set.
func (o *EnvironmentStatus) HasLastDeploymentId() bool {
	if o != nil && o.LastDeploymentId.IsSet() {
		return true
	}

	return false
}

// SetLastDeploymentId gets a reference to the given NullableString and assigns it to the LastDeploymentId field.
func (o *EnvironmentStatus) SetLastDeploymentId(v string) {
	o.LastDeploymentId.Set(&v)
}

// SetLastDeploymentIdNil sets the value for LastDeploymentId to be an explicit nil
func (o *EnvironmentStatus) SetLastDeploymentIdNil() {
	o.LastDeploymentId.Set(nil)
}

// UnsetLastDeploymentId ensures that no value is present for LastDeploymentId, not even an explicit nil
func (o *EnvironmentStatus) UnsetLastDeploymentId() {
	o.LastDeploymentId.Unset()
}

func (o EnvironmentStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["state"] = o.State
	}
	if o.LastDeploymentDate.IsSet() {
		toSerialize["last_deployment_date"] = o.LastDeploymentDate.Get()
	}
	if true {
		toSerialize["last_deployment_state"] = o.LastDeploymentState
	}
	if o.LastDeploymentId.IsSet() {
		toSerialize["last_deployment_id"] = o.LastDeploymentId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentStatus struct {
	value *EnvironmentStatus
	isSet bool
}

func (v NullableEnvironmentStatus) Get() *EnvironmentStatus {
	return v.value
}

func (v *NullableEnvironmentStatus) Set(val *EnvironmentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentStatus(val *EnvironmentStatus) *NullableEnvironmentStatus {
	return &NullableEnvironmentStatus{value: val, isSet: true}
}

func (v NullableEnvironmentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
