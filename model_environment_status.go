/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the EnvironmentStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentStatus{}

// EnvironmentStatus struct for EnvironmentStatus
type EnvironmentStatus struct {
	Id                               string                            `json:"id"`
	State                            StateEnum                         `json:"state"`
	LastDeploymentDate               *time.Time                        `json:"last_deployment_date,omitempty"`
	LastDeploymentState              StateEnum                         `json:"last_deployment_state"`
	LastDeploymentId                 *string                           `json:"last_deployment_id,omitempty"`
	TotalDeploymentDurationInSeconds *int32                            `json:"total_deployment_duration_in_seconds,omitempty"`
	Origin                           *EnvironmentStatusEventOriginEnum `json:"origin,omitempty"`
	TriggeredBy                      *string                           `json:"triggered_by,omitempty"`
	DeploymentStatus                 *EnvironmentDeploymentStatusEnum  `json:"deployment_status,omitempty"`
	AdditionalProperties             map[string]interface{}
}

type _EnvironmentStatus EnvironmentStatus

// NewEnvironmentStatus instantiates a new EnvironmentStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentStatus(id string, state StateEnum, lastDeploymentState StateEnum) *EnvironmentStatus {
	this := EnvironmentStatus{}
	this.Id = id
	this.State = state
	this.LastDeploymentState = lastDeploymentState
	return &this
}

// NewEnvironmentStatusWithDefaults instantiates a new EnvironmentStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentStatusWithDefaults() *EnvironmentStatus {
	this := EnvironmentStatus{}
	return &this
}

// GetId returns the Id field value
func (o *EnvironmentStatus) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EnvironmentStatus) SetId(v string) {
	o.Id = v
}

// GetState returns the State field value
func (o *EnvironmentStatus) GetState() StateEnum {
	if o == nil {
		var ret StateEnum
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetStateOk() (*StateEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *EnvironmentStatus) SetState(v StateEnum) {
	o.State = v
}

// GetLastDeploymentDate returns the LastDeploymentDate field value if set, zero value otherwise.
func (o *EnvironmentStatus) GetLastDeploymentDate() time.Time {
	if o == nil || IsNil(o.LastDeploymentDate) {
		var ret time.Time
		return ret
	}
	return *o.LastDeploymentDate
}

// GetLastDeploymentDateOk returns a tuple with the LastDeploymentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetLastDeploymentDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastDeploymentDate) {
		return nil, false
	}
	return o.LastDeploymentDate, true
}

// HasLastDeploymentDate returns a boolean if a field has been set.
func (o *EnvironmentStatus) HasLastDeploymentDate() bool {
	if o != nil && !IsNil(o.LastDeploymentDate) {
		return true
	}

	return false
}

// SetLastDeploymentDate gets a reference to the given time.Time and assigns it to the LastDeploymentDate field.
func (o *EnvironmentStatus) SetLastDeploymentDate(v time.Time) {
	o.LastDeploymentDate = &v
}

// GetLastDeploymentState returns the LastDeploymentState field value
func (o *EnvironmentStatus) GetLastDeploymentState() StateEnum {
	if o == nil {
		var ret StateEnum
		return ret
	}

	return o.LastDeploymentState
}

// GetLastDeploymentStateOk returns a tuple with the LastDeploymentState field value
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetLastDeploymentStateOk() (*StateEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastDeploymentState, true
}

// SetLastDeploymentState sets field value
func (o *EnvironmentStatus) SetLastDeploymentState(v StateEnum) {
	o.LastDeploymentState = v
}

// GetLastDeploymentId returns the LastDeploymentId field value if set, zero value otherwise.
func (o *EnvironmentStatus) GetLastDeploymentId() string {
	if o == nil || IsNil(o.LastDeploymentId) {
		var ret string
		return ret
	}
	return *o.LastDeploymentId
}

// GetLastDeploymentIdOk returns a tuple with the LastDeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetLastDeploymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastDeploymentId) {
		return nil, false
	}
	return o.LastDeploymentId, true
}

// HasLastDeploymentId returns a boolean if a field has been set.
func (o *EnvironmentStatus) HasLastDeploymentId() bool {
	if o != nil && !IsNil(o.LastDeploymentId) {
		return true
	}

	return false
}

// SetLastDeploymentId gets a reference to the given string and assigns it to the LastDeploymentId field.
func (o *EnvironmentStatus) SetLastDeploymentId(v string) {
	o.LastDeploymentId = &v
}

// GetTotalDeploymentDurationInSeconds returns the TotalDeploymentDurationInSeconds field value if set, zero value otherwise.
func (o *EnvironmentStatus) GetTotalDeploymentDurationInSeconds() int32 {
	if o == nil || IsNil(o.TotalDeploymentDurationInSeconds) {
		var ret int32
		return ret
	}
	return *o.TotalDeploymentDurationInSeconds
}

// GetTotalDeploymentDurationInSecondsOk returns a tuple with the TotalDeploymentDurationInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetTotalDeploymentDurationInSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalDeploymentDurationInSeconds) {
		return nil, false
	}
	return o.TotalDeploymentDurationInSeconds, true
}

// HasTotalDeploymentDurationInSeconds returns a boolean if a field has been set.
func (o *EnvironmentStatus) HasTotalDeploymentDurationInSeconds() bool {
	if o != nil && !IsNil(o.TotalDeploymentDurationInSeconds) {
		return true
	}

	return false
}

// SetTotalDeploymentDurationInSeconds gets a reference to the given int32 and assigns it to the TotalDeploymentDurationInSeconds field.
func (o *EnvironmentStatus) SetTotalDeploymentDurationInSeconds(v int32) {
	o.TotalDeploymentDurationInSeconds = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *EnvironmentStatus) GetOrigin() EnvironmentStatusEventOriginEnum {
	if o == nil || IsNil(o.Origin) {
		var ret EnvironmentStatusEventOriginEnum
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetOriginOk() (*EnvironmentStatusEventOriginEnum, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *EnvironmentStatus) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given EnvironmentStatusEventOriginEnum and assigns it to the Origin field.
func (o *EnvironmentStatus) SetOrigin(v EnvironmentStatusEventOriginEnum) {
	o.Origin = &v
}

// GetTriggeredBy returns the TriggeredBy field value if set, zero value otherwise.
func (o *EnvironmentStatus) GetTriggeredBy() string {
	if o == nil || IsNil(o.TriggeredBy) {
		var ret string
		return ret
	}
	return *o.TriggeredBy
}

// GetTriggeredByOk returns a tuple with the TriggeredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetTriggeredByOk() (*string, bool) {
	if o == nil || IsNil(o.TriggeredBy) {
		return nil, false
	}
	return o.TriggeredBy, true
}

// HasTriggeredBy returns a boolean if a field has been set.
func (o *EnvironmentStatus) HasTriggeredBy() bool {
	if o != nil && !IsNil(o.TriggeredBy) {
		return true
	}

	return false
}

// SetTriggeredBy gets a reference to the given string and assigns it to the TriggeredBy field.
func (o *EnvironmentStatus) SetTriggeredBy(v string) {
	o.TriggeredBy = &v
}

// GetDeploymentStatus returns the DeploymentStatus field value if set, zero value otherwise.
func (o *EnvironmentStatus) GetDeploymentStatus() EnvironmentDeploymentStatusEnum {
	if o == nil || IsNil(o.DeploymentStatus) {
		var ret EnvironmentDeploymentStatusEnum
		return ret
	}
	return *o.DeploymentStatus
}

// GetDeploymentStatusOk returns a tuple with the DeploymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentStatus) GetDeploymentStatusOk() (*EnvironmentDeploymentStatusEnum, bool) {
	if o == nil || IsNil(o.DeploymentStatus) {
		return nil, false
	}
	return o.DeploymentStatus, true
}

// HasDeploymentStatus returns a boolean if a field has been set.
func (o *EnvironmentStatus) HasDeploymentStatus() bool {
	if o != nil && !IsNil(o.DeploymentStatus) {
		return true
	}

	return false
}

// SetDeploymentStatus gets a reference to the given EnvironmentDeploymentStatusEnum and assigns it to the DeploymentStatus field.
func (o *EnvironmentStatus) SetDeploymentStatus(v EnvironmentDeploymentStatusEnum) {
	o.DeploymentStatus = &v
}

func (o EnvironmentStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["state"] = o.State
	if !IsNil(o.LastDeploymentDate) {
		toSerialize["last_deployment_date"] = o.LastDeploymentDate
	}
	toSerialize["last_deployment_state"] = o.LastDeploymentState
	if !IsNil(o.LastDeploymentId) {
		toSerialize["last_deployment_id"] = o.LastDeploymentId
	}
	if !IsNil(o.TotalDeploymentDurationInSeconds) {
		toSerialize["total_deployment_duration_in_seconds"] = o.TotalDeploymentDurationInSeconds
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.TriggeredBy) {
		toSerialize["triggered_by"] = o.TriggeredBy
	}
	if !IsNil(o.DeploymentStatus) {
		toSerialize["deployment_status"] = o.DeploymentStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EnvironmentStatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"state",
		"last_deployment_state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnvironmentStatus := _EnvironmentStatus{}

	err = json.Unmarshal(data, &varEnvironmentStatus)

	if err != nil {
		return err
	}

	*o = EnvironmentStatus(varEnvironmentStatus)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "state")
		delete(additionalProperties, "last_deployment_date")
		delete(additionalProperties, "last_deployment_state")
		delete(additionalProperties, "last_deployment_id")
		delete(additionalProperties, "total_deployment_duration_in_seconds")
		delete(additionalProperties, "origin")
		delete(additionalProperties, "triggered_by")
		delete(additionalProperties, "deployment_status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEnvironmentStatus struct {
	value *EnvironmentStatus
	isSet bool
}

func (v NullableEnvironmentStatus) Get() *EnvironmentStatus {
	return v.value
}

func (v *NullableEnvironmentStatus) Set(val *EnvironmentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentStatus(val *EnvironmentStatus) *NullableEnvironmentStatus {
	return &NullableEnvironmentStatus{value: val, isSet: true}
}

func (v NullableEnvironmentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
