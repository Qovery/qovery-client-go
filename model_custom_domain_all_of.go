/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// CustomDomainAllOf struct for CustomDomainAllOf
type CustomDomainAllOf struct {
	// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL
	ValidationDomain *string                 `json:"validation_domain,omitempty"`
	Status           *CustomDomainStatusEnum `json:"status,omitempty"`
	// to control if a certificate has to be generated for this custom domain by Qovery. The default value is `true`. This flag should be set to `false` if a CDN or other entities are managing the certificate for the specified domain and the traffic is proxied by the CDN to Qovery.
	GenerateCertificate *bool `json:"generate_certificate,omitempty"`
}

// NewCustomDomainAllOf instantiates a new CustomDomainAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomDomainAllOf() *CustomDomainAllOf {
	this := CustomDomainAllOf{}
	return &this
}

// NewCustomDomainAllOfWithDefaults instantiates a new CustomDomainAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomDomainAllOfWithDefaults() *CustomDomainAllOf {
	this := CustomDomainAllOf{}
	return &this
}

// GetValidationDomain returns the ValidationDomain field value if set, zero value otherwise.
func (o *CustomDomainAllOf) GetValidationDomain() string {
	if o == nil || o.ValidationDomain == nil {
		var ret string
		return ret
	}
	return *o.ValidationDomain
}

// GetValidationDomainOk returns a tuple with the ValidationDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDomainAllOf) GetValidationDomainOk() (*string, bool) {
	if o == nil || o.ValidationDomain == nil {
		return nil, false
	}
	return o.ValidationDomain, true
}

// HasValidationDomain returns a boolean if a field has been set.
func (o *CustomDomainAllOf) HasValidationDomain() bool {
	if o != nil && o.ValidationDomain != nil {
		return true
	}

	return false
}

// SetValidationDomain gets a reference to the given string and assigns it to the ValidationDomain field.
func (o *CustomDomainAllOf) SetValidationDomain(v string) {
	o.ValidationDomain = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CustomDomainAllOf) GetStatus() CustomDomainStatusEnum {
	if o == nil || o.Status == nil {
		var ret CustomDomainStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDomainAllOf) GetStatusOk() (*CustomDomainStatusEnum, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CustomDomainAllOf) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CustomDomainStatusEnum and assigns it to the Status field.
func (o *CustomDomainAllOf) SetStatus(v CustomDomainStatusEnum) {
	o.Status = &v
}

// GetGenerateCertificate returns the GenerateCertificate field value if set, zero value otherwise.
func (o *CustomDomainAllOf) GetGenerateCertificate() bool {
	if o == nil || o.GenerateCertificate == nil {
		var ret bool
		return ret
	}
	return *o.GenerateCertificate
}

// GetGenerateCertificateOk returns a tuple with the GenerateCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDomainAllOf) GetGenerateCertificateOk() (*bool, bool) {
	if o == nil || o.GenerateCertificate == nil {
		return nil, false
	}
	return o.GenerateCertificate, true
}

// HasGenerateCertificate returns a boolean if a field has been set.
func (o *CustomDomainAllOf) HasGenerateCertificate() bool {
	if o != nil && o.GenerateCertificate != nil {
		return true
	}

	return false
}

// SetGenerateCertificate gets a reference to the given bool and assigns it to the GenerateCertificate field.
func (o *CustomDomainAllOf) SetGenerateCertificate(v bool) {
	o.GenerateCertificate = &v
}

func (o CustomDomainAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ValidationDomain != nil {
		toSerialize["validation_domain"] = o.ValidationDomain
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.GenerateCertificate != nil {
		toSerialize["generate_certificate"] = o.GenerateCertificate
	}
	return json.Marshal(toSerialize)
}

type NullableCustomDomainAllOf struct {
	value *CustomDomainAllOf
	isSet bool
}

func (v NullableCustomDomainAllOf) Get() *CustomDomainAllOf {
	return v.value
}

func (v *NullableCustomDomainAllOf) Set(val *CustomDomainAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomDomainAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomDomainAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomDomainAllOf(val *CustomDomainAllOf) *NullableCustomDomainAllOf {
	return &NullableCustomDomainAllOf{value: val, isSet: true}
}

func (v NullableCustomDomainAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomDomainAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
