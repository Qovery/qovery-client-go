/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// InviteMemberResponseAllOf struct for InviteMemberResponseAllOf
type InviteMemberResponseAllOf struct {
	Email            string  `json:"email"`
	Role             string  `json:"role"`
	InvitationLink   string  `json:"invitation_link"`
	InvitationStatus string  `json:"invitation_status"`
	Inviter          string  `json:"inviter"`
	LogoUrl          *string `json:"logo_url,omitempty"`
}

// NewInviteMemberResponseAllOf instantiates a new InviteMemberResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteMemberResponseAllOf(email string, role string, invitationLink string, invitationStatus string, inviter string) *InviteMemberResponseAllOf {
	this := InviteMemberResponseAllOf{}
	this.Email = email
	this.Role = role
	this.InvitationLink = invitationLink
	this.InvitationStatus = invitationStatus
	this.Inviter = inviter
	return &this
}

// NewInviteMemberResponseAllOfWithDefaults instantiates a new InviteMemberResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteMemberResponseAllOfWithDefaults() *InviteMemberResponseAllOf {
	this := InviteMemberResponseAllOf{}
	return &this
}

// GetEmail returns the Email field value
func (o *InviteMemberResponseAllOf) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponseAllOf) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *InviteMemberResponseAllOf) SetEmail(v string) {
	o.Email = v
}

// GetRole returns the Role field value
func (o *InviteMemberResponseAllOf) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponseAllOf) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *InviteMemberResponseAllOf) SetRole(v string) {
	o.Role = v
}

// GetInvitationLink returns the InvitationLink field value
func (o *InviteMemberResponseAllOf) GetInvitationLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvitationLink
}

// GetInvitationLinkOk returns a tuple with the InvitationLink field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponseAllOf) GetInvitationLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvitationLink, true
}

// SetInvitationLink sets field value
func (o *InviteMemberResponseAllOf) SetInvitationLink(v string) {
	o.InvitationLink = v
}

// GetInvitationStatus returns the InvitationStatus field value
func (o *InviteMemberResponseAllOf) GetInvitationStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvitationStatus
}

// GetInvitationStatusOk returns a tuple with the InvitationStatus field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponseAllOf) GetInvitationStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvitationStatus, true
}

// SetInvitationStatus sets field value
func (o *InviteMemberResponseAllOf) SetInvitationStatus(v string) {
	o.InvitationStatus = v
}

// GetInviter returns the Inviter field value
func (o *InviteMemberResponseAllOf) GetInviter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Inviter
}

// GetInviterOk returns a tuple with the Inviter field value
// and a boolean to check if the value has been set.
func (o *InviteMemberResponseAllOf) GetInviterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inviter, true
}

// SetInviter sets field value
func (o *InviteMemberResponseAllOf) SetInviter(v string) {
	o.Inviter = v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *InviteMemberResponseAllOf) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteMemberResponseAllOf) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *InviteMemberResponseAllOf) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *InviteMemberResponseAllOf) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

func (o InviteMemberResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["invitation_link"] = o.InvitationLink
	}
	if true {
		toSerialize["invitation_status"] = o.InvitationStatus
	}
	if true {
		toSerialize["inviter"] = o.Inviter
	}
	if o.LogoUrl != nil {
		toSerialize["logo_url"] = o.LogoUrl
	}
	return json.Marshal(toSerialize)
}

type NullableInviteMemberResponseAllOf struct {
	value *InviteMemberResponseAllOf
	isSet bool
}

func (v NullableInviteMemberResponseAllOf) Get() *InviteMemberResponseAllOf {
	return v.value
}

func (v *NullableInviteMemberResponseAllOf) Set(val *InviteMemberResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteMemberResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteMemberResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteMemberResponseAllOf(val *InviteMemberResponseAllOf) *NullableInviteMemberResponseAllOf {
	return &NullableInviteMemberResponseAllOf{value: val, isSet: true}
}

func (v NullableInviteMemberResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteMemberResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
