/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ClusterStatusResponse struct for ClusterStatusResponse
type ClusterStatusResponse struct {
	ClusterId  *string `json:"cluster_id,omitempty"`
	Status     *string `json:"status,omitempty"`
	IsDeployed *bool   `json:"is_deployed,omitempty"`
}

// NewClusterStatusResponse instantiates a new ClusterStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterStatusResponse() *ClusterStatusResponse {
	this := ClusterStatusResponse{}
	return &this
}

// NewClusterStatusResponseWithDefaults instantiates a new ClusterStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterStatusResponseWithDefaults() *ClusterStatusResponse {
	this := ClusterStatusResponse{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *ClusterStatusResponse) GetClusterId() string {
	if o == nil || o.ClusterId == nil {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusResponse) GetClusterIdOk() (*string, bool) {
	if o == nil || o.ClusterId == nil {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *ClusterStatusResponse) HasClusterId() bool {
	if o != nil && o.ClusterId != nil {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *ClusterStatusResponse) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClusterStatusResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterStatusResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ClusterStatusResponse) SetStatus(v string) {
	o.Status = &v
}

// GetIsDeployed returns the IsDeployed field value if set, zero value otherwise.
func (o *ClusterStatusResponse) GetIsDeployed() bool {
	if o == nil || o.IsDeployed == nil {
		var ret bool
		return ret
	}
	return *o.IsDeployed
}

// GetIsDeployedOk returns a tuple with the IsDeployed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusResponse) GetIsDeployedOk() (*bool, bool) {
	if o == nil || o.IsDeployed == nil {
		return nil, false
	}
	return o.IsDeployed, true
}

// HasIsDeployed returns a boolean if a field has been set.
func (o *ClusterStatusResponse) HasIsDeployed() bool {
	if o != nil && o.IsDeployed != nil {
		return true
	}

	return false
}

// SetIsDeployed gets a reference to the given bool and assigns it to the IsDeployed field.
func (o *ClusterStatusResponse) SetIsDeployed(v bool) {
	o.IsDeployed = &v
}

func (o ClusterStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterId != nil {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.IsDeployed != nil {
		toSerialize["is_deployed"] = o.IsDeployed
	}
	return json.Marshal(toSerialize)
}

type NullableClusterStatusResponse struct {
	value *ClusterStatusResponse
	isSet bool
}

func (v NullableClusterStatusResponse) Get() *ClusterStatusResponse {
	return v.value
}

func (v *NullableClusterStatusResponse) Set(val *ClusterStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterStatusResponse(val *ClusterStatusResponse) *NullableClusterStatusResponse {
	return &NullableClusterStatusResponse{value: val, isSet: true}
}

func (v NullableClusterStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
