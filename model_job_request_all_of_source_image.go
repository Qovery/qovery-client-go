/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the JobRequestAllOfSourceImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobRequestAllOfSourceImage{}

// JobRequestAllOfSourceImage struct for JobRequestAllOfSourceImage
type JobRequestAllOfSourceImage struct {
	// The image name pattern differs according to chosen container registry provider:   * `ECR`: `repository` * `SCALEWAY_CR`: `namespace/image` * `DOCKER_HUB`: `image` or `repository/image` * `PUBLIC_ECR`: `registry_alias/repository`
	ImageName *string `json:"image_name,omitempty"`
	// tag of the image container
	Tag *string `json:"tag,omitempty"`
	// tag of the image container
	RegistryId           *string `json:"registry_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _JobRequestAllOfSourceImage JobRequestAllOfSourceImage

// NewJobRequestAllOfSourceImage instantiates a new JobRequestAllOfSourceImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobRequestAllOfSourceImage() *JobRequestAllOfSourceImage {
	this := JobRequestAllOfSourceImage{}
	return &this
}

// NewJobRequestAllOfSourceImageWithDefaults instantiates a new JobRequestAllOfSourceImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobRequestAllOfSourceImageWithDefaults() *JobRequestAllOfSourceImage {
	this := JobRequestAllOfSourceImage{}
	return &this
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *JobRequestAllOfSourceImage) GetImageName() string {
	if o == nil || IsNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRequestAllOfSourceImage) GetImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *JobRequestAllOfSourceImage) HasImageName() bool {
	if o != nil && !IsNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *JobRequestAllOfSourceImage) SetImageName(v string) {
	o.ImageName = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *JobRequestAllOfSourceImage) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRequestAllOfSourceImage) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *JobRequestAllOfSourceImage) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *JobRequestAllOfSourceImage) SetTag(v string) {
	o.Tag = &v
}

// GetRegistryId returns the RegistryId field value if set, zero value otherwise.
func (o *JobRequestAllOfSourceImage) GetRegistryId() string {
	if o == nil || IsNil(o.RegistryId) {
		var ret string
		return ret
	}
	return *o.RegistryId
}

// GetRegistryIdOk returns a tuple with the RegistryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRequestAllOfSourceImage) GetRegistryIdOk() (*string, bool) {
	if o == nil || IsNil(o.RegistryId) {
		return nil, false
	}
	return o.RegistryId, true
}

// HasRegistryId returns a boolean if a field has been set.
func (o *JobRequestAllOfSourceImage) HasRegistryId() bool {
	if o != nil && !IsNil(o.RegistryId) {
		return true
	}

	return false
}

// SetRegistryId gets a reference to the given string and assigns it to the RegistryId field.
func (o *JobRequestAllOfSourceImage) SetRegistryId(v string) {
	o.RegistryId = &v
}

func (o JobRequestAllOfSourceImage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobRequestAllOfSourceImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageName) {
		toSerialize["image_name"] = o.ImageName
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.RegistryId) {
		toSerialize["registry_id"] = o.RegistryId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *JobRequestAllOfSourceImage) UnmarshalJSON(data []byte) (err error) {
	varJobRequestAllOfSourceImage := _JobRequestAllOfSourceImage{}

	err = json.Unmarshal(data, &varJobRequestAllOfSourceImage)

	if err != nil {
		return err
	}

	*o = JobRequestAllOfSourceImage(varJobRequestAllOfSourceImage)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "image_name")
		delete(additionalProperties, "tag")
		delete(additionalProperties, "registry_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableJobRequestAllOfSourceImage struct {
	value *JobRequestAllOfSourceImage
	isSet bool
}

func (v NullableJobRequestAllOfSourceImage) Get() *JobRequestAllOfSourceImage {
	return v.value
}

func (v *NullableJobRequestAllOfSourceImage) Set(val *JobRequestAllOfSourceImage) {
	v.value = val
	v.isSet = true
}

func (v NullableJobRequestAllOfSourceImage) IsSet() bool {
	return v.isSet
}

func (v *NullableJobRequestAllOfSourceImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobRequestAllOfSourceImage(val *JobRequestAllOfSourceImage) *NullableJobRequestAllOfSourceImage {
	return &NullableJobRequestAllOfSourceImage{value: val, isSet: true}
}

func (v NullableJobRequestAllOfSourceImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobRequestAllOfSourceImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
