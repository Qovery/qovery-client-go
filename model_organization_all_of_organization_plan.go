/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the OrganizationAllOfOrganizationPlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationAllOfOrganizationPlan{}

// OrganizationAllOfOrganizationPlan struct for OrganizationAllOfOrganizationPlan
type OrganizationAllOfOrganizationPlan struct {
	Plan *PlanEnum `json:"plan,omitempty"`
	// audit logs maximum period available in days
	AuditLogsRetentionInDays *float32 `json:"audit_logs_retention_in_days,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _OrganizationAllOfOrganizationPlan OrganizationAllOfOrganizationPlan

// NewOrganizationAllOfOrganizationPlan instantiates a new OrganizationAllOfOrganizationPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationAllOfOrganizationPlan() *OrganizationAllOfOrganizationPlan {
	this := OrganizationAllOfOrganizationPlan{}
	return &this
}

// NewOrganizationAllOfOrganizationPlanWithDefaults instantiates a new OrganizationAllOfOrganizationPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationAllOfOrganizationPlanWithDefaults() *OrganizationAllOfOrganizationPlan {
	this := OrganizationAllOfOrganizationPlan{}
	return &this
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *OrganizationAllOfOrganizationPlan) GetPlan() PlanEnum {
	if o == nil || IsNil(o.Plan) {
		var ret PlanEnum
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAllOfOrganizationPlan) GetPlanOk() (*PlanEnum, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *OrganizationAllOfOrganizationPlan) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given PlanEnum and assigns it to the Plan field.
func (o *OrganizationAllOfOrganizationPlan) SetPlan(v PlanEnum) {
	o.Plan = &v
}

// GetAuditLogsRetentionInDays returns the AuditLogsRetentionInDays field value if set, zero value otherwise.
func (o *OrganizationAllOfOrganizationPlan) GetAuditLogsRetentionInDays() float32 {
	if o == nil || IsNil(o.AuditLogsRetentionInDays) {
		var ret float32
		return ret
	}
	return *o.AuditLogsRetentionInDays
}

// GetAuditLogsRetentionInDaysOk returns a tuple with the AuditLogsRetentionInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationAllOfOrganizationPlan) GetAuditLogsRetentionInDaysOk() (*float32, bool) {
	if o == nil || IsNil(o.AuditLogsRetentionInDays) {
		return nil, false
	}
	return o.AuditLogsRetentionInDays, true
}

// HasAuditLogsRetentionInDays returns a boolean if a field has been set.
func (o *OrganizationAllOfOrganizationPlan) HasAuditLogsRetentionInDays() bool {
	if o != nil && !IsNil(o.AuditLogsRetentionInDays) {
		return true
	}

	return false
}

// SetAuditLogsRetentionInDays gets a reference to the given float32 and assigns it to the AuditLogsRetentionInDays field.
func (o *OrganizationAllOfOrganizationPlan) SetAuditLogsRetentionInDays(v float32) {
	o.AuditLogsRetentionInDays = &v
}

func (o OrganizationAllOfOrganizationPlan) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationAllOfOrganizationPlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.AuditLogsRetentionInDays) {
		toSerialize["audit_logs_retention_in_days"] = o.AuditLogsRetentionInDays
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationAllOfOrganizationPlan) UnmarshalJSON(data []byte) (err error) {
	varOrganizationAllOfOrganizationPlan := _OrganizationAllOfOrganizationPlan{}

	err = json.Unmarshal(data, &varOrganizationAllOfOrganizationPlan)

	if err != nil {
		return err
	}

	*o = OrganizationAllOfOrganizationPlan(varOrganizationAllOfOrganizationPlan)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "plan")
		delete(additionalProperties, "audit_logs_retention_in_days")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationAllOfOrganizationPlan struct {
	value *OrganizationAllOfOrganizationPlan
	isSet bool
}

func (v NullableOrganizationAllOfOrganizationPlan) Get() *OrganizationAllOfOrganizationPlan {
	return v.value
}

func (v *NullableOrganizationAllOfOrganizationPlan) Set(val *OrganizationAllOfOrganizationPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationAllOfOrganizationPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationAllOfOrganizationPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationAllOfOrganizationPlan(val *OrganizationAllOfOrganizationPlan) *NullableOrganizationAllOfOrganizationPlan {
	return &NullableOrganizationAllOfOrganizationPlan{value: val, isSet: true}
}

func (v NullableOrganizationAllOfOrganizationPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationAllOfOrganizationPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
