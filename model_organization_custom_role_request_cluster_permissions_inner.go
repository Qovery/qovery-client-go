/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// OrganizationCustomRoleRequestClusterPermissionsInner struct for OrganizationCustomRoleRequestClusterPermissionsInner
type OrganizationCustomRoleRequestClusterPermissionsInner struct {
	ClusterId  *string                                  `json:"cluster_id,omitempty"`
	Permission *OrganizationCustomRoleClusterPermission `json:"permission,omitempty"`
}

// NewOrganizationCustomRoleRequestClusterPermissionsInner instantiates a new OrganizationCustomRoleRequestClusterPermissionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationCustomRoleRequestClusterPermissionsInner() *OrganizationCustomRoleRequestClusterPermissionsInner {
	this := OrganizationCustomRoleRequestClusterPermissionsInner{}
	return &this
}

// NewOrganizationCustomRoleRequestClusterPermissionsInnerWithDefaults instantiates a new OrganizationCustomRoleRequestClusterPermissionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationCustomRoleRequestClusterPermissionsInnerWithDefaults() *OrganizationCustomRoleRequestClusterPermissionsInner {
	this := OrganizationCustomRoleRequestClusterPermissionsInner{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *OrganizationCustomRoleRequestClusterPermissionsInner) GetClusterId() string {
	if o == nil || o.ClusterId == nil {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRoleRequestClusterPermissionsInner) GetClusterIdOk() (*string, bool) {
	if o == nil || o.ClusterId == nil {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *OrganizationCustomRoleRequestClusterPermissionsInner) HasClusterId() bool {
	if o != nil && o.ClusterId != nil {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *OrganizationCustomRoleRequestClusterPermissionsInner) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *OrganizationCustomRoleRequestClusterPermissionsInner) GetPermission() OrganizationCustomRoleClusterPermission {
	if o == nil || o.Permission == nil {
		var ret OrganizationCustomRoleClusterPermission
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRoleRequestClusterPermissionsInner) GetPermissionOk() (*OrganizationCustomRoleClusterPermission, bool) {
	if o == nil || o.Permission == nil {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *OrganizationCustomRoleRequestClusterPermissionsInner) HasPermission() bool {
	if o != nil && o.Permission != nil {
		return true
	}

	return false
}

// SetPermission gets a reference to the given OrganizationCustomRoleClusterPermission and assigns it to the Permission field.
func (o *OrganizationCustomRoleRequestClusterPermissionsInner) SetPermission(v OrganizationCustomRoleClusterPermission) {
	o.Permission = &v
}

func (o OrganizationCustomRoleRequestClusterPermissionsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterId != nil {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if o.Permission != nil {
		toSerialize["permission"] = o.Permission
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationCustomRoleRequestClusterPermissionsInner struct {
	value *OrganizationCustomRoleRequestClusterPermissionsInner
	isSet bool
}

func (v NullableOrganizationCustomRoleRequestClusterPermissionsInner) Get() *OrganizationCustomRoleRequestClusterPermissionsInner {
	return v.value
}

func (v *NullableOrganizationCustomRoleRequestClusterPermissionsInner) Set(val *OrganizationCustomRoleRequestClusterPermissionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationCustomRoleRequestClusterPermissionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationCustomRoleRequestClusterPermissionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationCustomRoleRequestClusterPermissionsInner(val *OrganizationCustomRoleRequestClusterPermissionsInner) *NullableOrganizationCustomRoleRequestClusterPermissionsInner {
	return &NullableOrganizationCustomRoleRequestClusterPermissionsInner{value: val, isSet: true}
}

func (v NullableOrganizationCustomRoleRequestClusterPermissionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationCustomRoleRequestClusterPermissionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
