/*
[BETA] Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is in Beta and still in progress. Some endpoints are not available yet.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 1.0.0
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// ClusterRoutingTableRequestRoutes struct for ClusterRoutingTableRequestRoutes
type ClusterRoutingTableRequestRoutes struct {
	Destination string `json:"destination"`
	Target      string `json:"target"`
	Description string `json:"description"`
}

// NewClusterRoutingTableRequestRoutes instantiates a new ClusterRoutingTableRequestRoutes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterRoutingTableRequestRoutes(destination string, target string, description string) *ClusterRoutingTableRequestRoutes {
	this := ClusterRoutingTableRequestRoutes{}
	this.Destination = destination
	this.Target = target
	this.Description = description
	return &this
}

// NewClusterRoutingTableRequestRoutesWithDefaults instantiates a new ClusterRoutingTableRequestRoutes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterRoutingTableRequestRoutesWithDefaults() *ClusterRoutingTableRequestRoutes {
	this := ClusterRoutingTableRequestRoutes{}
	return &this
}

// GetDestination returns the Destination field value
func (o *ClusterRoutingTableRequestRoutes) GetDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *ClusterRoutingTableRequestRoutes) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *ClusterRoutingTableRequestRoutes) SetDestination(v string) {
	o.Destination = v
}

// GetTarget returns the Target field value
func (o *ClusterRoutingTableRequestRoutes) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *ClusterRoutingTableRequestRoutes) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *ClusterRoutingTableRequestRoutes) SetTarget(v string) {
	o.Target = v
}

// GetDescription returns the Description field value
func (o *ClusterRoutingTableRequestRoutes) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ClusterRoutingTableRequestRoutes) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ClusterRoutingTableRequestRoutes) SetDescription(v string) {
	o.Description = v
}

func (o ClusterRoutingTableRequestRoutes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["destination"] = o.Destination
	}
	if true {
		toSerialize["target"] = o.Target
	}
	if true {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableClusterRoutingTableRequestRoutes struct {
	value *ClusterRoutingTableRequestRoutes
	isSet bool
}

func (v NullableClusterRoutingTableRequestRoutes) Get() *ClusterRoutingTableRequestRoutes {
	return v.value
}

func (v *NullableClusterRoutingTableRequestRoutes) Set(val *ClusterRoutingTableRequestRoutes) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterRoutingTableRequestRoutes) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterRoutingTableRequestRoutes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterRoutingTableRequestRoutes(val *ClusterRoutingTableRequestRoutes) *NullableClusterRoutingTableRequestRoutes {
	return &NullableClusterRoutingTableRequestRoutes{value: val, isSet: true}
}

func (v NullableClusterRoutingTableRequestRoutes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterRoutingTableRequestRoutes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
