/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// checks if the MemberRoleUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberRoleUpdateRequest{}

// MemberRoleUpdateRequest struct for MemberRoleUpdateRequest
type MemberRoleUpdateRequest struct {
	// specify the git provider user id
	UserId string `json:"user_id"`
	RoleId string `json:"role_id"`
}

// NewMemberRoleUpdateRequest instantiates a new MemberRoleUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberRoleUpdateRequest(userId string, roleId string) *MemberRoleUpdateRequest {
	this := MemberRoleUpdateRequest{}
	this.UserId = userId
	this.RoleId = roleId
	return &this
}

// NewMemberRoleUpdateRequestWithDefaults instantiates a new MemberRoleUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberRoleUpdateRequestWithDefaults() *MemberRoleUpdateRequest {
	this := MemberRoleUpdateRequest{}
	return &this
}

// GetUserId returns the UserId field value
func (o *MemberRoleUpdateRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *MemberRoleUpdateRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *MemberRoleUpdateRequest) SetUserId(v string) {
	o.UserId = v
}

// GetRoleId returns the RoleId field value
func (o *MemberRoleUpdateRequest) GetRoleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value
// and a boolean to check if the value has been set.
func (o *MemberRoleUpdateRequest) GetRoleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleId, true
}

// SetRoleId sets field value
func (o *MemberRoleUpdateRequest) SetRoleId(v string) {
	o.RoleId = v
}

func (o MemberRoleUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberRoleUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_id"] = o.UserId
	toSerialize["role_id"] = o.RoleId
	return toSerialize, nil
}

type NullableMemberRoleUpdateRequest struct {
	value *MemberRoleUpdateRequest
	isSet bool
}

func (v NullableMemberRoleUpdateRequest) Get() *MemberRoleUpdateRequest {
	return v.value
}

func (v *NullableMemberRoleUpdateRequest) Set(val *MemberRoleUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberRoleUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberRoleUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberRoleUpdateRequest(val *MemberRoleUpdateRequest) *NullableMemberRoleUpdateRequest {
	return &NullableMemberRoleUpdateRequest{value: val, isSet: true}
}

func (v NullableMemberRoleUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberRoleUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
