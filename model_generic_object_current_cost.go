/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GenericObjectCurrentCost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericObjectCurrentCost{}

// GenericObjectCurrentCost struct for GenericObjectCurrentCost
type GenericObjectCurrentCost struct {
	Id                    string `json:"id"`
	Name                  string `json:"name"`
	ConsumedTimeInSeconds int32  `json:"consumed_time_in_seconds"`
	Cost                  Cost   `json:"cost"`
}

type _GenericObjectCurrentCost GenericObjectCurrentCost

// NewGenericObjectCurrentCost instantiates a new GenericObjectCurrentCost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericObjectCurrentCost(id string, name string, consumedTimeInSeconds int32, cost Cost) *GenericObjectCurrentCost {
	this := GenericObjectCurrentCost{}
	this.Id = id
	this.Name = name
	this.ConsumedTimeInSeconds = consumedTimeInSeconds
	this.Cost = cost
	return &this
}

// NewGenericObjectCurrentCostWithDefaults instantiates a new GenericObjectCurrentCost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericObjectCurrentCostWithDefaults() *GenericObjectCurrentCost {
	this := GenericObjectCurrentCost{}
	return &this
}

// GetId returns the Id field value
func (o *GenericObjectCurrentCost) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GenericObjectCurrentCost) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GenericObjectCurrentCost) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GenericObjectCurrentCost) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GenericObjectCurrentCost) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GenericObjectCurrentCost) SetName(v string) {
	o.Name = v
}

// GetConsumedTimeInSeconds returns the ConsumedTimeInSeconds field value
func (o *GenericObjectCurrentCost) GetConsumedTimeInSeconds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ConsumedTimeInSeconds
}

// GetConsumedTimeInSecondsOk returns a tuple with the ConsumedTimeInSeconds field value
// and a boolean to check if the value has been set.
func (o *GenericObjectCurrentCost) GetConsumedTimeInSecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConsumedTimeInSeconds, true
}

// SetConsumedTimeInSeconds sets field value
func (o *GenericObjectCurrentCost) SetConsumedTimeInSeconds(v int32) {
	o.ConsumedTimeInSeconds = v
}

// GetCost returns the Cost field value
func (o *GenericObjectCurrentCost) GetCost() Cost {
	if o == nil {
		var ret Cost
		return ret
	}

	return o.Cost
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
func (o *GenericObjectCurrentCost) GetCostOk() (*Cost, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cost, true
}

// SetCost sets field value
func (o *GenericObjectCurrentCost) SetCost(v Cost) {
	o.Cost = v
}

func (o GenericObjectCurrentCost) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericObjectCurrentCost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["consumed_time_in_seconds"] = o.ConsumedTimeInSeconds
	toSerialize["cost"] = o.Cost
	return toSerialize, nil
}

func (o *GenericObjectCurrentCost) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"consumed_time_in_seconds",
		"cost",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenericObjectCurrentCost := _GenericObjectCurrentCost{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGenericObjectCurrentCost)

	if err != nil {
		return err
	}

	*o = GenericObjectCurrentCost(varGenericObjectCurrentCost)

	return err
}

type NullableGenericObjectCurrentCost struct {
	value *GenericObjectCurrentCost
	isSet bool
}

func (v NullableGenericObjectCurrentCost) Get() *GenericObjectCurrentCost {
	return v.value
}

func (v *NullableGenericObjectCurrentCost) Set(val *GenericObjectCurrentCost) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericObjectCurrentCost) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericObjectCurrentCost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericObjectCurrentCost(val *GenericObjectCurrentCost) *NullableGenericObjectCurrentCost {
	return &NullableGenericObjectCurrentCost{value: val, isSet: true}
}

func (v NullableGenericObjectCurrentCost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericObjectCurrentCost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
