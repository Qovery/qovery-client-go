/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the OrganizationApiTokenCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationApiTokenCreateRequest{}

// OrganizationApiTokenCreateRequest struct for OrganizationApiTokenCreateRequest
type OrganizationApiTokenCreateRequest struct {
	Name        string                     `json:"name"`
	Description *string                    `json:"description,omitempty"`
	Scope       *OrganizationApiTokenScope `json:"scope,omitempty"`
	// the roleId provided by the \"List organization custom roles\" endpoint.
	RoleId               string `json:"role_id"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationApiTokenCreateRequest OrganizationApiTokenCreateRequest

// NewOrganizationApiTokenCreateRequest instantiates a new OrganizationApiTokenCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationApiTokenCreateRequest(name string, roleId string) *OrganizationApiTokenCreateRequest {
	this := OrganizationApiTokenCreateRequest{}
	this.Name = name
	this.RoleId = roleId
	return &this
}

// NewOrganizationApiTokenCreateRequestWithDefaults instantiates a new OrganizationApiTokenCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationApiTokenCreateRequestWithDefaults() *OrganizationApiTokenCreateRequest {
	this := OrganizationApiTokenCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *OrganizationApiTokenCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationApiTokenCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationApiTokenCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrganizationApiTokenCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationApiTokenCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrganizationApiTokenCreateRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrganizationApiTokenCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *OrganizationApiTokenCreateRequest) GetScope() OrganizationApiTokenScope {
	if o == nil || IsNil(o.Scope) {
		var ret OrganizationApiTokenScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationApiTokenCreateRequest) GetScopeOk() (*OrganizationApiTokenScope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *OrganizationApiTokenCreateRequest) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given OrganizationApiTokenScope and assigns it to the Scope field.
func (o *OrganizationApiTokenCreateRequest) SetScope(v OrganizationApiTokenScope) {
	o.Scope = &v
}

// GetRoleId returns the RoleId field value
func (o *OrganizationApiTokenCreateRequest) GetRoleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value
// and a boolean to check if the value has been set.
func (o *OrganizationApiTokenCreateRequest) GetRoleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleId, true
}

// SetRoleId sets field value
func (o *OrganizationApiTokenCreateRequest) SetRoleId(v string) {
	o.RoleId = v
}

func (o OrganizationApiTokenCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationApiTokenCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	toSerialize["role_id"] = o.RoleId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationApiTokenCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"role_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationApiTokenCreateRequest := _OrganizationApiTokenCreateRequest{}

	err = json.Unmarshal(data, &varOrganizationApiTokenCreateRequest)

	if err != nil {
		return err
	}

	*o = OrganizationApiTokenCreateRequest(varOrganizationApiTokenCreateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "scope")
		delete(additionalProperties, "role_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationApiTokenCreateRequest struct {
	value *OrganizationApiTokenCreateRequest
	isSet bool
}

func (v NullableOrganizationApiTokenCreateRequest) Get() *OrganizationApiTokenCreateRequest {
	return v.value
}

func (v *NullableOrganizationApiTokenCreateRequest) Set(val *OrganizationApiTokenCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationApiTokenCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationApiTokenCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationApiTokenCreateRequest(val *OrganizationApiTokenCreateRequest) *NullableOrganizationApiTokenCreateRequest {
	return &NullableOrganizationApiTokenCreateRequest{value: val, isSet: true}
}

func (v NullableOrganizationApiTokenCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationApiTokenCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
