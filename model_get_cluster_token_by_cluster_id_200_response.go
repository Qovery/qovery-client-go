/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the GetClusterTokenByClusterId200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetClusterTokenByClusterId200Response{}

// GetClusterTokenByClusterId200Response struct for GetClusterTokenByClusterId200Response
type GetClusterTokenByClusterId200Response struct {
	ApiVersion           string                                      `json:"apiVersion"`
	Kind                 string                                      `json:"kind"`
	Spec                 map[string]interface{}                      `json:"spec"`
	Status               GetClusterTokenByClusterId200ResponseStatus `json:"status"`
	AdditionalProperties map[string]interface{}
}

type _GetClusterTokenByClusterId200Response GetClusterTokenByClusterId200Response

// NewGetClusterTokenByClusterId200Response instantiates a new GetClusterTokenByClusterId200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetClusterTokenByClusterId200Response(apiVersion string, kind string, spec map[string]interface{}, status GetClusterTokenByClusterId200ResponseStatus) *GetClusterTokenByClusterId200Response {
	this := GetClusterTokenByClusterId200Response{}
	this.ApiVersion = apiVersion
	this.Kind = kind
	this.Spec = spec
	this.Status = status
	return &this
}

// NewGetClusterTokenByClusterId200ResponseWithDefaults instantiates a new GetClusterTokenByClusterId200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetClusterTokenByClusterId200ResponseWithDefaults() *GetClusterTokenByClusterId200Response {
	this := GetClusterTokenByClusterId200Response{}
	return &this
}

// GetApiVersion returns the ApiVersion field value
func (o *GetClusterTokenByClusterId200Response) GetApiVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *GetClusterTokenByClusterId200Response) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *GetClusterTokenByClusterId200Response) SetApiVersion(v string) {
	o.ApiVersion = v
}

// GetKind returns the Kind field value
func (o *GetClusterTokenByClusterId200Response) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *GetClusterTokenByClusterId200Response) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *GetClusterTokenByClusterId200Response) SetKind(v string) {
	o.Kind = v
}

// GetSpec returns the Spec field value
func (o *GetClusterTokenByClusterId200Response) GetSpec() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value
// and a boolean to check if the value has been set.
func (o *GetClusterTokenByClusterId200Response) GetSpecOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Spec, true
}

// SetSpec sets field value
func (o *GetClusterTokenByClusterId200Response) SetSpec(v map[string]interface{}) {
	o.Spec = v
}

// GetStatus returns the Status field value
func (o *GetClusterTokenByClusterId200Response) GetStatus() GetClusterTokenByClusterId200ResponseStatus {
	if o == nil {
		var ret GetClusterTokenByClusterId200ResponseStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GetClusterTokenByClusterId200Response) GetStatusOk() (*GetClusterTokenByClusterId200ResponseStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GetClusterTokenByClusterId200Response) SetStatus(v GetClusterTokenByClusterId200ResponseStatus) {
	o.Status = v
}

func (o GetClusterTokenByClusterId200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetClusterTokenByClusterId200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiVersion"] = o.ApiVersion
	toSerialize["kind"] = o.Kind
	toSerialize["spec"] = o.Spec
	toSerialize["status"] = o.Status

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetClusterTokenByClusterId200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"apiVersion",
		"kind",
		"spec",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetClusterTokenByClusterId200Response := _GetClusterTokenByClusterId200Response{}

	err = json.Unmarshal(data, &varGetClusterTokenByClusterId200Response)

	if err != nil {
		return err
	}

	*o = GetClusterTokenByClusterId200Response(varGetClusterTokenByClusterId200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "apiVersion")
		delete(additionalProperties, "kind")
		delete(additionalProperties, "spec")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetClusterTokenByClusterId200Response struct {
	value *GetClusterTokenByClusterId200Response
	isSet bool
}

func (v NullableGetClusterTokenByClusterId200Response) Get() *GetClusterTokenByClusterId200Response {
	return v.value
}

func (v *NullableGetClusterTokenByClusterId200Response) Set(val *GetClusterTokenByClusterId200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetClusterTokenByClusterId200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetClusterTokenByClusterId200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetClusterTokenByClusterId200Response(val *GetClusterTokenByClusterId200Response) *NullableGetClusterTokenByClusterId200Response {
	return &NullableGetClusterTokenByClusterId200Response{value: val, isSet: true}
}

func (v NullableGetClusterTokenByClusterId200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetClusterTokenByClusterId200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
