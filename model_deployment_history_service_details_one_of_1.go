/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the DeploymentHistoryServiceDetailsOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentHistoryServiceDetailsOneOf1{}

// DeploymentHistoryServiceDetailsOneOf1 ContainerDeploymentHistoryData
type DeploymentHistoryServiceDetailsOneOf1 struct {
	ImageName            string   `json:"image_name"`
	Tag                  string   `json:"tag"`
	Arguments            []string `json:"arguments"`
	Entrypoint           *string  `json:"entrypoint,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DeploymentHistoryServiceDetailsOneOf1 DeploymentHistoryServiceDetailsOneOf1

// NewDeploymentHistoryServiceDetailsOneOf1 instantiates a new DeploymentHistoryServiceDetailsOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentHistoryServiceDetailsOneOf1(imageName string, tag string, arguments []string) *DeploymentHistoryServiceDetailsOneOf1 {
	this := DeploymentHistoryServiceDetailsOneOf1{}
	this.ImageName = imageName
	this.Tag = tag
	this.Arguments = arguments
	return &this
}

// NewDeploymentHistoryServiceDetailsOneOf1WithDefaults instantiates a new DeploymentHistoryServiceDetailsOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentHistoryServiceDetailsOneOf1WithDefaults() *DeploymentHistoryServiceDetailsOneOf1 {
	this := DeploymentHistoryServiceDetailsOneOf1{}
	return &this
}

// GetImageName returns the ImageName field value
func (o *DeploymentHistoryServiceDetailsOneOf1) GetImageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryServiceDetailsOneOf1) GetImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageName, true
}

// SetImageName sets field value
func (o *DeploymentHistoryServiceDetailsOneOf1) SetImageName(v string) {
	o.ImageName = v
}

// GetTag returns the Tag field value
func (o *DeploymentHistoryServiceDetailsOneOf1) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryServiceDetailsOneOf1) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *DeploymentHistoryServiceDetailsOneOf1) SetTag(v string) {
	o.Tag = v
}

// GetArguments returns the Arguments field value
func (o *DeploymentHistoryServiceDetailsOneOf1) GetArguments() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryServiceDetailsOneOf1) GetArgumentsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Arguments, true
}

// SetArguments sets field value
func (o *DeploymentHistoryServiceDetailsOneOf1) SetArguments(v []string) {
	o.Arguments = v
}

// GetEntrypoint returns the Entrypoint field value if set, zero value otherwise.
func (o *DeploymentHistoryServiceDetailsOneOf1) GetEntrypoint() string {
	if o == nil || IsNil(o.Entrypoint) {
		var ret string
		return ret
	}
	return *o.Entrypoint
}

// GetEntrypointOk returns a tuple with the Entrypoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentHistoryServiceDetailsOneOf1) GetEntrypointOk() (*string, bool) {
	if o == nil || IsNil(o.Entrypoint) {
		return nil, false
	}
	return o.Entrypoint, true
}

// HasEntrypoint returns a boolean if a field has been set.
func (o *DeploymentHistoryServiceDetailsOneOf1) HasEntrypoint() bool {
	if o != nil && !IsNil(o.Entrypoint) {
		return true
	}

	return false
}

// SetEntrypoint gets a reference to the given string and assigns it to the Entrypoint field.
func (o *DeploymentHistoryServiceDetailsOneOf1) SetEntrypoint(v string) {
	o.Entrypoint = &v
}

func (o DeploymentHistoryServiceDetailsOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentHistoryServiceDetailsOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["image_name"] = o.ImageName
	toSerialize["tag"] = o.Tag
	toSerialize["arguments"] = o.Arguments
	if !IsNil(o.Entrypoint) {
		toSerialize["entrypoint"] = o.Entrypoint
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DeploymentHistoryServiceDetailsOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"image_name",
		"tag",
		"arguments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeploymentHistoryServiceDetailsOneOf1 := _DeploymentHistoryServiceDetailsOneOf1{}

	err = json.Unmarshal(data, &varDeploymentHistoryServiceDetailsOneOf1)

	if err != nil {
		return err
	}

	*o = DeploymentHistoryServiceDetailsOneOf1(varDeploymentHistoryServiceDetailsOneOf1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "image_name")
		delete(additionalProperties, "tag")
		delete(additionalProperties, "arguments")
		delete(additionalProperties, "entrypoint")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeploymentHistoryServiceDetailsOneOf1 struct {
	value *DeploymentHistoryServiceDetailsOneOf1
	isSet bool
}

func (v NullableDeploymentHistoryServiceDetailsOneOf1) Get() *DeploymentHistoryServiceDetailsOneOf1 {
	return v.value
}

func (v *NullableDeploymentHistoryServiceDetailsOneOf1) Set(val *DeploymentHistoryServiceDetailsOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentHistoryServiceDetailsOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentHistoryServiceDetailsOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentHistoryServiceDetailsOneOf1(val *DeploymentHistoryServiceDetailsOneOf1) *NullableDeploymentHistoryServiceDetailsOneOf1 {
	return &NullableDeploymentHistoryServiceDetailsOneOf1{value: val, isSet: true}
}

func (v NullableDeploymentHistoryServiceDetailsOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentHistoryServiceDetailsOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
