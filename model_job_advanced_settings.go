/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.3
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
)

// JobAdvancedSettings struct for JobAdvancedSettings
type JobAdvancedSettings struct {
	// define the max timeout for the build
	BuildTimeoutMaxSec *int32 `json:"build.timeout_max_sec,omitempty"`
	// define the max cpu resources (in milli)
	BuildCpuMaxInMilli *int32 `json:"build.cpu_max_in_milli,omitempty"`
	// define the max ram resources (in gib)
	BuildRamMaxInGib *int32 `json:"build.ram_max_in_gib,omitempty"`
	// define how long in seconds an application is supposed to be stopped gracefully
	DeploymentTerminationGracePeriodSeconds *int32        `json:"deployment.termination_grace_period_seconds,omitempty"`
	JobDeleteTtlSecondsAfterFinished        NullableInt32 `json:"job.delete_ttl_seconds_after_finished,omitempty"`
	CronjobConcurrencyPolicy                *string       `json:"cronjob.concurrency_policy,omitempty"`
	CronjobFailedJobsHistoryLimit           *int32        `json:"cronjob.failed_jobs_history_limit,omitempty"`
	CronjobSuccessJobsHistoryLimit          *int32        `json:"cronjob.success_jobs_history_limit,omitempty"`
	// Allows you to set an existing Kubernetes service account name
	SecurityServiceAccountName *string `json:"security.service_account_name,omitempty"`
}

// NewJobAdvancedSettings instantiates a new JobAdvancedSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobAdvancedSettings() *JobAdvancedSettings {
	this := JobAdvancedSettings{}
	var buildTimeoutMaxSec int32 = 1800
	this.BuildTimeoutMaxSec = &buildTimeoutMaxSec
	var buildCpuMaxInMilli int32 = 4000
	this.BuildCpuMaxInMilli = &buildCpuMaxInMilli
	var buildRamMaxInGib int32 = 8
	this.BuildRamMaxInGib = &buildRamMaxInGib
	var deploymentTerminationGracePeriodSeconds int32 = 60
	this.DeploymentTerminationGracePeriodSeconds = &deploymentTerminationGracePeriodSeconds
	var cronjobConcurrencyPolicy string = "Forbid"
	this.CronjobConcurrencyPolicy = &cronjobConcurrencyPolicy
	var cronjobFailedJobsHistoryLimit int32 = 1
	this.CronjobFailedJobsHistoryLimit = &cronjobFailedJobsHistoryLimit
	var cronjobSuccessJobsHistoryLimit int32 = 1
	this.CronjobSuccessJobsHistoryLimit = &cronjobSuccessJobsHistoryLimit
	var securityServiceAccountName string = ""
	this.SecurityServiceAccountName = &securityServiceAccountName
	return &this
}

// NewJobAdvancedSettingsWithDefaults instantiates a new JobAdvancedSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobAdvancedSettingsWithDefaults() *JobAdvancedSettings {
	this := JobAdvancedSettings{}
	var buildTimeoutMaxSec int32 = 1800
	this.BuildTimeoutMaxSec = &buildTimeoutMaxSec
	var buildCpuMaxInMilli int32 = 4000
	this.BuildCpuMaxInMilli = &buildCpuMaxInMilli
	var buildRamMaxInGib int32 = 8
	this.BuildRamMaxInGib = &buildRamMaxInGib
	var deploymentTerminationGracePeriodSeconds int32 = 60
	this.DeploymentTerminationGracePeriodSeconds = &deploymentTerminationGracePeriodSeconds
	var cronjobConcurrencyPolicy string = "Forbid"
	this.CronjobConcurrencyPolicy = &cronjobConcurrencyPolicy
	var cronjobFailedJobsHistoryLimit int32 = 1
	this.CronjobFailedJobsHistoryLimit = &cronjobFailedJobsHistoryLimit
	var cronjobSuccessJobsHistoryLimit int32 = 1
	this.CronjobSuccessJobsHistoryLimit = &cronjobSuccessJobsHistoryLimit
	var securityServiceAccountName string = ""
	this.SecurityServiceAccountName = &securityServiceAccountName
	return &this
}

// GetBuildTimeoutMaxSec returns the BuildTimeoutMaxSec field value if set, zero value otherwise.
func (o *JobAdvancedSettings) GetBuildTimeoutMaxSec() int32 {
	if o == nil || o.BuildTimeoutMaxSec == nil {
		var ret int32
		return ret
	}
	return *o.BuildTimeoutMaxSec
}

// GetBuildTimeoutMaxSecOk returns a tuple with the BuildTimeoutMaxSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobAdvancedSettings) GetBuildTimeoutMaxSecOk() (*int32, bool) {
	if o == nil || o.BuildTimeoutMaxSec == nil {
		return nil, false
	}
	return o.BuildTimeoutMaxSec, true
}

// HasBuildTimeoutMaxSec returns a boolean if a field has been set.
func (o *JobAdvancedSettings) HasBuildTimeoutMaxSec() bool {
	if o != nil && o.BuildTimeoutMaxSec != nil {
		return true
	}

	return false
}

// SetBuildTimeoutMaxSec gets a reference to the given int32 and assigns it to the BuildTimeoutMaxSec field.
func (o *JobAdvancedSettings) SetBuildTimeoutMaxSec(v int32) {
	o.BuildTimeoutMaxSec = &v
}

// GetBuildCpuMaxInMilli returns the BuildCpuMaxInMilli field value if set, zero value otherwise.
func (o *JobAdvancedSettings) GetBuildCpuMaxInMilli() int32 {
	if o == nil || o.BuildCpuMaxInMilli == nil {
		var ret int32
		return ret
	}
	return *o.BuildCpuMaxInMilli
}

// GetBuildCpuMaxInMilliOk returns a tuple with the BuildCpuMaxInMilli field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobAdvancedSettings) GetBuildCpuMaxInMilliOk() (*int32, bool) {
	if o == nil || o.BuildCpuMaxInMilli == nil {
		return nil, false
	}
	return o.BuildCpuMaxInMilli, true
}

// HasBuildCpuMaxInMilli returns a boolean if a field has been set.
func (o *JobAdvancedSettings) HasBuildCpuMaxInMilli() bool {
	if o != nil && o.BuildCpuMaxInMilli != nil {
		return true
	}

	return false
}

// SetBuildCpuMaxInMilli gets a reference to the given int32 and assigns it to the BuildCpuMaxInMilli field.
func (o *JobAdvancedSettings) SetBuildCpuMaxInMilli(v int32) {
	o.BuildCpuMaxInMilli = &v
}

// GetBuildRamMaxInGib returns the BuildRamMaxInGib field value if set, zero value otherwise.
func (o *JobAdvancedSettings) GetBuildRamMaxInGib() int32 {
	if o == nil || o.BuildRamMaxInGib == nil {
		var ret int32
		return ret
	}
	return *o.BuildRamMaxInGib
}

// GetBuildRamMaxInGibOk returns a tuple with the BuildRamMaxInGib field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobAdvancedSettings) GetBuildRamMaxInGibOk() (*int32, bool) {
	if o == nil || o.BuildRamMaxInGib == nil {
		return nil, false
	}
	return o.BuildRamMaxInGib, true
}

// HasBuildRamMaxInGib returns a boolean if a field has been set.
func (o *JobAdvancedSettings) HasBuildRamMaxInGib() bool {
	if o != nil && o.BuildRamMaxInGib != nil {
		return true
	}

	return false
}

// SetBuildRamMaxInGib gets a reference to the given int32 and assigns it to the BuildRamMaxInGib field.
func (o *JobAdvancedSettings) SetBuildRamMaxInGib(v int32) {
	o.BuildRamMaxInGib = &v
}

// GetDeploymentTerminationGracePeriodSeconds returns the DeploymentTerminationGracePeriodSeconds field value if set, zero value otherwise.
func (o *JobAdvancedSettings) GetDeploymentTerminationGracePeriodSeconds() int32 {
	if o == nil || o.DeploymentTerminationGracePeriodSeconds == nil {
		var ret int32
		return ret
	}
	return *o.DeploymentTerminationGracePeriodSeconds
}

// GetDeploymentTerminationGracePeriodSecondsOk returns a tuple with the DeploymentTerminationGracePeriodSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobAdvancedSettings) GetDeploymentTerminationGracePeriodSecondsOk() (*int32, bool) {
	if o == nil || o.DeploymentTerminationGracePeriodSeconds == nil {
		return nil, false
	}
	return o.DeploymentTerminationGracePeriodSeconds, true
}

// HasDeploymentTerminationGracePeriodSeconds returns a boolean if a field has been set.
func (o *JobAdvancedSettings) HasDeploymentTerminationGracePeriodSeconds() bool {
	if o != nil && o.DeploymentTerminationGracePeriodSeconds != nil {
		return true
	}

	return false
}

// SetDeploymentTerminationGracePeriodSeconds gets a reference to the given int32 and assigns it to the DeploymentTerminationGracePeriodSeconds field.
func (o *JobAdvancedSettings) SetDeploymentTerminationGracePeriodSeconds(v int32) {
	o.DeploymentTerminationGracePeriodSeconds = &v
}

// GetJobDeleteTtlSecondsAfterFinished returns the JobDeleteTtlSecondsAfterFinished field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobAdvancedSettings) GetJobDeleteTtlSecondsAfterFinished() int32 {
	if o == nil || o.JobDeleteTtlSecondsAfterFinished.Get() == nil {
		var ret int32
		return ret
	}
	return *o.JobDeleteTtlSecondsAfterFinished.Get()
}

// GetJobDeleteTtlSecondsAfterFinishedOk returns a tuple with the JobDeleteTtlSecondsAfterFinished field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobAdvancedSettings) GetJobDeleteTtlSecondsAfterFinishedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobDeleteTtlSecondsAfterFinished.Get(), o.JobDeleteTtlSecondsAfterFinished.IsSet()
}

// HasJobDeleteTtlSecondsAfterFinished returns a boolean if a field has been set.
func (o *JobAdvancedSettings) HasJobDeleteTtlSecondsAfterFinished() bool {
	if o != nil && o.JobDeleteTtlSecondsAfterFinished.IsSet() {
		return true
	}

	return false
}

// SetJobDeleteTtlSecondsAfterFinished gets a reference to the given NullableInt32 and assigns it to the JobDeleteTtlSecondsAfterFinished field.
func (o *JobAdvancedSettings) SetJobDeleteTtlSecondsAfterFinished(v int32) {
	o.JobDeleteTtlSecondsAfterFinished.Set(&v)
}

// SetJobDeleteTtlSecondsAfterFinishedNil sets the value for JobDeleteTtlSecondsAfterFinished to be an explicit nil
func (o *JobAdvancedSettings) SetJobDeleteTtlSecondsAfterFinishedNil() {
	o.JobDeleteTtlSecondsAfterFinished.Set(nil)
}

// UnsetJobDeleteTtlSecondsAfterFinished ensures that no value is present for JobDeleteTtlSecondsAfterFinished, not even an explicit nil
func (o *JobAdvancedSettings) UnsetJobDeleteTtlSecondsAfterFinished() {
	o.JobDeleteTtlSecondsAfterFinished.Unset()
}

// GetCronjobConcurrencyPolicy returns the CronjobConcurrencyPolicy field value if set, zero value otherwise.
func (o *JobAdvancedSettings) GetCronjobConcurrencyPolicy() string {
	if o == nil || o.CronjobConcurrencyPolicy == nil {
		var ret string
		return ret
	}
	return *o.CronjobConcurrencyPolicy
}

// GetCronjobConcurrencyPolicyOk returns a tuple with the CronjobConcurrencyPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobAdvancedSettings) GetCronjobConcurrencyPolicyOk() (*string, bool) {
	if o == nil || o.CronjobConcurrencyPolicy == nil {
		return nil, false
	}
	return o.CronjobConcurrencyPolicy, true
}

// HasCronjobConcurrencyPolicy returns a boolean if a field has been set.
func (o *JobAdvancedSettings) HasCronjobConcurrencyPolicy() bool {
	if o != nil && o.CronjobConcurrencyPolicy != nil {
		return true
	}

	return false
}

// SetCronjobConcurrencyPolicy gets a reference to the given string and assigns it to the CronjobConcurrencyPolicy field.
func (o *JobAdvancedSettings) SetCronjobConcurrencyPolicy(v string) {
	o.CronjobConcurrencyPolicy = &v
}

// GetCronjobFailedJobsHistoryLimit returns the CronjobFailedJobsHistoryLimit field value if set, zero value otherwise.
func (o *JobAdvancedSettings) GetCronjobFailedJobsHistoryLimit() int32 {
	if o == nil || o.CronjobFailedJobsHistoryLimit == nil {
		var ret int32
		return ret
	}
	return *o.CronjobFailedJobsHistoryLimit
}

// GetCronjobFailedJobsHistoryLimitOk returns a tuple with the CronjobFailedJobsHistoryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobAdvancedSettings) GetCronjobFailedJobsHistoryLimitOk() (*int32, bool) {
	if o == nil || o.CronjobFailedJobsHistoryLimit == nil {
		return nil, false
	}
	return o.CronjobFailedJobsHistoryLimit, true
}

// HasCronjobFailedJobsHistoryLimit returns a boolean if a field has been set.
func (o *JobAdvancedSettings) HasCronjobFailedJobsHistoryLimit() bool {
	if o != nil && o.CronjobFailedJobsHistoryLimit != nil {
		return true
	}

	return false
}

// SetCronjobFailedJobsHistoryLimit gets a reference to the given int32 and assigns it to the CronjobFailedJobsHistoryLimit field.
func (o *JobAdvancedSettings) SetCronjobFailedJobsHistoryLimit(v int32) {
	o.CronjobFailedJobsHistoryLimit = &v
}

// GetCronjobSuccessJobsHistoryLimit returns the CronjobSuccessJobsHistoryLimit field value if set, zero value otherwise.
func (o *JobAdvancedSettings) GetCronjobSuccessJobsHistoryLimit() int32 {
	if o == nil || o.CronjobSuccessJobsHistoryLimit == nil {
		var ret int32
		return ret
	}
	return *o.CronjobSuccessJobsHistoryLimit
}

// GetCronjobSuccessJobsHistoryLimitOk returns a tuple with the CronjobSuccessJobsHistoryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobAdvancedSettings) GetCronjobSuccessJobsHistoryLimitOk() (*int32, bool) {
	if o == nil || o.CronjobSuccessJobsHistoryLimit == nil {
		return nil, false
	}
	return o.CronjobSuccessJobsHistoryLimit, true
}

// HasCronjobSuccessJobsHistoryLimit returns a boolean if a field has been set.
func (o *JobAdvancedSettings) HasCronjobSuccessJobsHistoryLimit() bool {
	if o != nil && o.CronjobSuccessJobsHistoryLimit != nil {
		return true
	}

	return false
}

// SetCronjobSuccessJobsHistoryLimit gets a reference to the given int32 and assigns it to the CronjobSuccessJobsHistoryLimit field.
func (o *JobAdvancedSettings) SetCronjobSuccessJobsHistoryLimit(v int32) {
	o.CronjobSuccessJobsHistoryLimit = &v
}

// GetSecurityServiceAccountName returns the SecurityServiceAccountName field value if set, zero value otherwise.
func (o *JobAdvancedSettings) GetSecurityServiceAccountName() string {
	if o == nil || o.SecurityServiceAccountName == nil {
		var ret string
		return ret
	}
	return *o.SecurityServiceAccountName
}

// GetSecurityServiceAccountNameOk returns a tuple with the SecurityServiceAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobAdvancedSettings) GetSecurityServiceAccountNameOk() (*string, bool) {
	if o == nil || o.SecurityServiceAccountName == nil {
		return nil, false
	}
	return o.SecurityServiceAccountName, true
}

// HasSecurityServiceAccountName returns a boolean if a field has been set.
func (o *JobAdvancedSettings) HasSecurityServiceAccountName() bool {
	if o != nil && o.SecurityServiceAccountName != nil {
		return true
	}

	return false
}

// SetSecurityServiceAccountName gets a reference to the given string and assigns it to the SecurityServiceAccountName field.
func (o *JobAdvancedSettings) SetSecurityServiceAccountName(v string) {
	o.SecurityServiceAccountName = &v
}

func (o JobAdvancedSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BuildTimeoutMaxSec != nil {
		toSerialize["build.timeout_max_sec"] = o.BuildTimeoutMaxSec
	}
	if o.BuildCpuMaxInMilli != nil {
		toSerialize["build.cpu_max_in_milli"] = o.BuildCpuMaxInMilli
	}
	if o.BuildRamMaxInGib != nil {
		toSerialize["build.ram_max_in_gib"] = o.BuildRamMaxInGib
	}
	if o.DeploymentTerminationGracePeriodSeconds != nil {
		toSerialize["deployment.termination_grace_period_seconds"] = o.DeploymentTerminationGracePeriodSeconds
	}
	if o.JobDeleteTtlSecondsAfterFinished.IsSet() {
		toSerialize["job.delete_ttl_seconds_after_finished"] = o.JobDeleteTtlSecondsAfterFinished.Get()
	}
	if o.CronjobConcurrencyPolicy != nil {
		toSerialize["cronjob.concurrency_policy"] = o.CronjobConcurrencyPolicy
	}
	if o.CronjobFailedJobsHistoryLimit != nil {
		toSerialize["cronjob.failed_jobs_history_limit"] = o.CronjobFailedJobsHistoryLimit
	}
	if o.CronjobSuccessJobsHistoryLimit != nil {
		toSerialize["cronjob.success_jobs_history_limit"] = o.CronjobSuccessJobsHistoryLimit
	}
	if o.SecurityServiceAccountName != nil {
		toSerialize["security.service_account_name"] = o.SecurityServiceAccountName
	}
	return json.Marshal(toSerialize)
}

type NullableJobAdvancedSettings struct {
	value *JobAdvancedSettings
	isSet bool
}

func (v NullableJobAdvancedSettings) Get() *JobAdvancedSettings {
	return v.value
}

func (v *NullableJobAdvancedSettings) Set(val *JobAdvancedSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableJobAdvancedSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableJobAdvancedSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobAdvancedSettings(val *JobAdvancedSettings) *NullableJobAdvancedSettings {
	return &NullableJobAdvancedSettings{value: val, isSet: true}
}

func (v NullableJobAdvancedSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobAdvancedSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
