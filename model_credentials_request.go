/*
Qovery API

- Qovery is the fastest way to deploy your full-stack apps on any Cloud provider. - ℹ️ The API is stable and still in development.

API version: 1.0.4
Contact: support+api+documentation@qovery.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qovery

import (
	"encoding/json"
	"fmt"
)

// checks if the CredentialsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialsRequest{}

// CredentialsRequest struct for CredentialsRequest
type CredentialsRequest struct {
	Login                string `json:"login"`
	Password             string `json:"password"`
	AdditionalProperties map[string]interface{}
}

type _CredentialsRequest CredentialsRequest

// NewCredentialsRequest instantiates a new CredentialsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsRequest(login string, password string) *CredentialsRequest {
	this := CredentialsRequest{}
	this.Login = login
	this.Password = password
	return &this
}

// NewCredentialsRequestWithDefaults instantiates a new CredentialsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsRequestWithDefaults() *CredentialsRequest {
	this := CredentialsRequest{}
	return &this
}

// GetLogin returns the Login field value
func (o *CredentialsRequest) GetLogin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Login
}

// GetLoginOk returns a tuple with the Login field value
// and a boolean to check if the value has been set.
func (o *CredentialsRequest) GetLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Login, true
}

// SetLogin sets field value
func (o *CredentialsRequest) SetLogin(v string) {
	o.Login = v
}

// GetPassword returns the Password field value
func (o *CredentialsRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *CredentialsRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *CredentialsRequest) SetPassword(v string) {
	o.Password = v
}

func (o CredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["login"] = o.Login
	toSerialize["password"] = o.Password

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CredentialsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"login",
		"password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCredentialsRequest := _CredentialsRequest{}

	err = json.Unmarshal(data, &varCredentialsRequest)

	if err != nil {
		return err
	}

	*o = CredentialsRequest(varCredentialsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "login")
		delete(additionalProperties, "password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCredentialsRequest struct {
	value *CredentialsRequest
	isSet bool
}

func (v NullableCredentialsRequest) Get() *CredentialsRequest {
	return v.value
}

func (v *NullableCredentialsRequest) Set(val *CredentialsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsRequest(val *CredentialsRequest) *NullableCredentialsRequest {
	return &NullableCredentialsRequest{value: val, isSet: true}
}

func (v NullableCredentialsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
